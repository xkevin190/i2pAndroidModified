/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package net.i2p.android.router;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
  }
  public static final class array {
    public static final int access_mode_names=0x7f020000;
    public static final int access_modes=0x7f020001;
    public static final int help_categories=0x7f020002;
    public static final int language_names=0x7f020003;
    public static final int languages=0x7f020004;
    public static final int log_level_list=0x7f020005;
    public static final int log_levels=0x7f020006;
    public static final int netdb_pages=0x7f020007;
    public static final int recommended_browser_labels=0x7f020008;
    public static final int recommended_browsers=0x7f020009;
    public static final int setting0to3=0x7f02000a;
    public static final int setting2to2=0x7f02000b;
    public static final int sigtype_names=0x7f02000c;
    public static final int sigtypes=0x7f02000d;
    public static final int supported_browser_labels=0x7f02000e;
    public static final int supported_browsers=0x7f02000f;
    public static final int tunnel_profile_names=0x7f020010;
    public static final int tunnel_profiles=0x7f020011;
    public static final int unsupported_browsers=0x7f020012;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f030000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f030001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f030002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f030003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f030004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f030005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f030006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f030007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f030008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f030009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f03000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f03000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f03000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f03000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f03000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f03000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f030010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f030011;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f030012;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f030013;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f030014;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f030015;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f030016;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f030017;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f030018;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f030019;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f03001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f03001b;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f03001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f03001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f03001e;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f03001f;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f030020;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f030021;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int adjustable=0x7f030022;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f030023;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f030024;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f030025;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f030026;
    /**
     * Whether the preference allows displaying divider on top
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAbove=0x7f030027;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAfterLastItem=0x7f030028;
    /**
     * Whether the preference allows displaying divider below it
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerBelow=0x7f030029;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f03002a;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f03002b;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f03002c;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f03002d;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f03002e;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f03002f;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f030030;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f030031;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f030032;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f030033;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f030034;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f030035;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundColor=0x7f030036;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f030037;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f030038;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f030039;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f03003a;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f03003b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int borderColor=0x7f03003c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderThickness=0x7f03003d;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f03003e;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f03003f;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f030040;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f030041;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f030042;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f030043;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f030044;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f030045;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f030046;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f030047;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f030048;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f030049;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f03004a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int centered=0x7f03004b;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkBoxPreferenceStyle=0x7f03004c;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f03004d;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f03004e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int clipPadding=0x7f03004f;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f030050;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f030051;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int clp_valueInTitle=0x7f030052;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f030053;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f030054;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f030055;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f030056;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f030057;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f030058;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f030059;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f03005a;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f03005b;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f03005c;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f03005d;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f03005e;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f03005f;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f030060;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f030061;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f030062;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f030063;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f030064;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f030065;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f030066;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f030067;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f030068;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f030069;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f03006a;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f03006b;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f03006c;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f03006d;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f03006e;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogIcon=0x7f03006f;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogLayout=0x7f030070;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessage=0x7f030071;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogPreferenceStyle=0x7f030072;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f030073;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f030074;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogTitle=0x7f030075;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDependentsState=0x7f030076;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f030077;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f030078;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f030079;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f03007a;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f03007b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int domainLineColor=0x7f03007c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainLineExtension=0x7f03007d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainLineThickness=0x7f03007e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int domainOriginLineColor=0x7f03007f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainOriginLineThickness=0x7f030080;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainStep=0x7f030081;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>increment_by_pixels</td><td>2</td><td></td></tr>
     * <tr><td>increment_by_val</td><td>1</td><td></td></tr>
     * <tr><td>subdivide</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int domainStepMode=0x7f030082;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int domainTitle=0x7f030083;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int domainTitleAnchor=0x7f030084;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainTitleHeight=0x7f030085;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int domainTitleHeightMode=0x7f030086;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainTitleHorizontalPosition=0x7f030087;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int domainTitleHorizontalPositioning=0x7f030088;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int domainTitleTextColor=0x7f030089;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainTitleTextSize=0x7f03008a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainTitleVerticalPosition=0x7f03008b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int domainTitleVerticalPositioning=0x7f03008c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int domainTitleVisible=0x7f03008d;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int domainTitleWidth=0x7f03008e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int domainTitleWidthMode=0x7f03008f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int drawGridOnTop=0x7f030090;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f030091;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f030092;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f030093;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f030094;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropdownPreferenceStyle=0x7f030095;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f030096;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f030097;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextPreferenceStyle=0x7f030098;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f030099;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f03009a;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f03009b;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f03009c;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f03009d;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f03009e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_addButtonColorNormal=0x7f03009f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_addButtonColorPressed=0x7f0300a0;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_addButtonPlusIconColor=0x7f0300a1;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fab_addButtonSize=0x7f0300a2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fab_addButtonStrokeVisible=0x7f0300a3;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_colorDisabled=0x7f0300a4;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_colorNormal=0x7f0300a5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_colorPressed=0x7f0300a6;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>down</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>2</td><td></td></tr>
     * <tr><td>right</td><td>3</td><td></td></tr>
     * <tr><td>up</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fab_expandDirection=0x7f0300a7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fab_icon=0x7f0300a8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fab_labelStyle=0x7f0300a9;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int fab_labelsPosition=0x7f0300aa;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_plusIconColor=0x7f0300ab;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fab_size=0x7f0300ac;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fab_stroke_visible=0x7f0300ad;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fab_title=0x7f0300ae;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fadeDelay=0x7f0300af;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fadeLength=0x7f0300b0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fades=0x7f0300b1;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f0300b2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f0300b3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f0300b4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f0300b5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f0300b6;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fillColor=0x7f0300b7;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f0300b8;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f0300b9;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0300ba;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f0300bb;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f0300bc;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f0300bd;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f0300be;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f0300bf;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f0300c0;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f0300c1;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f0300c2;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f0300c3;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int footerColor=0x7f0300c4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int footerIndicatorHeight=0x7f0300c5;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>triangle</td><td>1</td><td></td></tr>
     * <tr><td>underline</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int footerIndicatorStyle=0x7f0300c6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int footerIndicatorUnderlinePadding=0x7f0300c7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int footerLineHeight=0x7f0300c8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int footerPadding=0x7f0300c9;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fragment=0x7f0300ca;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f0300cb;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapWidth=0x7f0300cc;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f0300cd;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int graphAnchor=0x7f0300ce;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int graphBackgroundColor=0x7f0300cf;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphHeight=0x7f0300d0;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int graphHeightMode=0x7f0300d1;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphHorizontalPosition=0x7f0300d2;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int graphHorizontalPositioning=0x7f0300d3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphMarginBottom=0x7f0300d4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphMarginLeft=0x7f0300d5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphMarginRight=0x7f0300d6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphMarginTop=0x7f0300d7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphPaddingBottom=0x7f0300d8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphPaddingLeft=0x7f0300d9;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphPaddingRight=0x7f0300da;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphPaddingTop=0x7f0300db;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>negative_ninety_degrees</td><td>1</td><td></td></tr>
     * <tr><td>ninety_degrees</td><td>0</td><td></td></tr>
     * <tr><td>none</td><td>3</td><td></td></tr>
     * <tr><td>one_hundred_eighty_degrees</td><td>2</td><td>Graph widget is rendered upside-down</td></tr>
     * </table>
     */
    public static final int graphRotation=0x7f0300dc;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphVerticalPosition=0x7f0300dd;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int graphVerticalPositioning=0x7f0300de;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int graphVisible=0x7f0300df;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int graphWidth=0x7f0300e0;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int graphWidthMode=0x7f0300e1;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int gridBackgroundColor=0x7f0300e2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int gridClippingEnabled=0x7f0300e3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridInsetBottom=0x7f0300e4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridInsetLeft=0x7f0300e5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridInsetRight=0x7f0300e6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridInsetTop=0x7f0300e7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f0300e8;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f0300e9;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f0300ea;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f0300eb;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f0300ec;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconSpaceReserved=0x7f0300ed;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f0300ee;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f0300ef;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f0300f0;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f0300f1;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f0300f2;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f0300f3;
    /**
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int initialExpandedChildrenCount=0x7f0300f4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f0300f5;
    /**
     * Whether the Preference is visible. By default, this is set to true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isPreferenceVisible=0x7f0300f6;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f0300f7;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f0300f8;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f0300f9;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f0300fa;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f0300fb;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f0300fc;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f0300fd;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f0300fe;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f0300ff;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f030100;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f030101;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f030102;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int legendAnchor=0x7f030103;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int legendHeight=0x7f030104;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int legendHeightMode=0x7f030105;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int legendHorizontalPosition=0x7f030106;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int legendHorizontalPositioning=0x7f030107;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int legendIconHeight=0x7f030108;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int legendIconHeightMode=0x7f030109;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int legendIconWidth=0x7f03010a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int legendIconWidthMode=0x7f03010b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int legendTextColor=0x7f03010c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int legendTextSize=0x7f03010d;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int legendVerticalPosition=0x7f03010e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int legendVerticalPositioning=0x7f03010f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int legendVisible=0x7f030110;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int legendWidth=0x7f030111;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int legendWidthMode=0x7f030112;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineExtensionBottom=0x7f030113;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineExtensionLeft=0x7f030114;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineExtensionRight=0x7f030115;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineExtensionTop=0x7f030116;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f030117;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lineLabelAlignBottom=0x7f030118;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lineLabelAlignLeft=0x7f030119;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lineLabelAlignRight=0x7f03011a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lineLabelAlignTop=0x7f03011b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelInsetBottom=0x7f03011c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelInsetLeft=0x7f03011d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelInsetRight=0x7f03011e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelInsetTop=0x7f03011f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lineLabelRotationBottom=0x7f030120;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lineLabelRotationLeft=0x7f030121;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lineLabelRotationRight=0x7f030122;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lineLabelRotationTop=0x7f030123;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextColorBottom=0x7f030124;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextColorLeft=0x7f030125;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextColorRight=0x7f030126;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextColorTop=0x7f030127;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextSizeBottom=0x7f030128;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextSizeLeft=0x7f030129;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextSizeRight=0x7f03012a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineLabelTextSizeTop=0x7f03012b;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>8</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int lineLabels=0x7f03012c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>top</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int linePosition=0x7f03012d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineWidth=0x7f03012e;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f03012f;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f030130;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f030131;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f030132;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f030133;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f030134;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f030135;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f030136;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f030137;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f030138;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f030139;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f03013a;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f03013b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int marginBottom=0x7f03013c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int marginLeft=0x7f03013d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int marginRight=0x7f03013e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int marginTop=0x7f03013f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int markupEnabled=0x7f030140;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int matProg_barColor=0x7f030141;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int matProg_barSpinCycleTime=0x7f030142;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int matProg_barWidth=0x7f030143;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int matProg_circleRadius=0x7f030144;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int matProg_fillRadius=0x7f030145;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int matProg_linearProgress=0x7f030146;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int matProg_progressIndeterminate=0x7f030147;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int matProg_rimColor=0x7f030148;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int matProg_rimWidth=0x7f030149;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int matProg_spinSpeed=0x7f03014a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f03014b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f03014c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxWidth=0x7f03014d;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f03014e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int min=0x7f03014f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int msbp_defaultValue=0x7f030150;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int msbp_maxValue=0x7f030151;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int msbp_measurementUnit=0x7f030152;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f030153;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f030154;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f030155;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f030156;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int negativeButtonText=0x7f030157;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f030158;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f030159;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f03015a;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f03015b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottom=0x7f03015c;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f03015d;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f03015e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingLeft=0x7f03015f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingRight=0x7f030160;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f030161;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTop=0x7f030162;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f030163;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int pageColor=0x7f030164;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f030165;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f030166;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f030167;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f030168;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int pieBorderColor=0x7f030169;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pieBorderThickness=0x7f03016a;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f03016b;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f03016c;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f03016d;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int positiveButtonText=0x7f03016e;
    /**
     * Default style for the PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceActivityStyle=0x7f03016f;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryStyle=0x7f030170;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentCompatStyle=0x7f030171;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentListStyle=0x7f030172;
    /**
     * Preference fragment padding side
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int preferenceFragmentPaddingSide=0x7f030173;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentStyle=0x7f030174;
    /**
     * Preference headers panel style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceHeaderPanelStyle=0x7f030175;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceInformationStyle=0x7f030176;
    /**
     * The preference layout that has the child/tabbed effect.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceLayoutChild=0x7f030177;
    /**
     * Preference list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceListStyle=0x7f030178;
    /**
     * Preference panel style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferencePanelStyle=0x7f030179;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceScreenStyle=0x7f03017a;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceStyle=0x7f03017b;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceTheme=0x7f03017c;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f03017d;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bar</td><td>2</td><td></td></tr>
     * <tr><td>candlestick</td><td>1</td><td></td></tr>
     * <tr><td>line_and_point</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int previewMode=0x7f03017e;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f03017f;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f030180;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f030181;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f030182;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f030183;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int radius=0x7f030184;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rangeLineColor=0x7f030185;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeLineExtension=0x7f030186;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeLineThickness=0x7f030187;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rangeOriginLineColor=0x7f030188;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeOriginLineThickness=0x7f030189;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeStep=0x7f03018a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>increment_by_pixels</td><td>2</td><td></td></tr>
     * <tr><td>increment_by_val</td><td>1</td><td></td></tr>
     * <tr><td>subdivide</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int rangeStepMode=0x7f03018b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int rangeTitle=0x7f03018c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int rangeTitleAnchor=0x7f03018d;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeTitleHeight=0x7f03018e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int rangeTitleHeightMode=0x7f03018f;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeTitleHorizontalPosition=0x7f030190;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int rangeTitleHorizontalPositioning=0x7f030191;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rangeTitleTextColor=0x7f030192;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeTitleTextSize=0x7f030193;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeTitleVerticalPosition=0x7f030194;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int rangeTitleVerticalPositioning=0x7f030195;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int rangeTitleVisible=0x7f030196;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rangeTitleWidth=0x7f030197;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int rangeTitleWidthMode=0x7f030198;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f030199;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f03019a;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f03019b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>use_background_thread</td><td>0</td><td></td></tr>
     * <tr><td>use_main_thread</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int renderMode=0x7f03019c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f03019d;
    /**
     * Default style for RingtonePreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ringtonePreferenceStyle=0x7f03019e;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f03019f;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f0301a0;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f0301a1;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int seekBarIncrement=0x7f0301a2;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarPreferenceStyle=0x7f0301a3;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f0301a4;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f0301a5;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f0301a6;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f0301a7;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectedBold=0x7f0301a8;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int selectedColor=0x7f0301a9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shadowDrawable=0x7f0301aa;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shadowVisible=0x7f0301ab;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f0301ac;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f0301ad;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f0301ae;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showSeekBarValue=0x7f0301af;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f0301b0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f0301b1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f0301b2;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLineTitle=0x7f0301b3;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int snap=0x7f0301b4;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f0301b5;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f0301b6;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f0301b7;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f0301b8;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f0301b9;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f0301ba;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f0301bb;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f0301bc;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f0301bd;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f0301be;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int strokeWidth=0x7f0301bf;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f0301c0;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f0301c1;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f0301c2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f0301c3;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f0301c4;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f0301c5;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f0301c6;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f0301c7;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f0301c8;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f0301c9;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f0301ca;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f0301cb;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceCompatStyle=0x7f0301cc;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceStyle=0x7f0301cd;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f0301ce;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f0301cf;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOff=0x7f0301d0;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOn=0x7f0301d1;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f0301d2;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f0301d3;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f0301d4;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f0301d5;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f0301d6;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f0301d7;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f0301d8;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f0301d9;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f0301da;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f0301db;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f0301dc;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f0301dd;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f0301de;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f0301df;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f0301e0;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f0301e1;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f0301e2;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f0301e3;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f0301e4;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f0301e5;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f0301e6;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f0301e7;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f0301e8;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f0301e9;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f0301ea;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f0301eb;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f0301ec;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f0301ed;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titlePadding=0x7f0301ee;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f0301ef;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f0301f0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleTextSize=0x7f0301f1;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f0301f2;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f0301f3;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f0301f4;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f0301f5;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f0301f6;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f0301f7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int topPadding=0x7f0301f8;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f0301f9;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f0301fa;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f0301fb;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f0301fc;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int unselectedColor=0x7f0301fd;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f0301fe;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f0301ff;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int vpiCirclePageIndicatorStyle=0x7f030200;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int vpiIconPageIndicatorStyle=0x7f030201;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int vpiLinePageIndicatorStyle=0x7f030202;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int vpiTabPageIndicatorStyle=0x7f030203;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int vpiTitlePageIndicatorStyle=0x7f030204;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int vpiUnderlinePageIndicatorStyle=0x7f030205;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f030206;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f030207;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f030208;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f030209;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f03020a;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f03020b;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f03020c;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f03020d;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f03020e;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f03020f;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f030210;
    /**
     * Default style for YesNoPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yesNoPreferenceStyle=0x7f030211;
  }
  public static final class bool {
    public static final int DEFAULT_CLOSE_ON_IDLE=0x7f040000;
    public static final int DEFAULT_DELAY_OPEN=0x7f040001;
    public static final int DEFAULT_NEW_KEYS=0x7f040002;
    public static final int DEFAULT_PERSISTENT_KEY=0x7f040003;
    public static final int DEFAULT_REDUCE_ON_IDLE=0x7f040004;
    public static final int DEFAULT_SHARED_CLIENTS=0x7f040005;
    public static final int DEFAULT_START_ON_LOAD=0x7f040006;
    public static final int abc_action_bar_embed_tabs=0x7f040007;
    public static final int abc_allow_stacked_button_bar=0x7f040008;
    public static final int abc_config_actionMenuItemAllCaps=0x7f040009;
    public static final int config_materialPreferenceIconSpaceReserved=0x7f04000a;
    public static final int default_circle_indicator_centered=0x7f04000b;
    public static final int default_circle_indicator_snap=0x7f04000c;
    public static final int default_line_indicator_centered=0x7f04000d;
    public static final int default_title_indicator_selected_bold=0x7f04000e;
    public static final int default_underline_indicator_fades=0x7f04000f;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f050000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f050001;
    public static final int abc_btn_colored_borderless_text_material=0x7f050002;
    public static final int abc_btn_colored_text_material=0x7f050003;
    public static final int abc_color_highlight_material=0x7f050004;
    public static final int abc_hint_foreground_material_dark=0x7f050005;
    public static final int abc_hint_foreground_material_light=0x7f050006;
    public static final int abc_input_method_navigation_guard=0x7f050007;
    public static final int abc_primary_text_disable_only_material_dark=0x7f050008;
    public static final int abc_primary_text_disable_only_material_light=0x7f050009;
    public static final int abc_primary_text_material_dark=0x7f05000a;
    public static final int abc_primary_text_material_light=0x7f05000b;
    public static final int abc_search_url_text=0x7f05000c;
    public static final int abc_search_url_text_normal=0x7f05000d;
    public static final int abc_search_url_text_pressed=0x7f05000e;
    public static final int abc_search_url_text_selected=0x7f05000f;
    public static final int abc_secondary_text_material_dark=0x7f050010;
    public static final int abc_secondary_text_material_light=0x7f050011;
    public static final int abc_tint_btn_checkable=0x7f050012;
    public static final int abc_tint_default=0x7f050013;
    public static final int abc_tint_edittext=0x7f050014;
    public static final int abc_tint_seek_thumb=0x7f050015;
    public static final int abc_tint_spinner=0x7f050016;
    public static final int abc_tint_switch_track=0x7f050017;
    public static final int accent=0x7f050018;
    public static final int accent_dark=0x7f050019;
    public static final int accent_material_dark=0x7f05001a;
    public static final int accent_material_light=0x7f05001b;
    public static final int ap_black=0x7f05001c;
    public static final int ap_charcoal=0x7f05001d;
    public static final int ap_gray=0x7f05001e;
    public static final int ap_transparent=0x7f05001f;
    public static final int ap_white=0x7f050020;
    public static final int background_floating_material_dark=0x7f050021;
    public static final int background_floating_material_light=0x7f050022;
    public static final int background_material_dark=0x7f050023;
    public static final int background_material_light=0x7f050024;
    public static final int bright_foreground_disabled_material_dark=0x7f050025;
    public static final int bright_foreground_disabled_material_light=0x7f050026;
    public static final int bright_foreground_inverse_material_dark=0x7f050027;
    public static final int bright_foreground_inverse_material_light=0x7f050028;
    public static final int bright_foreground_material_dark=0x7f050029;
    public static final int bright_foreground_material_light=0x7f05002a;
    public static final int button_material_dark=0x7f05002b;
    public static final int button_material_light=0x7f05002c;
    public static final int default_circle_indicator_fill_color=0x7f05002d;
    public static final int default_circle_indicator_page_color=0x7f05002e;
    public static final int default_circle_indicator_stroke_color=0x7f05002f;
    public static final int default_disabled=0x7f050030;
    public static final int default_line_indicator_selected_color=0x7f050031;
    public static final int default_line_indicator_unselected_color=0x7f050032;
    public static final int default_normal=0x7f050033;
    public static final int default_pressed=0x7f050034;
    public static final int default_title_indicator_footer_color=0x7f050035;
    public static final int default_title_indicator_selected_color=0x7f050036;
    public static final int default_title_indicator_text_color=0x7f050037;
    public static final int default_underline_indicator_selected_color=0x7f050038;
    public static final int dim_foreground_disabled_material_dark=0x7f050039;
    public static final int dim_foreground_disabled_material_light=0x7f05003a;
    public static final int dim_foreground_material_dark=0x7f05003b;
    public static final int dim_foreground_material_light=0x7f05003c;
    public static final int error_color_material_dark=0x7f05003d;
    public static final int error_color_material_light=0x7f05003e;
    public static final int foreground_material_dark=0x7f05003f;
    public static final int foreground_material_light=0x7f050040;
    public static final int highlighted_text_material_dark=0x7f050041;
    public static final int highlighted_text_material_light=0x7f050042;
    public static final int indicator_green=0x7f050043;
    public static final int indicator_red=0x7f050044;
    public static final int indicator_yellow=0x7f050045;
    public static final int material_blue_grey_800=0x7f050046;
    public static final int material_blue_grey_900=0x7f050047;
    public static final int material_blue_grey_950=0x7f050048;
    public static final int material_deep_teal_200=0x7f050049;
    public static final int material_deep_teal_500=0x7f05004a;
    public static final int material_grey_100=0x7f05004b;
    public static final int material_grey_300=0x7f05004c;
    public static final int material_grey_50=0x7f05004d;
    public static final int material_grey_600=0x7f05004e;
    public static final int material_grey_800=0x7f05004f;
    public static final int material_grey_850=0x7f050050;
    public static final int material_grey_900=0x7f050051;
    public static final int menu_label_background=0x7f050052;
    public static final int menu_label_text=0x7f050053;
    public static final int notification_action_color_filter=0x7f050054;
    public static final int notification_icon_bg_color=0x7f050055;
    public static final int notification_material_background_media_default_color=0x7f050056;
    public static final int off_white=0x7f050057;
    public static final int pager_indicator_footer_color=0x7f050058;
    public static final int pager_indicator_selected_color=0x7f050059;
    public static final int pager_indicator_text_color=0x7f05005a;
    public static final int preference_fallback_accent_color=0x7f05005b;
    public static final int primary=0x7f05005c;
    public static final int primary_dark=0x7f05005d;
    public static final int primary_dark_material_dark=0x7f05005e;
    public static final int primary_dark_material_light=0x7f05005f;
    public static final int primary_light=0x7f050060;
    public static final int primary_material_dark=0x7f050061;
    public static final int primary_material_light=0x7f050062;
    public static final int primary_text_default_material_dark=0x7f050063;
    public static final int primary_text_default_material_light=0x7f050064;
    public static final int primary_text_disabled_material_dark=0x7f050065;
    public static final int primary_text_disabled_material_light=0x7f050066;
    public static final int review_green=0x7f050067;
    public static final int ripple_material_dark=0x7f050068;
    public static final int ripple_material_light=0x7f050069;
    public static final int secondary_text_default_material_dark=0x7f05006a;
    public static final int secondary_text_default_material_light=0x7f05006b;
    public static final int secondary_text_disabled_material_dark=0x7f05006c;
    public static final int secondary_text_disabled_material_light=0x7f05006d;
    public static final int step_pager_next_tab_color=0x7f05006e;
    public static final int step_pager_previous_tab_color=0x7f05006f;
    public static final int step_pager_selected_last_tab_color=0x7f050070;
    public static final int step_pager_selected_tab_color=0x7f050071;
    public static final int switch_thumb_disabled_material_dark=0x7f050072;
    public static final int switch_thumb_disabled_material_light=0x7f050073;
    public static final int switch_thumb_material_dark=0x7f050074;
    public static final int switch_thumb_material_light=0x7f050075;
    public static final int switch_thumb_normal_material_dark=0x7f050076;
    public static final int switch_thumb_normal_material_light=0x7f050077;
    public static final int tooltip_background_dark=0x7f050078;
    public static final int tooltip_background_light=0x7f050079;
    public static final int vpi__background_holo_dark=0x7f05007a;
    public static final int vpi__background_holo_light=0x7f05007b;
    public static final int vpi__bright_foreground_disabled_holo_dark=0x7f05007c;
    public static final int vpi__bright_foreground_disabled_holo_light=0x7f05007d;
    public static final int vpi__bright_foreground_holo_dark=0x7f05007e;
    public static final int vpi__bright_foreground_holo_light=0x7f05007f;
    public static final int vpi__bright_foreground_inverse_holo_dark=0x7f050080;
    public static final int vpi__bright_foreground_inverse_holo_light=0x7f050081;
    public static final int vpi__dark_theme=0x7f050082;
    public static final int vpi__light_theme=0x7f050083;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f060000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f060001;
    public static final int abc_action_bar_default_height_material=0x7f060002;
    public static final int abc_action_bar_default_padding_end_material=0x7f060003;
    public static final int abc_action_bar_default_padding_start_material=0x7f060004;
    public static final int abc_action_bar_elevation_material=0x7f060005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f060006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f060007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f060008;
    public static final int abc_action_bar_stacked_max_height=0x7f060009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f06000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f06000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f06000c;
    public static final int abc_action_button_min_height_material=0x7f06000d;
    public static final int abc_action_button_min_width_material=0x7f06000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f06000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f060010;
    public static final int abc_alert_dialog_button_dimen=0x7f060011;
    public static final int abc_button_inset_horizontal_material=0x7f060012;
    public static final int abc_button_inset_vertical_material=0x7f060013;
    public static final int abc_button_padding_horizontal_material=0x7f060014;
    public static final int abc_button_padding_vertical_material=0x7f060015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f060016;
    public static final int abc_config_prefDialogWidth=0x7f060017;
    public static final int abc_control_corner_material=0x7f060018;
    public static final int abc_control_inset_material=0x7f060019;
    public static final int abc_control_padding_material=0x7f06001a;
    public static final int abc_dialog_corner_radius_material=0x7f06001b;
    public static final int abc_dialog_fixed_height_major=0x7f06001c;
    public static final int abc_dialog_fixed_height_minor=0x7f06001d;
    public static final int abc_dialog_fixed_width_major=0x7f06001e;
    public static final int abc_dialog_fixed_width_minor=0x7f06001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f060020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f060021;
    public static final int abc_dialog_min_width_major=0x7f060022;
    public static final int abc_dialog_min_width_minor=0x7f060023;
    public static final int abc_dialog_padding_material=0x7f060024;
    public static final int abc_dialog_padding_top_material=0x7f060025;
    public static final int abc_dialog_title_divider_material=0x7f060026;
    public static final int abc_disabled_alpha_material_dark=0x7f060027;
    public static final int abc_disabled_alpha_material_light=0x7f060028;
    public static final int abc_dropdownitem_icon_width=0x7f060029;
    public static final int abc_dropdownitem_text_padding_left=0x7f06002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f06002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f06002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f06002d;
    public static final int abc_edit_text_inset_top_material=0x7f06002e;
    public static final int abc_floating_window_z=0x7f06002f;
    public static final int abc_list_item_padding_horizontal_material=0x7f060030;
    public static final int abc_panel_menu_list_width=0x7f060031;
    public static final int abc_progress_bar_height_material=0x7f060032;
    public static final int abc_search_view_preferred_height=0x7f060033;
    public static final int abc_search_view_preferred_width=0x7f060034;
    public static final int abc_seekbar_track_background_height_material=0x7f060035;
    public static final int abc_seekbar_track_progress_height_material=0x7f060036;
    public static final int abc_select_dialog_padding_start_material=0x7f060037;
    public static final int abc_switch_padding=0x7f060038;
    public static final int abc_text_size_body_1_material=0x7f060039;
    public static final int abc_text_size_body_2_material=0x7f06003a;
    public static final int abc_text_size_button_material=0x7f06003b;
    public static final int abc_text_size_caption_material=0x7f06003c;
    public static final int abc_text_size_display_1_material=0x7f06003d;
    public static final int abc_text_size_display_2_material=0x7f06003e;
    public static final int abc_text_size_display_3_material=0x7f06003f;
    public static final int abc_text_size_display_4_material=0x7f060040;
    public static final int abc_text_size_headline_material=0x7f060041;
    public static final int abc_text_size_large_material=0x7f060042;
    public static final int abc_text_size_medium_material=0x7f060043;
    public static final int abc_text_size_menu_header_material=0x7f060044;
    public static final int abc_text_size_menu_material=0x7f060045;
    public static final int abc_text_size_small_material=0x7f060046;
    public static final int abc_text_size_subhead_material=0x7f060047;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f060048;
    public static final int abc_text_size_title_material=0x7f060049;
    public static final int abc_text_size_title_material_toolbar=0x7f06004a;
    public static final int activity_horizontal_margin=0x7f06004b;
    public static final int activity_horizontal_margin_no_padding=0x7f06004c;
    public static final int activity_vertical_margin=0x7f06004d;
    public static final int compat_button_inset_horizontal_material=0x7f06004e;
    public static final int compat_button_inset_vertical_material=0x7f06004f;
    public static final int compat_button_padding_horizontal_material=0x7f060050;
    public static final int compat_button_padding_vertical_material=0x7f060051;
    public static final int compat_control_corner_material=0x7f060052;
    public static final int compat_notification_large_icon_max_height=0x7f060053;
    public static final int compat_notification_large_icon_max_width=0x7f060054;
    public static final int default_circle_indicator_radius=0x7f060055;
    public static final int default_circle_indicator_stroke_width=0x7f060056;
    public static final int default_line_indicator_gap_width=0x7f060057;
    public static final int default_line_indicator_line_width=0x7f060058;
    public static final int default_line_indicator_stroke_width=0x7f060059;
    public static final int default_title_indicator_clip_padding=0x7f06005a;
    public static final int default_title_indicator_footer_indicator_height=0x7f06005b;
    public static final int default_title_indicator_footer_indicator_underline_padding=0x7f06005c;
    public static final int default_title_indicator_footer_line_height=0x7f06005d;
    public static final int default_title_indicator_footer_padding=0x7f06005e;
    public static final int default_title_indicator_text_size=0x7f06005f;
    public static final int default_title_indicator_title_padding=0x7f060060;
    public static final int default_title_indicator_top_padding=0x7f060061;
    public static final int disabled_alpha_material_dark=0x7f060062;
    public static final int disabled_alpha_material_light=0x7f060063;
    public static final int fab_actions_spacing=0x7f060064;
    public static final int fab_icon_size=0x7f060065;
    public static final int fab_labels_margin=0x7f060066;
    public static final int fab_plus_icon_size=0x7f060067;
    public static final int fab_plus_icon_stroke=0x7f060068;
    public static final int fab_shadow_offset=0x7f060069;
    public static final int fab_shadow_radius=0x7f06006a;
    public static final int fab_size_mini=0x7f06006b;
    public static final int fab_size_normal=0x7f06006c;
    public static final int fab_stroke_width=0x7f06006d;
    public static final int fastscroll_default_thickness=0x7f06006e;
    public static final int fastscroll_margin=0x7f06006f;
    public static final int fastscroll_minimum_range=0x7f060070;
    public static final int graph_domain_tick_label_font_size=0x7f060071;
    public static final int graph_range_tick_label_font_size=0x7f060072;
    public static final int highlight_alpha_material_colored=0x7f060073;
    public static final int highlight_alpha_material_dark=0x7f060074;
    public static final int highlight_alpha_material_light=0x7f060075;
    public static final int hint_alpha_material_dark=0x7f060076;
    public static final int hint_alpha_material_light=0x7f060077;
    public static final int hint_pressed_alpha_material_dark=0x7f060078;
    public static final int hint_pressed_alpha_material_light=0x7f060079;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f06007a;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f06007b;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f06007c;
    public static final int list_top_margin=0x7f06007d;
    public static final int list_vertical_padding=0x7f06007e;
    public static final int listitem_height_one_line=0x7f06007f;
    public static final int listitem_height_one_line_avatar=0x7f060080;
    public static final int listitem_height_two_lines=0x7f060081;
    public static final int listitem_horizontal_margin=0x7f060082;
    public static final int listitem_icon_left_margin=0x7f060083;
    public static final int listitem_icon_size=0x7f060084;
    public static final int listitem_picture_size=0x7f060085;
    public static final int listitem_text_bottom_margin_two_lines=0x7f060086;
    public static final int listitem_text_left_margin=0x7f060087;
    public static final int listitem_text_top_margin_two_lines=0x7f060088;
    public static final int nav_entry_height=0x7f060089;
    public static final int nav_horizontal_margin=0x7f06008a;
    public static final int notification_action_icon_size=0x7f06008b;
    public static final int notification_action_text_size=0x7f06008c;
    public static final int notification_big_circle_margin=0x7f06008d;
    public static final int notification_content_margin_start=0x7f06008e;
    public static final int notification_large_icon_height=0x7f06008f;
    public static final int notification_large_icon_width=0x7f060090;
    public static final int notification_main_column_padding_top=0x7f060091;
    public static final int notification_media_narrow_margin=0x7f060092;
    public static final int notification_right_icon_size=0x7f060093;
    public static final int notification_right_side_padding_top=0x7f060094;
    public static final int notification_small_icon_background_padding=0x7f060095;
    public static final int notification_small_icon_size_as_large=0x7f060096;
    public static final int notification_subtext_size=0x7f060097;
    public static final int notification_top_pad=0x7f060098;
    public static final int notification_top_pad_large_text=0x7f060099;
    public static final int pager_indicator_footer_line_height=0x7f06009a;
    public static final int pager_indicator_footer_padding=0x7f06009b;
    public static final int pager_indicator_text_size=0x7f06009c;
    public static final int pager_indicator_top_padding=0x7f06009d;
    public static final int preference_category_padding_start=0x7f06009e;
    public static final int preference_icon_minWidth=0x7f06009f;
    public static final int preference_no_icon_padding_start=0x7f0600a0;
    public static final int preference_seekbar_padding_end=0x7f0600a1;
    public static final int preference_seekbar_padding_start=0x7f0600a2;
    public static final int preference_seekbar_value_width=0x7f0600a3;
    public static final int step_pager_tab_height=0x7f0600a4;
    public static final int step_pager_tab_spacing=0x7f0600a5;
    public static final int step_pager_tab_width=0x7f0600a6;
    public static final int subtitle_corner_radius=0x7f0600a7;
    public static final int subtitle_outline_width=0x7f0600a8;
    public static final int subtitle_shadow_offset=0x7f0600a9;
    public static final int subtitle_shadow_radius=0x7f0600aa;
    public static final int text_size_primary=0x7f0600ab;
    public static final int text_size_secondary=0x7f0600ac;
    public static final int toolbar_height_with_text=0x7f0600ad;
    public static final int tooltip_corner_radius=0x7f0600ae;
    public static final int tooltip_horizontal_padding=0x7f0600af;
    public static final int tooltip_margin=0x7f0600b0;
    public static final int tooltip_precise_anchor_extra_offset=0x7f0600b1;
    public static final int tooltip_precise_anchor_threshold=0x7f0600b2;
    public static final int tooltip_vertical_padding=0x7f0600b3;
    public static final int tooltip_y_offset_non_touch=0x7f0600b4;
    public static final int tooltip_y_offset_touch=0x7f0600b5;
    public static final int tunnel_indicator=0x7f0600b6;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f070000;
    public static final int abc_action_bar_item_background_material=0x7f070001;
    public static final int abc_btn_borderless_material=0x7f070002;
    public static final int abc_btn_check_material=0x7f070003;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f070004;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f070005;
    public static final int abc_btn_colored_material=0x7f070006;
    public static final int abc_btn_default_mtrl_shape=0x7f070007;
    public static final int abc_btn_radio_material=0x7f070008;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f070009;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f07000a;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f07000b;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f07000c;
    public static final int abc_cab_background_internal_bg=0x7f07000d;
    public static final int abc_cab_background_top_material=0x7f07000e;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f07000f;
    public static final int abc_control_background_material=0x7f070010;
    public static final int abc_dialog_material_background=0x7f070011;
    public static final int abc_edit_text_material=0x7f070012;
    public static final int abc_ic_ab_back_material=0x7f070013;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f070014;
    public static final int abc_ic_clear_material=0x7f070015;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f070016;
    public static final int abc_ic_go_search_api_material=0x7f070017;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f070018;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f070019;
    public static final int abc_ic_menu_overflow_material=0x7f07001a;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f07001b;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f07001c;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f07001d;
    public static final int abc_ic_search_api_material=0x7f07001e;
    public static final int abc_ic_star_black_16dp=0x7f07001f;
    public static final int abc_ic_star_black_36dp=0x7f070020;
    public static final int abc_ic_star_black_48dp=0x7f070021;
    public static final int abc_ic_star_half_black_16dp=0x7f070022;
    public static final int abc_ic_star_half_black_36dp=0x7f070023;
    public static final int abc_ic_star_half_black_48dp=0x7f070024;
    public static final int abc_ic_voice_search_api_material=0x7f070025;
    public static final int abc_item_background_holo_dark=0x7f070026;
    public static final int abc_item_background_holo_light=0x7f070027;
    public static final int abc_list_divider_material=0x7f070028;
    public static final int abc_list_divider_mtrl_alpha=0x7f070029;
    public static final int abc_list_focused_holo=0x7f07002a;
    public static final int abc_list_longpressed_holo=0x7f07002b;
    public static final int abc_list_pressed_holo_dark=0x7f07002c;
    public static final int abc_list_pressed_holo_light=0x7f07002d;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f07002e;
    public static final int abc_list_selector_background_transition_holo_light=0x7f07002f;
    public static final int abc_list_selector_disabled_holo_dark=0x7f070030;
    public static final int abc_list_selector_disabled_holo_light=0x7f070031;
    public static final int abc_list_selector_holo_dark=0x7f070032;
    public static final int abc_list_selector_holo_light=0x7f070033;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f070034;
    public static final int abc_popup_background_mtrl_mult=0x7f070035;
    public static final int abc_ratingbar_indicator_material=0x7f070036;
    public static final int abc_ratingbar_material=0x7f070037;
    public static final int abc_ratingbar_small_material=0x7f070038;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f070039;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f07003a;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f07003b;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f07003c;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f07003d;
    public static final int abc_seekbar_thumb_material=0x7f07003e;
    public static final int abc_seekbar_tick_mark_material=0x7f07003f;
    public static final int abc_seekbar_track_material=0x7f070040;
    public static final int abc_spinner_mtrl_am_alpha=0x7f070041;
    public static final int abc_spinner_textfield_background_material=0x7f070042;
    public static final int abc_switch_thumb_material=0x7f070043;
    public static final int abc_switch_track_mtrl_alpha=0x7f070044;
    public static final int abc_tab_indicator_material=0x7f070045;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f070046;
    public static final int abc_text_cursor_material=0x7f070047;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f070048;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f070049;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f07004a;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f07004b;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f07004c;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f07004d;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f07004e;
    public static final int abc_textfield_default_mtrl_alpha=0x7f07004f;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f070050;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f070051;
    public static final int abc_textfield_search_material=0x7f070052;
    public static final int abc_vector_test=0x7f070053;
    public static final int bottom_shadow=0x7f070054;
    public static final int drawer_shadow=0x7f070055;
    public static final int fab_bg_mini=0x7f070056;
    public static final int fab_bg_normal=0x7f070057;
    public static final int fab_label_background=0x7f070058;
    public static final int header_shadow=0x7f070059;
    public static final int ic_arrow_back_white_24dp=0x7f07005a;
    public static final int ic_arrow_down_24dp=0x7f07005b;
    public static final int ic_book_white_36dp=0x7f07005c;
    public static final int ic_bug_report_white_24dp=0x7f07005d;
    public static final int ic_bug_report_white_36dp=0x7f07005e;
    public static final int ic_cloud_white_24dp=0x7f07005f;
    public static final int ic_content_copy_white_24dp=0x7f070060;
    public static final int ic_create_white_24dp=0x7f070061;
    public static final int ic_delete_white_24dp=0x7f070062;
    public static final int ic_error_red_24dp=0x7f070063;
    public static final int ic_info_white_24dp=0x7f070064;
    public static final int ic_insert_chart_white_24dp=0x7f070065;
    public static final int ic_insert_chart_white_36dp=0x7f070066;
    public static final int ic_launcher_itoopie=0x7f070067;
    public static final int ic_link_white_24dp=0x7f070068;
    public static final int ic_open_in_browser_white_24dp=0x7f070069;
    public static final int ic_play_arrow_white_24dp=0x7f07006a;
    public static final int ic_refresh_white_24dp=0x7f07006b;
    public static final int ic_schedule_black_24dp=0x7f07006c;
    public static final int ic_search_white_24dp=0x7f07006d;
    public static final int ic_settings_brightness_white_36dp=0x7f07006e;
    public static final int ic_settings_ethernet_white_36dp=0x7f07006f;
    public static final int ic_settings_white_36dp=0x7f070070;
    public static final int ic_shop_white_24dp=0x7f070071;
    public static final int ic_stars_white_24dp=0x7f070072;
    public static final int ic_stat_router_active=0x7f070073;
    public static final int ic_stat_router_running=0x7f070074;
    public static final int ic_stat_router_shutting_down=0x7f070075;
    public static final int ic_stat_router_starting=0x7f070076;
    public static final int ic_stat_router_stopping=0x7f070077;
    public static final int ic_stat_router_waiting_network=0x7f070078;
    public static final int ic_stop_white_24dp=0x7f070079;
    public static final int ic_sync_black_24dp=0x7f07007a;
    public static final int ic_warning_amber_24dp=0x7f07007b;
    public static final int icon_info_guardianproject_browser=0x7f07007c;
    public static final int icon_org_mozilla_firefox=0x7f07007d;
    public static final int itoopie_sm=0x7f07007e;
    public static final int local_down=0x7f07007f;
    public static final int local_inprogress=0x7f070080;
    public static final int local_up=0x7f070081;
    public static final int notification_action_background=0x7f070082;
    public static final int notification_bg=0x7f070083;
    public static final int notification_bg_low=0x7f070084;
    public static final int notification_bg_low_normal=0x7f070085;
    public static final int notification_bg_low_pressed=0x7f070086;
    public static final int notification_bg_normal=0x7f070087;
    public static final int notification_bg_normal_pressed=0x7f070088;
    public static final int notification_icon_background=0x7f070089;
    public static final int notification_template_icon_bg=0x7f07008a;
    public static final int notification_template_icon_low_bg=0x7f07008b;
    public static final int notification_tile_bg=0x7f07008c;
    public static final int notify_panel_notification_icon_bg=0x7f07008d;
    public static final int preference_list_divider_material=0x7f07008e;
    public static final int routerlogo_0=0x7f07008f;
    public static final int routerlogo_1=0x7f070090;
    public static final int routerlogo_2=0x7f070091;
    public static final int routerlogo_3=0x7f070092;
    public static final int routerlogo_4=0x7f070093;
    public static final int shadow=0x7f070094;
    public static final int side_shadow=0x7f070095;
    public static final int tooltip_frame_dark=0x7f070096;
    public static final int tooltip_frame_light=0x7f070097;
    public static final int tunnel_green=0x7f070098;
    public static final int tunnel_red=0x7f070099;
    public static final int tunnel_yellow=0x7f07009a;
    public static final int vpi__tab_indicator=0x7f07009b;
    public static final int vpi__tab_selected_focused_holo=0x7f07009c;
    public static final int vpi__tab_selected_holo=0x7f07009d;
    public static final int vpi__tab_selected_pressed_holo=0x7f07009e;
    public static final int vpi__tab_unselected_focused_holo=0x7f07009f;
    public static final int vpi__tab_unselected_holo=0x7f0700a0;
    public static final int vpi__tab_unselected_pressed_holo=0x7f0700a1;
  }
  public static final class id {
    public static final int ALT=0x7f080000;
    public static final int CTRL=0x7f080001;
    public static final int FUNCTION=0x7f080002;
    public static final int META=0x7f080003;
    public static final int SHIFT=0x7f080004;
    public static final int SYM=0x7f080005;
    public static final int about_version=0x7f080006;
    public static final int absolute=0x7f080007;
    public static final int absolute_from_bottom=0x7f080008;
    public static final int absolute_from_center=0x7f080009;
    public static final int absolute_from_left=0x7f08000a;
    public static final int absolute_from_right=0x7f08000b;
    public static final int absolute_from_top=0x7f08000c;
    public static final int action0=0x7f08000d;
    public static final int action_bar=0x7f08000e;
    public static final int action_bar_activity_content=0x7f08000f;
    public static final int action_bar_container=0x7f080010;
    public static final int action_bar_root=0x7f080011;
    public static final int action_bar_spinner=0x7f080012;
    public static final int action_bar_subtitle=0x7f080013;
    public static final int action_bar_title=0x7f080014;
    public static final int action_container=0x7f080015;
    public static final int action_context_bar=0x7f080016;
    public static final int action_copy_logs=0x7f080017;
    public static final int action_delete_tunnel=0x7f080018;
    public static final int action_divider=0x7f080019;
    public static final int action_edit_tunnel=0x7f08001a;
    public static final int action_graphs=0x7f08001b;
    public static final int action_image=0x7f08001c;
    public static final int action_logs=0x7f08001d;
    public static final int action_menu_divider=0x7f08001e;
    public static final int action_menu_presenter=0x7f08001f;
    public static final int action_mode_bar=0x7f080020;
    public static final int action_mode_bar_stub=0x7f080021;
    public static final int action_mode_close_button=0x7f080022;
    public static final int action_netdb=0x7f080023;
    public static final int action_news=0x7f080024;
    public static final int action_refresh=0x7f080025;
    public static final int action_reload_subscriptions=0x7f080026;
    public static final int action_restart_all_tunnels=0x7f080027;
    public static final int action_search_addressbook=0x7f080028;
    public static final int action_start_all_tunnels=0x7f080029;
    public static final int action_start_tunnel=0x7f08002a;
    public static final int action_stop_all_tunnels=0x7f08002b;
    public static final int action_stop_tunnel=0x7f08002c;
    public static final int action_text=0x7f08002d;
    public static final int actions=0x7f08002e;
    public static final int activity_chooser_view_content=0x7f08002f;
    public static final int add=0x7f080030;
    public static final int alertTitle=0x7f080031;
    public static final int all=0x7f080032;
    public static final int always=0x7f080033;
    public static final int async=0x7f080034;
    public static final int bar=0x7f080035;
    public static final int beginning=0x7f080036;
    public static final int blocking=0x7f080037;
    public static final int bottom=0x7f080038;
    public static final int bottom_middle=0x7f080039;
    public static final int browser_icon=0x7f08003a;
    public static final int browser_label=0x7f08003b;
    public static final int browser_list=0x7f08003c;
    public static final int browser_status=0x7f08003d;
    public static final int browser_status_icon=0x7f08003e;
    public static final int browser_webview=0x7f08003f;
    public static final int buttonPanel=0x7f080040;
    public static final int button_cancel_graceful=0x7f080041;
    public static final int button_save_subscriptions=0x7f080042;
    public static final int button_shutdown_now=0x7f080043;
    public static final int cancel_action=0x7f080044;
    public static final int candlestick=0x7f080045;
    public static final int center=0x7f080046;
    public static final int center_horizontal=0x7f080047;
    public static final int center_vertical=0x7f080048;
    public static final int character=0x7f080049;
    public static final int checkbox=0x7f08004a;
    public static final int chronometer=0x7f08004b;
    public static final int clip_horizontal=0x7f08004c;
    public static final int clip_vertical=0x7f08004d;
    public static final int collapseActionView=0x7f08004e;
    public static final int console_action_menu=0x7f08004f;
    public static final int console_active=0x7f080050;
    public static final int console_advanced_status=0x7f080051;
    public static final int console_advanced_status_text=0x7f080052;
    public static final int console_bottom_toolbar=0x7f080053;
    public static final int console_download_stats=0x7f080054;
    public static final int console_known=0x7f080055;
    public static final int console_lights=0x7f080056;
    public static final int console_net_status_help=0x7f080057;
    public static final int console_net_status_level=0x7f080058;
    public static final int console_net_status_text=0x7f080059;
    public static final int console_non_net_status_container=0x7f08005a;
    public static final int console_upload_stats=0x7f08005b;
    public static final int console_uptime=0x7f08005c;
    public static final int console_usage_stats=0x7f08005d;
    public static final int content=0x7f08005e;
    public static final int contentPanel=0x7f08005f;
    public static final int custom=0x7f080060;
    public static final int customPanel=0x7f080061;
    public static final int dbentry_hash=0x7f080062;
    public static final int decor_content_parent=0x7f080063;
    public static final int default_activity_button=0x7f080064;
    public static final int detail_fragment=0x7f080065;
    public static final int detail_toolbar=0x7f080066;
    public static final int disableHome=0x7f080067;
    public static final int divider=0x7f080068;
    public static final int down=0x7f080069;
    public static final int drawer=0x7f08006a;
    public static final int drawer_layout=0x7f08006b;
    public static final int edit_query=0x7f08006c;
    public static final int empty=0x7f08006d;
    public static final int end=0x7f08006e;
    public static final int end_padder=0x7f08006f;
    public static final int expand_activities_button=0x7f080070;
    public static final int expanded_menu=0x7f080071;
    public static final int fab_expand_menu_button=0x7f080072;
    public static final int fab_label=0x7f080073;
    public static final int fill=0x7f080074;
    public static final int fill_horizontal=0x7f080075;
    public static final int fill_vertical=0x7f080076;
    public static final int forever=0x7f080077;
    public static final int fragment=0x7f080078;
    public static final int group_divider=0x7f080079;
    public static final int home=0x7f08007a;
    public static final int homeAsUp=0x7f08007b;
    public static final int host_name=0x7f08007c;
    public static final int icon=0x7f08007d;
    public static final int icon_frame=0x7f08007e;
    public static final int icon_group=0x7f08007f;
    public static final int icon_link_access=0x7f080080;
    public static final int icon_link_target=0x7f080081;
    public static final int ifRoom=0x7f080082;
    public static final int image=0x7f080083;
    public static final int increment_by_pixels=0x7f080084;
    public static final int increment_by_val=0x7f080085;
    public static final int info=0x7f080086;
    public static final int italic=0x7f080087;
    public static final int item_touch_helper_previous_elevation=0x7f080088;
    public static final int label_leases=0x7f080089;
    public static final int label_ls_expiry=0x7f08008a;
    public static final int label_ri_addresses=0x7f08008b;
    public static final int label_ri_published=0x7f08008c;
    public static final int label_ri_stats=0x7f08008d;
    public static final int left=0x7f08008e;
    public static final int left_bottom=0x7f08008f;
    public static final int left_fragment=0x7f080090;
    public static final int left_middle=0x7f080091;
    public static final int left_top=0x7f080092;
    public static final int line1=0x7f080093;
    public static final int line3=0x7f080094;
    public static final int line_and_point=0x7f080095;
    public static final int list=0x7f080096;
    public static final int listMode=0x7f080097;
    public static final int list_item=0x7f080098;
    public static final int loading=0x7f080099;
    public static final int log_entry=0x7f08009a;
    public static final int ls_expiry=0x7f08009b;
    public static final int ls_leases=0x7f08009c;
    public static final int ls_nickname=0x7f08009d;
    public static final int ls_type=0x7f08009e;
    public static final int main_fragment=0x7f08009f;
    public static final int main_scrollview=0x7f0800a0;
    public static final int main_spinner=0x7f0800a1;
    public static final int main_toolbar=0x7f0800a2;
    public static final int main_tunnels=0x7f0800a3;
    public static final int measurement_unit=0x7f0800a4;
    public static final int media_actions=0x7f0800a5;
    public static final int menu_about=0x7f0800a6;
    public static final int menu_help=0x7f0800a7;
    public static final int menu_help_licenses=0x7f0800a8;
    public static final int menu_help_release_notes=0x7f0800a9;
    public static final int menu_reload=0x7f0800aa;
    public static final int menu_settings=0x7f0800ab;
    public static final int message=0x7f0800ac;
    public static final int middle=0x7f0800ad;
    public static final int mini=0x7f0800ae;
    public static final int multiply=0x7f0800af;
    public static final int negative_ninety_degrees=0x7f0800b0;
    public static final int never=0x7f0800b1;
    public static final int news_content=0x7f0800b2;
    public static final int news_status=0x7f0800b3;
    public static final int next_button=0x7f0800b4;
    public static final int ninety_degrees=0x7f0800b5;
    public static final int none=0x7f0800b6;
    public static final int normal=0x7f0800b7;
    public static final int notification_background=0x7f0800b8;
    public static final int notification_main_column=0x7f0800b9;
    public static final int notification_main_column_container=0x7f0800ba;
    public static final int one_hundred_eighty_degrees=0x7f0800bb;
    public static final int page_indicator=0x7f0800bc;
    public static final int pager=0x7f0800bd;
    public static final int pager_title_strip=0x7f0800be;
    public static final int parentPanel=0x7f0800bf;
    public static final int peers_webview=0x7f0800c0;
    public static final int prev_button=0x7f0800c1;
    public static final int progress_circular=0x7f0800c2;
    public static final int progress_horizontal=0x7f0800c3;
    public static final int promoted_action=0x7f0800c4;
    public static final int radio=0x7f0800c5;
    public static final int rate_stat_plot=0x7f0800c6;
    public static final int recycler_view=0x7f0800c7;
    public static final int relative=0x7f0800c8;
    public static final int relative_from_bottom=0x7f0800c9;
    public static final int relative_from_center=0x7f0800ca;
    public static final int relative_from_left=0x7f0800cb;
    public static final int relative_from_right=0x7f0800cc;
    public static final int relative_from_top=0x7f0800cd;
    public static final int ri_addresses=0x7f0800ce;
    public static final int ri_country=0x7f0800cf;
    public static final int ri_published=0x7f0800d0;
    public static final int ri_stats=0x7f0800d1;
    public static final int right=0x7f0800d2;
    public static final int right_bottom=0x7f0800d3;
    public static final int right_fragment=0x7f0800d4;
    public static final int right_icon=0x7f0800d5;
    public static final int right_middle=0x7f0800d6;
    public static final int right_side=0x7f0800d7;
    public static final int right_top=0x7f0800d8;
    public static final int router_button_container=0x7f0800d9;
    public static final int router_graceful_buttons=0x7f0800da;
    public static final int router_graceful_status=0x7f0800db;
    public static final int router_onoff_button=0x7f0800dc;
    public static final int screen=0x7f0800dd;
    public static final int scrollIndicatorDown=0x7f0800de;
    public static final int scrollIndicatorUp=0x7f0800df;
    public static final int scrollView=0x7f0800e0;
    public static final int search_badge=0x7f0800e1;
    public static final int search_bar=0x7f0800e2;
    public static final int search_button=0x7f0800e3;
    public static final int search_close_btn=0x7f0800e4;
    public static final int search_edit_frame=0x7f0800e5;
    public static final int search_go_btn=0x7f0800e6;
    public static final int search_mag_icon=0x7f0800e7;
    public static final int search_plate=0x7f0800e8;
    public static final int search_src_text=0x7f0800e9;
    public static final int search_voice_btn=0x7f0800ea;
    public static final int seekbar=0x7f0800eb;
    public static final int seekbar_value=0x7f0800ec;
    public static final int select_dialog_listview=0x7f0800ed;
    public static final int shortcut=0x7f0800ee;
    public static final int showCustom=0x7f0800ef;
    public static final int showHome=0x7f0800f0;
    public static final int showTitle=0x7f0800f1;
    public static final int sliding_tabs=0x7f0800f2;
    public static final int spacer=0x7f0800f3;
    public static final int spinner=0x7f0800f4;
    public static final int split_action_bar=0x7f0800f5;
    public static final int src_atop=0x7f0800f6;
    public static final int src_in=0x7f0800f7;
    public static final int src_over=0x7f0800f8;
    public static final int start=0x7f0800f9;
    public static final int status_bar_latest_event_content=0x7f0800fa;
    public static final int status_container=0x7f0800fb;
    public static final int strip=0x7f0800fc;
    public static final int subdivide=0x7f0800fd;
    public static final int submenuarrow=0x7f0800fe;
    public static final int submit_area=0x7f0800ff;
    public static final int subscriptions_content=0x7f080100;
    public static final int switchWidget=0x7f080101;
    public static final int tabMode=0x7f080102;
    public static final int table=0x7f080103;
    public static final int tag_transition_group=0x7f080104;
    public static final int tag_unhandled_key_event_manager=0x7f080105;
    public static final int tag_unhandled_key_listeners=0x7f080106;
    public static final int text=0x7f080107;
    public static final int text2=0x7f080108;
    public static final int textSpacerNoButtons=0x7f080109;
    public static final int textSpacerNoTitle=0x7f08010a;
    public static final int textView2=0x7f08010b;
    public static final int text_resource_text=0x7f08010c;
    public static final int time=0x7f08010d;
    public static final int title=0x7f08010e;
    public static final int titleDividerNoCustom=0x7f08010f;
    public static final int title_template=0x7f080110;
    public static final int top=0x7f080111;
    public static final int topPanel=0x7f080112;
    public static final int top_middle=0x7f080113;
    public static final int triangle=0x7f080114;
    public static final int tunnel_access_interface_port=0x7f080115;
    public static final int tunnel_access_interface_port_item=0x7f080116;
    public static final int tunnel_access_open=0x7f080117;
    public static final int tunnel_autostart=0x7f080118;
    public static final int tunnel_description=0x7f080119;
    public static final int tunnel_details=0x7f08011a;
    public static final int tunnel_details_container=0x7f08011b;
    public static final int tunnel_details_copy=0x7f08011c;
    public static final int tunnel_interface_port=0x7f08011d;
    public static final int tunnel_name=0x7f08011e;
    public static final int tunnel_status=0x7f08011f;
    public static final int tunnel_status_container=0x7f080120;
    public static final int tunnel_target_interface_port=0x7f080121;
    public static final int tunnel_target_interface_port_item=0x7f080122;
    public static final int tunnel_target_open=0x7f080123;
    public static final int tunnel_type=0x7f080124;
    public static final int underline=0x7f080125;
    public static final int uniform=0x7f080126;
    public static final int up=0x7f080127;
    public static final int url_android_bugs=0x7f080128;
    public static final int url_android_volunteer=0x7f080129;
    public static final int url_donate=0x7f08012a;
    public static final int url_faq=0x7f08012b;
    public static final int url_irc_i2p=0x7f08012c;
    public static final int url_project=0x7f08012d;
    public static final int useLogo=0x7f08012e;
    public static final int use_background_thread=0x7f08012f;
    public static final int use_main_thread=0x7f080130;
    public static final int value_holder=0x7f080131;
    public static final int withText=0x7f080132;
    public static final int wizard_check_box=0x7f080133;
    public static final int wizard_text_field=0x7f080134;
    public static final int wizard_text_field_desc=0x7f080135;
    public static final int wizard_text_field_feedback=0x7f080136;
    public static final int wizard_text_field_pick=0x7f080137;
    public static final int wrap_content=0x7f080138;
  }
  public static final class integer {
    public static final int DEFAULT_CLOSE_TIME=0x7f090000;
    public static final int DEFAULT_REDUCE_COUNT=0x7f090001;
    public static final int DEFAULT_REDUCE_TIME=0x7f090002;
    public static final int DEFAULT_SIGTYPE=0x7f090003;
    public static final int DEFAULT_TUNNEL_BACKUP_QUANTITY=0x7f090004;
    public static final int DEFAULT_TUNNEL_LENGTH=0x7f090005;
    public static final int DEFAULT_TUNNEL_QUANTITY=0x7f090006;
    public static final int DEFAULT_TUNNEL_VARIANCE=0x7f090007;
    public static final int abc_config_activityDefaultDur=0x7f090008;
    public static final int abc_config_activityShortDur=0x7f090009;
    public static final int cancel_button_image_alpha=0x7f09000a;
    public static final int config_tooltipAnimTime=0x7f09000b;
    public static final int default_circle_indicator_orientation=0x7f09000c;
    public static final int default_title_indicator_footer_indicator_style=0x7f09000d;
    public static final int default_title_indicator_line_position=0x7f09000e;
    public static final int default_underline_indicator_fade_delay=0x7f09000f;
    public static final int default_underline_indicator_fade_length=0x7f090010;
    public static final int min_lines=0x7f090011;
    public static final int status_bar_notification_info_maxnum=0x7f090012;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0a0000;
    public static final int abc_action_bar_up_container=0x7f0a0001;
    public static final int abc_action_menu_item_layout=0x7f0a0002;
    public static final int abc_action_menu_layout=0x7f0a0003;
    public static final int abc_action_mode_bar=0x7f0a0004;
    public static final int abc_action_mode_close_item_material=0x7f0a0005;
    public static final int abc_activity_chooser_view=0x7f0a0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0a0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0a0008;
    public static final int abc_alert_dialog_material=0x7f0a0009;
    public static final int abc_alert_dialog_title_material=0x7f0a000a;
    public static final int abc_cascading_menu_item_layout=0x7f0a000b;
    public static final int abc_dialog_title_material=0x7f0a000c;
    public static final int abc_expanded_menu_layout=0x7f0a000d;
    public static final int abc_list_menu_item_checkbox=0x7f0a000e;
    public static final int abc_list_menu_item_icon=0x7f0a000f;
    public static final int abc_list_menu_item_layout=0x7f0a0010;
    public static final int abc_list_menu_item_radio=0x7f0a0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0a0012;
    public static final int abc_popup_menu_item_layout=0x7f0a0013;
    public static final int abc_screen_content_include=0x7f0a0014;
    public static final int abc_screen_simple=0x7f0a0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0a0016;
    public static final int abc_screen_toolbar=0x7f0a0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0a0018;
    public static final int abc_search_view=0x7f0a0019;
    public static final int abc_select_dialog_material=0x7f0a001a;
    public static final int abc_tooltip=0x7f0a001b;
    public static final int activity_addressbook_settings=0x7f0a001c;
    public static final int activity_help=0x7f0a001d;
    public static final int activity_help_onepane=0x7f0a001e;
    public static final int activity_help_twopane=0x7f0a001f;
    public static final int activity_multipane=0x7f0a0020;
    public static final int activity_navdrawer=0x7f0a0021;
    public static final int activity_navdrawer_viewpager=0x7f0a0022;
    public static final int activity_onepane=0x7f0a0023;
    public static final int activity_single_fragment=0x7f0a0024;
    public static final int activity_twopane=0x7f0a0025;
    public static final int activity_viewpager=0x7f0a0026;
    public static final int activity_wizard=0x7f0a0027;
    public static final int console_status=0x7f0a0028;
    public static final int container_addressbook=0x7f0a0029;
    public static final int container_addressbook_onepane=0x7f0a002a;
    public static final int container_addressbook_twopane=0x7f0a002b;
    public static final int container_console=0x7f0a002c;
    public static final int container_tunnels=0x7f0a002d;
    public static final int container_tunnels_twopane=0x7f0a002e;
    public static final int container_with_add_onepane=0x7f0a002f;
    public static final int expand_button=0x7f0a0030;
    public static final int fragment_dialog_about=0x7f0a0031;
    public static final int fragment_dialog_first_start=0x7f0a0032;
    public static final int fragment_dialog_text_resource=0x7f0a0033;
    public static final int fragment_graph=0x7f0a0034;
    public static final int fragment_help_browsers=0x7f0a0035;
    public static final int fragment_i2ptunnel_detail=0x7f0a0036;
    public static final int fragment_list=0x7f0a0037;
    public static final int fragment_list_with_add=0x7f0a0038;
    public static final int fragment_log_entry=0x7f0a0039;
    public static final int fragment_main=0x7f0a003a;
    public static final int fragment_netdb_leaseset_detail=0x7f0a003b;
    public static final int fragment_netdb_router_detail=0x7f0a003c;
    public static final int fragment_news=0x7f0a003d;
    public static final int fragment_table=0x7f0a003e;
    public static final int fragment_wizard_page=0x7f0a003f;
    public static final int fragment_wizard_page_single_boolean=0x7f0a0040;
    public static final int fragment_wizard_page_single_text_field=0x7f0a0041;
    public static final int fragment_wizard_page_single_text_field_picker=0x7f0a0042;
    public static final int header_alphanumeric=0x7f0a0043;
    public static final int listitem_address=0x7f0a0044;
    public static final int listitem_browser=0x7f0a0045;
    public static final int listitem_empty=0x7f0a0046;
    public static final int listitem_i2ptunnel=0x7f0a0047;
    public static final int listitem_leaseset=0x7f0a0048;
    public static final int listitem_logs=0x7f0a0049;
    public static final int listitem_navdrawer=0x7f0a004a;
    public static final int listitem_routerinfo=0x7f0a004b;
    public static final int listitem_text=0x7f0a004c;
    public static final int listitem_wizard_review=0x7f0a004d;
    public static final int logs_header=0x7f0a004e;
    public static final int notification_action=0x7f0a004f;
    public static final int notification_action_tombstone=0x7f0a0050;
    public static final int notification_media_action=0x7f0a0051;
    public static final int notification_media_cancel_action=0x7f0a0052;
    public static final int notification_template_big_media=0x7f0a0053;
    public static final int notification_template_big_media_custom=0x7f0a0054;
    public static final int notification_template_big_media_narrow=0x7f0a0055;
    public static final int notification_template_big_media_narrow_custom=0x7f0a0056;
    public static final int notification_template_custom_big=0x7f0a0057;
    public static final int notification_template_icon_group=0x7f0a0058;
    public static final int notification_template_lines_media=0x7f0a0059;
    public static final int notification_template_media=0x7f0a005a;
    public static final int notification_template_media_custom=0x7f0a005b;
    public static final int notification_template_part_chronometer=0x7f0a005c;
    public static final int notification_template_part_time=0x7f0a005d;
    public static final int parentfragment_viewpager=0x7f0a005e;
    public static final int peers=0x7f0a005f;
    public static final int preference=0x7f0a0060;
    public static final int preference_category=0x7f0a0061;
    public static final int preference_category_material=0x7f0a0062;
    public static final int preference_dialog_edittext=0x7f0a0063;
    public static final int preference_dropdown=0x7f0a0064;
    public static final int preference_dropdown_material=0x7f0a0065;
    public static final int preference_information=0x7f0a0066;
    public static final int preference_information_material=0x7f0a0067;
    public static final int preference_list_fragment=0x7f0a0068;
    public static final int preference_material=0x7f0a0069;
    public static final int preference_recyclerview=0x7f0a006a;
    public static final int preference_widget_checkbox=0x7f0a006b;
    public static final int preference_widget_seekbar=0x7f0a006c;
    public static final int preference_widget_seekbar_material=0x7f0a006d;
    public static final int preference_widget_switch=0x7f0a006e;
    public static final int preference_widget_switch_compat=0x7f0a006f;
    public static final int seekbar_inner=0x7f0a0070;
    public static final int seekbar_preference=0x7f0a0071;
    public static final int select_dialog_item_material=0x7f0a0072;
    public static final int select_dialog_multichoice_material=0x7f0a0073;
    public static final int select_dialog_singlechoice_material=0x7f0a0074;
    public static final int support_simple_spinner_dropdown_item=0x7f0a0075;
    public static final int web=0x7f0a0076;
  }
  public static final class menu {
    public static final int activity_base_actions=0x7f0b0000;
    public static final int activity_help_actions=0x7f0b0001;
    public static final int activity_main_actions=0x7f0b0002;
    public static final int container_addressbook_actions=0x7f0b0003;
    public static final int fragment_addressbook_actions=0x7f0b0004;
    public static final int fragment_i2ptunnel_detail_actions=0x7f0b0005;
    public static final int fragment_i2ptunnel_list_actions=0x7f0b0006;
    public static final int fragment_log_actions=0x7f0b0007;
    public static final int fragment_netdb_list_actions=0x7f0b0008;
    public static final int fragment_web_actions=0x7f0b0009;
  }
  public static final class plurals {
    public static final int log_error_messages=0x7f0c0000;
    public static final int log_messages=0x7f0c0001;
  }
  public static final class raw {
    public static final int addressbook_config_txt=0x7f0d0000;
    public static final int android_css=0x7f0d0001;
    public static final int help_acr_browser_lightning=0x7f0d0002;
    public static final int help_addressbook=0x7f0d0003;
    public static final int help_embedded_browser=0x7f0d0004;
    public static final int help_i2ptunnel=0x7f0d0005;
    public static final int help_info_guardianproject_browser=0x7f0d0006;
    public static final int help_info_guardianproject_orfox=0x7f0d0007;
    public static final int help_main=0x7f0d0008;
    public static final int help_org_gnu_icecat=0x7f0d0009;
    public static final int help_org_mozilla_fennec_fdroid=0x7f0d000a;
    public static final int help_org_mozilla_firefox=0x7f0d000b;
    public static final int help_unknown_browser=0x7f0d000c;
    public static final int help_unsupported_browser=0x7f0d000d;
    public static final int i2ptunnel_config=0x7f0d000e;
    public static final int initialnews_html=0x7f0d000f;
    public static final int license_apache20_txt=0x7f0d0010;
    public static final int license_app_txt=0x7f0d0011;
    public static final int licenses_txt=0x7f0d0012;
    public static final int logger_config=0x7f0d0013;
    public static final int more_hosts_txt=0x7f0d0014;
    public static final int releasenotes_txt=0x7f0d0015;
    public static final int router_config=0x7f0d0016;
    public static final int subscriptions_txt=0x7f0d0017;
    public static final int welcome_html=0x7f0d0018;
  }
  public static final class string {
    public static final int DEFAULT_JUMP_LIST=0x7f0e0000;
    public static final int DEFAULT_LANGUAGE=0x7f0e0001;
    public static final int PREF_LANGUAGE=0x7f0e0002;
    public static final int PROP_DEFAULTLEVEL=0x7f0e0003;
    public static final int PROP_DISABLE_EXTERNAL=0x7f0e0004;
    public static final int PROP_ENABLE_NTCP=0x7f0e0005;
    public static final int PROP_ENABLE_UDP=0x7f0e0006;
    public static final int PROP_ENABLE_UPNP=0x7f0e0007;
    public static final int PROP_I2NP_NTCP_AUTO_PORT=0x7f0e0008;
    public static final int PROP_I2NP_NTCP_HOSTNAME=0x7f0e0009;
    public static final int PROP_I2NP_NTCP_PORT=0x7f0e000a;
    public static final int PROP_INBOUND_BANDWIDTH=0x7f0e000b;
    public static final int PROP_INBOUND_EXPLORATORY_BACKUP_QUANTITY=0x7f0e000c;
    public static final int PROP_INBOUND_EXPLORATORY_LENGTH=0x7f0e000d;
    public static final int PROP_INBOUND_EXPLORATORY_LENGTH_VARIANCE=0x7f0e000e;
    public static final int PROP_INBOUND_EXPLORATORY_QUANTITY=0x7f0e000f;
    public static final int PROP_NTCP_MAX_CONNECTIONS=0x7f0e0010;
    public static final int PROP_OUTBOUND_BANDWIDTH=0x7f0e0011;
    public static final int PROP_OUTBOUND_EXPLORATORY_BACKUP_QUANTITY=0x7f0e0012;
    public static final int PROP_OUTBOUND_EXPLORATORY_LENGTH=0x7f0e0013;
    public static final int PROP_OUTBOUND_EXPLORATORY_LENGTH_VARIANCE=0x7f0e0014;
    public static final int PROP_OUTBOUND_EXPLORATORY_QUANTITY=0x7f0e0015;
    public static final int PROP_UDP_INTERNAL_PORT=0x7f0e0016;
    public static final int PROP_UDP_MAX_CONNECTIONS=0x7f0e0017;
    public static final int TUNNEL_CAT_ACCESS_CONTROL=0x7f0e0018;
    public static final int TUNNEL_CAT_ADVANCED=0x7f0e0019;
    public static final int TUNNEL_CAT_GENERAL=0x7f0e001a;
    public static final int TUNNEL_CAT_IDLE=0x7f0e001b;
    public static final int TUNNEL_CAT_PORT=0x7f0e001c;
    public static final int TUNNEL_CAT_TUNNEL_PARAMS=0x7f0e001d;
    public static final int TUNNEL_DESCRIPTION=0x7f0e001e;
    public static final int TUNNEL_DEST=0x7f0e001f;
    public static final int TUNNEL_HTTPCLIENT_SSL_OUTPROXIES=0x7f0e0020;
    public static final int TUNNEL_INTERFACE=0x7f0e0021;
    public static final int TUNNEL_IRCCLIENT_ENABLE_DCC=0x7f0e0022;
    public static final int TUNNEL_LISTEN_PORT=0x7f0e0023;
    public static final int TUNNEL_NAME=0x7f0e0024;
    public static final int TUNNEL_OPT_ACCESS_LIST=0x7f0e0025;
    public static final int TUNNEL_OPT_ACCESS_MODE=0x7f0e0026;
    public static final int TUNNEL_OPT_BACKUP_QUANTITY=0x7f0e0027;
    public static final int TUNNEL_OPT_CLOSE_IDLE=0x7f0e0028;
    public static final int TUNNEL_OPT_CLOSE_TIME=0x7f0e0029;
    public static final int TUNNEL_OPT_CUSTOM_OPTIONS=0x7f0e002a;
    public static final int TUNNEL_OPT_DELAY_CONNECT=0x7f0e002b;
    public static final int TUNNEL_OPT_DELAY_OPEN=0x7f0e002c;
    public static final int TUNNEL_OPT_ENCRYPT=0x7f0e002d;
    public static final int TUNNEL_OPT_ENCRYPT_KEY=0x7f0e002e;
    public static final int TUNNEL_OPT_HTTPCLIENT_ALLOW_SSL=0x7f0e002f;
    public static final int TUNNEL_OPT_HTTPCLIENT_PASS_ACCEPT=0x7f0e0030;
    public static final int TUNNEL_OPT_HTTPCLIENT_PASS_REFERER=0x7f0e0031;
    public static final int TUNNEL_OPT_HTTPCLIENT_PASS_UA=0x7f0e0032;
    public static final int TUNNEL_OPT_JUMP_LIST=0x7f0e0033;
    public static final int TUNNEL_OPT_LENGTH=0x7f0e0034;
    public static final int TUNNEL_OPT_LIMIT_DAY=0x7f0e0035;
    public static final int TUNNEL_OPT_LIMIT_HOUR=0x7f0e0036;
    public static final int TUNNEL_OPT_LIMIT_MINUTE=0x7f0e0037;
    public static final int TUNNEL_OPT_LOCAL_AUTH=0x7f0e0038;
    public static final int TUNNEL_OPT_LOCAL_PASSWORD=0x7f0e0039;
    public static final int TUNNEL_OPT_LOCAL_USERNAME=0x7f0e003a;
    public static final int TUNNEL_OPT_MAX_STREAMS=0x7f0e003b;
    public static final int TUNNEL_OPT_MULTIHOME=0x7f0e003c;
    public static final int TUNNEL_OPT_OUTPROXY_AUTH=0x7f0e003d;
    public static final int TUNNEL_OPT_OUTPROXY_PASSWORD=0x7f0e003e;
    public static final int TUNNEL_OPT_OUTPROXY_USERNAME=0x7f0e003f;
    public static final int TUNNEL_OPT_PERSISTENT_KEY=0x7f0e0040;
    public static final int TUNNEL_OPT_POST_BAN_TIME=0x7f0e0041;
    public static final int TUNNEL_OPT_POST_CHECK_TIME=0x7f0e0042;
    public static final int TUNNEL_OPT_POST_MAX=0x7f0e0043;
    public static final int TUNNEL_OPT_POST_TOTAL_BAN_TIME=0x7f0e0044;
    public static final int TUNNEL_OPT_POST_TOTAL_MAX=0x7f0e0045;
    public static final int TUNNEL_OPT_PROFILE=0x7f0e0046;
    public static final int TUNNEL_OPT_QUANTITY=0x7f0e0047;
    public static final int TUNNEL_OPT_REDUCE_IDLE=0x7f0e0048;
    public static final int TUNNEL_OPT_REDUCE_QUANTITY=0x7f0e0049;
    public static final int TUNNEL_OPT_REDUCE_TIME=0x7f0e004a;
    public static final int TUNNEL_OPT_REJECT_INPROXY=0x7f0e004b;
    public static final int TUNNEL_OPT_SIGTYPE=0x7f0e004c;
    public static final int TUNNEL_OPT_TOTAL_DAY=0x7f0e004d;
    public static final int TUNNEL_OPT_TOTAL_HOUR=0x7f0e004e;
    public static final int TUNNEL_OPT_TOTAL_MINUTE=0x7f0e004f;
    public static final int TUNNEL_OPT_UNIQUE_LOCAL=0x7f0e0050;
    public static final int TUNNEL_OPT_VARIANCE=0x7f0e0051;
    public static final int TUNNEL_OTP_NEW_KEYS=0x7f0e0052;
    public static final int TUNNEL_PRIV_KEY_FILE=0x7f0e0053;
    public static final int TUNNEL_PROXIES=0x7f0e0054;
    public static final int TUNNEL_SHARED_CLIENT=0x7f0e0055;
    public static final int TUNNEL_SPOOFED_HOST=0x7f0e0056;
    public static final int TUNNEL_START_ON_LOAD=0x7f0e0057;
    public static final int TUNNEL_TARGET_HOST=0x7f0e0058;
    public static final int TUNNEL_TARGET_PORT=0x7f0e0059;
    public static final int TUNNEL_TYPE=0x7f0e005a;
    public static final int abc_action_bar_home_description=0x7f0e005b;
    public static final int abc_action_bar_up_description=0x7f0e005c;
    public static final int abc_action_menu_overflow_description=0x7f0e005d;
    public static final int abc_action_mode_done=0x7f0e005e;
    public static final int abc_activity_chooser_view_see_all=0x7f0e005f;
    public static final int abc_activitychooserview_choose_application=0x7f0e0060;
    public static final int abc_capital_off=0x7f0e0061;
    public static final int abc_capital_on=0x7f0e0062;
    public static final int abc_font_family_body_1_material=0x7f0e0063;
    public static final int abc_font_family_body_2_material=0x7f0e0064;
    public static final int abc_font_family_button_material=0x7f0e0065;
    public static final int abc_font_family_caption_material=0x7f0e0066;
    public static final int abc_font_family_display_1_material=0x7f0e0067;
    public static final int abc_font_family_display_2_material=0x7f0e0068;
    public static final int abc_font_family_display_3_material=0x7f0e0069;
    public static final int abc_font_family_display_4_material=0x7f0e006a;
    public static final int abc_font_family_headline_material=0x7f0e006b;
    public static final int abc_font_family_menu_material=0x7f0e006c;
    public static final int abc_font_family_subhead_material=0x7f0e006d;
    public static final int abc_font_family_title_material=0x7f0e006e;
    public static final int abc_menu_alt_shortcut_label=0x7f0e006f;
    public static final int abc_menu_ctrl_shortcut_label=0x7f0e0070;
    public static final int abc_menu_delete_shortcut_label=0x7f0e0071;
    public static final int abc_menu_enter_shortcut_label=0x7f0e0072;
    public static final int abc_menu_function_shortcut_label=0x7f0e0073;
    public static final int abc_menu_meta_shortcut_label=0x7f0e0074;
    public static final int abc_menu_shift_shortcut_label=0x7f0e0075;
    public static final int abc_menu_space_shortcut_label=0x7f0e0076;
    public static final int abc_menu_sym_shortcut_label=0x7f0e0077;
    public static final int abc_prepend_shortcut_label=0x7f0e0078;
    public static final int abc_search_hint=0x7f0e0079;
    public static final int abc_searchview_description_clear=0x7f0e007a;
    public static final int abc_searchview_description_query=0x7f0e007b;
    public static final int abc_searchview_description_search=0x7f0e007c;
    public static final int abc_searchview_description_submit=0x7f0e007d;
    public static final int abc_searchview_description_voice=0x7f0e007e;
    public static final int abc_shareactionprovider_share_with=0x7f0e007f;
    public static final int abc_shareactionprovider_share_with_application=0x7f0e0080;
    public static final int abc_toolbar_collapse_description=0x7f0e0081;
    public static final int about_bugs=0x7f0e0082;
    public static final int about_donate=0x7f0e0083;
    public static final int about_helpwanted=0x7f0e0084;
    public static final int about_project=0x7f0e0085;
    public static final int about_version=0x7f0e0086;
    public static final int about_volunteer=0x7f0e0087;
    public static final int access_control=0x7f0e0088;
    public static final int access_list=0x7f0e0089;
    public static final int action_add=0x7f0e008a;
    public static final int action_delete=0x7f0e008b;
    public static final int action_edit=0x7f0e008c;
    public static final int action_i2ptunnel_restart_all=0x7f0e008d;
    public static final int action_i2ptunnel_start=0x7f0e008e;
    public static final int action_i2ptunnel_start_all=0x7f0e008f;
    public static final int action_i2ptunnel_stop=0x7f0e0090;
    public static final int action_i2ptunnel_stop_all=0x7f0e0091;
    public static final int action_refresh=0x7f0e0092;
    public static final int action_reload=0x7f0e0093;
    public static final int action_reload_subscriptions=0x7f0e0094;
    public static final int action_search=0x7f0e0095;
    public static final int active_peers=0x7f0e0096;
    public static final int address_copied_to_clipboard=0x7f0e0097;
    public static final int addressbook_add_wizard_desc_destination=0x7f0e0098;
    public static final int addressbook_add_wizard_desc_name=0x7f0e0099;
    public static final int addressbook_add_wizard_k_destination=0x7f0e009a;
    public static final int addressbook_add_wizard_k_name=0x7f0e009b;
    public static final int addressbook_is_empty=0x7f0e009c;
    public static final int addressbook_search_header=0x7f0e009d;
    public static final int all=0x7f0e009e;
    public static final int app_name=0x7f0e009f;
    public static final int app_needed_for_this_tunnel_type=0x7f0e00a0;
    public static final int auto_start=0x7f0e00a1;
    public static final int blacklist=0x7f0e00a2;
    public static final int button_cancel_graceful=0x7f0e00a3;
    public static final int button_router_graceful=0x7f0e00a4;
    public static final int button_router_off=0x7f0e00a5;
    public static final int button_router_on=0x7f0e00a6;
    public static final int button_shutdown_now=0x7f0e00a7;
    public static final int char_client_tunnel=0x7f0e00a8;
    public static final int char_server_tunnel=0x7f0e00a9;
    public static final int choose_language=0x7f0e00aa;
    public static final int client_ban_length=0x7f0e00ab;
    public static final int client_connection_limits=0x7f0e00ac;
    public static final int client_posts_per_period=0x7f0e00ad;
    public static final int client_ssl=0x7f0e00ae;
    public static final int close_tunnels=0x7f0e00af;
    public static final int configure_browser_for_i2p=0x7f0e00b0;
    public static final int configure_browser_title=0x7f0e00b1;
    public static final int configure_graphs=0x7f0e00b2;
    public static final int configure_no_doze=0x7f0e00b3;
    public static final int configure_no_doze_title=0x7f0e00b4;
    public static final int connections_per_day=0x7f0e00b5;
    public static final int connections_per_hour=0x7f0e00b6;
    public static final int connections_per_minute=0x7f0e00b7;
    public static final int copy_logs=0x7f0e00b8;
    public static final int count=0x7f0e00b9;
    public static final int countries=0x7f0e00ba;
    public static final int country=0x7f0e00bb;
    public static final int custom_options=0x7f0e00bc;
    public static final int default_progressbar=0x7f0e00bd;
    public static final int delay_connect=0x7f0e00be;
    public static final int delay_open=0x7f0e00bf;
    public static final int desc_i2p_logo=0x7f0e00c0;
    public static final int description=0x7f0e00c1;
    public static final int disabled=0x7f0e00c2;
    public static final int download=0x7f0e00c3;
    public static final int edit_tunnel=0x7f0e00c4;
    public static final int enable_dcc=0x7f0e00c5;
    public static final int enabled=0x7f0e00c6;
    public static final int error_logs_copied_to_clipboard=0x7f0e00c7;
    public static final int expand_button_title=0x7f0e00c8;
    public static final int finish=0x7f0e00c9;
    public static final int firewalled=0x7f0e00ca;
    public static final int first_start_faq=0x7f0e00cb;
    public static final int first_start_faq_nonanon=0x7f0e00cc;
    public static final int first_start_irc=0x7f0e00cd;
    public static final int first_start_read=0x7f0e00ce;
    public static final int first_start_title=0x7f0e00cf;
    public static final int first_start_welcome=0x7f0e00d0;
    public static final int general=0x7f0e00d1;
    public static final int graphs_not_ready=0x7f0e00d2;
    public static final int hidden=0x7f0e00d3;
    public static final int hint_search_addressbook=0x7f0e00d4;
    public static final int http_client=0x7f0e00d5;
    public static final int i2p_android_error_logs=0x7f0e00d6;
    public static final int i2p_android_logs=0x7f0e00d7;
    public static final int i2ptunnel_delete_confirm_button=0x7f0e00d8;
    public static final int i2ptunnel_delete_confirm_message=0x7f0e00d9;
    public static final int i2ptunnel_msg_config_save_failed=0x7f0e00da;
    public static final int i2ptunnel_msg_config_saved=0x7f0e00db;
    public static final int i2ptunnel_msg_tunnel_starting=0x7f0e00dc;
    public static final int i2ptunnel_msg_tunnel_stopping=0x7f0e00dd;
    public static final int i2ptunnel_new_tunnel=0x7f0e00de;
    public static final int i2ptunnel_no_tunnel_details=0x7f0e00df;
    public static final int i2ptunnel_not_initialized=0x7f0e00e0;
    public static final int i2ptunnel_type_client=0x7f0e00e1;
    public static final int i2ptunnel_type_connectclient=0x7f0e00e2;
    public static final int i2ptunnel_type_httpbidirserver=0x7f0e00e3;
    public static final int i2ptunnel_type_httpclient=0x7f0e00e4;
    public static final int i2ptunnel_type_httpserver=0x7f0e00e5;
    public static final int i2ptunnel_type_ircclient=0x7f0e00e6;
    public static final int i2ptunnel_type_ircserver=0x7f0e00e7;
    public static final int i2ptunnel_type_server=0x7f0e00e8;
    public static final int i2ptunnel_type_socksirctunnel=0x7f0e00e9;
    public static final int i2ptunnel_type_sockstunnel=0x7f0e00ea;
    public static final int i2ptunnel_type_streamrclient=0x7f0e00eb;
    public static final int i2ptunnel_type_streamrserver=0x7f0e00ec;
    public static final int i2ptunnel_view_access_point=0x7f0e00ed;
    public static final int i2ptunnel_view_autostart=0x7f0e00ee;
    public static final int i2ptunnel_view_target=0x7f0e00ef;
    public static final int i2ptunnel_wizard_desc_auto_start=0x7f0e00f0;
    public static final int i2ptunnel_wizard_desc_binding_port=0x7f0e00f1;
    public static final int i2ptunnel_wizard_desc_desc=0x7f0e00f2;
    public static final int i2ptunnel_wizard_desc_dest=0x7f0e00f3;
    public static final int i2ptunnel_wizard_desc_name=0x7f0e00f4;
    public static final int i2ptunnel_wizard_desc_outproxies=0x7f0e00f5;
    public static final int i2ptunnel_wizard_desc_reachable_on=0x7f0e00f6;
    public static final int i2ptunnel_wizard_desc_target_host=0x7f0e00f7;
    public static final int i2ptunnel_wizard_desc_target_port=0x7f0e00f8;
    public static final int i2ptunnel_wizard_k_auto_start=0x7f0e00f9;
    public static final int i2ptunnel_wizard_k_binding_port=0x7f0e00fa;
    public static final int i2ptunnel_wizard_k_client_server=0x7f0e00fb;
    public static final int i2ptunnel_wizard_k_desc=0x7f0e00fc;
    public static final int i2ptunnel_wizard_k_dest=0x7f0e00fd;
    public static final int i2ptunnel_wizard_k_name=0x7f0e00fe;
    public static final int i2ptunnel_wizard_k_outproxies=0x7f0e00ff;
    public static final int i2ptunnel_wizard_k_reachable_on=0x7f0e0100;
    public static final int i2ptunnel_wizard_k_target_host=0x7f0e0101;
    public static final int i2ptunnel_wizard_k_target_port=0x7f0e0102;
    public static final int i2ptunnel_wizard_k_type=0x7f0e0103;
    public static final int i2ptunnel_wizard_submit_confirm_button=0x7f0e0104;
    public static final int i2ptunnel_wizard_submit_confirm_message=0x7f0e0105;
    public static final int i2ptunnel_wizard_v_client=0x7f0e0106;
    public static final int i2ptunnel_wizard_v_server=0x7f0e0107;
    public static final int idle_time=0x7f0e0108;
    public static final int install_i2p_android=0x7f0e0109;
    public static final int install_recommended_app=0x7f0e010a;
    public static final int irc=0x7f0e010b;
    public static final int jump_url_list=0x7f0e010c;
    public static final int known_peers=0x7f0e010d;
    public static final int label_addressbook=0x7f0e010e;
    public static final int label_addresses=0x7f0e010f;
    public static final int label_browse=0x7f0e0110;
    public static final int label_browser_configuration=0x7f0e0111;
    public static final int label_console=0x7f0e0112;
    public static final int label_error_logs=0x7f0e0113;
    public static final int label_graphs=0x7f0e0114;
    public static final int label_i2ptunnel=0x7f0e0115;
    public static final int label_i2ptunnel_client=0x7f0e0116;
    public static final int label_i2ptunnel_server=0x7f0e0117;
    public static final int label_licenses=0x7f0e0118;
    public static final int label_logs=0x7f0e0119;
    public static final int label_news=0x7f0e011a;
    public static final int label_peers_status=0x7f0e011b;
    public static final int label_private=0x7f0e011c;
    public static final int label_release_notes=0x7f0e011d;
    public static final int label_router=0x7f0e011e;
    public static final int label_status=0x7f0e011f;
    public static final int label_tunnels=0x7f0e0120;
    public static final int leasesets=0x7f0e0121;
    public static final int limit_period=0x7f0e0122;
    public static final int listen_port=0x7f0e0123;
    public static final int log_entry=0x7f0e0124;
    public static final int logs_copied_to_clipboard=0x7f0e0125;
    public static final int market_i2p_android=0x7f0e0126;
    public static final int market_irc=0x7f0e0127;
    public static final int max_active_connections=0x7f0e0128;
    public static final int menu_about=0x7f0e0129;
    public static final int menu_help=0x7f0e012a;
    public static final int menu_settings=0x7f0e012b;
    public static final int multihome=0x7f0e012c;
    public static final int name=0x7f0e012d;
    public static final int net_status_error_i2cp=0x7f0e012e;
    public static final int net_status_error_no_active_peers=0x7f0e012f;
    public static final int net_status_error_private_tcp=0x7f0e0130;
    public static final int net_status_error_skew=0x7f0e0131;
    public static final int net_status_error_udp_disabled_tcp_not_set=0x7f0e0132;
    public static final int net_status_error_udp_port=0x7f0e0133;
    public static final int net_status_error_unresolved_tcp=0x7f0e0134;
    public static final int net_status_info_disconnected=0x7f0e0135;
    public static final int net_status_ipv4_ipv6=0x7f0e0136;
    public static final int net_status_warn_firewalled_floodfill=0x7f0e0137;
    public static final int net_status_warn_firewalled_inbound_tcp=0x7f0e0138;
    public static final int net_status_warn_firewalled_udp_disabled=0x7f0e0139;
    public static final int netdb_leases_empty=0x7f0e013a;
    public static final int netdb_routers_empty=0x7f0e013b;
    public static final int new_keys_on_reopen=0x7f0e013c;
    public static final int new_keys_on_reopen_conflict_msg=0x7f0e013d;
    public static final int new_keys_on_reopen_conflict_title=0x7f0e013e;
    public static final int news_last_checked=0x7f0e013f;
    public static final int news_last_updated=0x7f0e0140;
    public static final int news_updated=0x7f0e0141;
    public static final int next=0x7f0e0142;
    public static final int no=0x7f0e0143;
    public static final int no_configured_client_tunnels=0x7f0e0144;
    public static final int no_configured_server_tunnels=0x7f0e0145;
    public static final int no_error_messages=0x7f0e0146;
    public static final int no_graphs_configured=0x7f0e0147;
    public static final int no_internet=0x7f0e0148;
    public static final int no_market_app=0x7f0e0149;
    public static final int no_messages=0x7f0e014a;
    public static final int no_tunnels_running=0x7f0e014b;
    public static final int notification_status_bw=0x7f0e014c;
    public static final int notification_status_client=0x7f0e014d;
    public static final int notification_status_client_down=0x7f0e014e;
    public static final int notification_status_client_ready=0x7f0e014f;
    public static final int notification_status_expl=0x7f0e0150;
    public static final int notification_status_graceful=0x7f0e0151;
    public static final int notification_status_peers=0x7f0e0152;
    public static final int notification_status_restarting=0x7f0e0153;
    public static final int notification_status_running=0x7f0e0154;
    public static final int notification_status_shutdown_cancelled=0x7f0e0155;
    public static final int notification_status_shutting_down=0x7f0e0156;
    public static final int notification_status_starting=0x7f0e0157;
    public static final int notification_status_starting_after_waiting=0x7f0e0158;
    public static final int notification_status_stopping=0x7f0e0159;
    public static final int notification_status_stopping_after_net=0x7f0e015a;
    public static final int notification_status_text=0x7f0e015b;
    public static final int notification_status_waiting=0x7f0e015c;
    public static final int nsu_iae_cannot_contain=0x7f0e015d;
    public static final int nsu_iae_cannot_end_with=0x7f0e015e;
    public static final int nsu_iae_cannot_start_with=0x7f0e015f;
    public static final int nsu_iae_illegal_char=0x7f0e0160;
    public static final int nsu_iae_requires_conversion=0x7f0e0161;
    public static final int num_minutes=0x7f0e0162;
    public static final int num_per_day=0x7f0e0163;
    public static final int num_per_hour=0x7f0e0164;
    public static final int num_per_minute=0x7f0e0165;
    public static final int other=0x7f0e0166;
    public static final int outproxies=0x7f0e0167;
    public static final int outproxy_auth=0x7f0e0168;
    public static final int password=0x7f0e0169;
    public static final int persistent_key=0x7f0e016a;
    public static final int persistent_key_conflict_msg=0x7f0e016b;
    public static final int persistent_key_conflict_title=0x7f0e016c;
    public static final int post_limits=0x7f0e016d;
    public static final int power_saving=0x7f0e016e;
    public static final int prev=0x7f0e016f;
    public static final int profile=0x7f0e0170;
    public static final int profile_bulk=0x7f0e0171;
    public static final int profile_interactive=0x7f0e0172;
    public static final int proxy_auth=0x7f0e0173;
    public static final int reachable_on=0x7f0e0174;
    public static final int reduce_quantity=0x7f0e0175;
    public static final int reduced_tunnel_quantity=0x7f0e0176;
    public static final int reject_inproxies=0x7f0e0177;
    public static final int restricted_access=0x7f0e0178;
    public static final int review=0x7f0e0179;
    public static final int router_not_running=0x7f0e017a;
    public static final int router_shutting_down=0x7f0e017b;
    public static final int routers=0x7f0e017c;
    public static final int search_menu_title=0x7f0e017d;
    public static final int select_an_address=0x7f0e017e;
    public static final int set_zero_for_unlimited=0x7f0e017f;
    public static final int settings_default=0x7f0e0180;
    public static final int settings_desc_bw_inbound=0x7f0e0181;
    public static final int settings_desc_bw_outbound=0x7f0e0182;
    public static final int settings_desc_expl_backupQuantity=0x7f0e0183;
    public static final int settings_desc_expl_length=0x7f0e0184;
    public static final int settings_desc_expl_lengthVariance=0x7f0e0185;
    public static final int settings_desc_expl_quantity=0x7f0e0186;
    public static final int settings_desc_exploratory_pool=0x7f0e0187;
    public static final int settings_desc_hiddenMode=0x7f0e0188;
    public static final int settings_desc_i2cp=0x7f0e0189;
    public static final int settings_desc_maxPartTunnels=0x7f0e018a;
    public static final int settings_desc_sharePercent=0x7f0e018b;
    public static final int settings_desc_startOnBoot=0x7f0e018c;
    public static final int settings_desc_subscriptions=0x7f0e018d;
    public static final int settings_desc_upnp=0x7f0e018e;
    public static final int settings_dialog_maxPartTunnels=0x7f0e018f;
    public static final int settings_dialog_sharePercent=0x7f0e0190;
    public static final int settings_enable=0x7f0e0191;
    public static final int settings_label_advanced=0x7f0e0192;
    public static final int settings_label_appearance=0x7f0e0193;
    public static final int settings_label_bandwidth=0x7f0e0194;
    public static final int settings_label_bandwidth_net=0x7f0e0195;
    public static final int settings_label_bw_inbound=0x7f0e0196;
    public static final int settings_label_bw_outbound=0x7f0e0197;
    public static final int settings_label_default_log_level=0x7f0e0198;
    public static final int settings_label_expl_backupQuantity=0x7f0e0199;
    public static final int settings_label_expl_inbound=0x7f0e019a;
    public static final int settings_label_expl_length=0x7f0e019b;
    public static final int settings_label_expl_lengthVariance=0x7f0e019c;
    public static final int settings_label_expl_outbound=0x7f0e019d;
    public static final int settings_label_expl_quantity=0x7f0e019e;
    public static final int settings_label_exploratory_pool=0x7f0e019f;
    public static final int settings_label_hiddenMode=0x7f0e01a0;
    public static final int settings_label_i2cp=0x7f0e01a1;
    public static final int settings_label_language=0x7f0e01a2;
    public static final int settings_label_logging=0x7f0e01a3;
    public static final int settings_label_maxConns=0x7f0e01a4;
    public static final int settings_label_maxPartTunnels=0x7f0e01a5;
    public static final int settings_label_network=0x7f0e01a6;
    public static final int settings_label_sharePercent=0x7f0e01a7;
    public static final int settings_label_showStats=0x7f0e01a8;
    public static final int settings_label_startOnBoot=0x7f0e01a9;
    public static final int settings_label_transports=0x7f0e01aa;
    public static final int settings_need_transport_enabled=0x7f0e01ab;
    public static final int settings_router_restart_required=0x7f0e01ac;
    public static final int settings_summ_expl_backupQuantity=0x7f0e01ad;
    public static final int settings_summ_expl_length=0x7f0e01ae;
    public static final int settings_summ_expl_lengthVariance=0x7f0e01af;
    public static final int settings_summ_expl_quantity=0x7f0e01b0;
    public static final int settings_summ_showStats=0x7f0e01b1;
    public static final int shared_client=0x7f0e01b2;
    public static final int shared_clients=0x7f0e01b3;
    public static final int signature_type=0x7f0e01b4;
    public static final int ssl_outproxies=0x7f0e01b5;
    public static final int start_i2p_android=0x7f0e01b6;
    public static final int statistics=0x7f0e01b7;
    public static final int stats_not_ready=0x7f0e01b8;
    public static final int status_bar_notification_info_overflow=0x7f0e01b9;
    public static final int summary_collapsed_preference_list=0x7f0e01ba;
    public static final int symmetric_nat=0x7f0e01bb;
    public static final int target_destination=0x7f0e01bc;
    public static final int target_host=0x7f0e01bd;
    public static final int target_port=0x7f0e01be;
    public static final int testing=0x7f0e01bf;
    public static final int tname_0=0x7f0e01c0;
    public static final int tname_1=0x7f0e01c1;
    public static final int tname_10=0x7f0e01c2;
    public static final int tname_11=0x7f0e01c3;
    public static final int tname_12=0x7f0e01c4;
    public static final int tname_13=0x7f0e01c5;
    public static final int tname_14=0x7f0e01c6;
    public static final int tname_15=0x7f0e01c7;
    public static final int tname_2=0x7f0e01c8;
    public static final int tname_4=0x7f0e01c9;
    public static final int tname_5=0x7f0e01ca;
    public static final int tname_6=0x7f0e01cb;
    public static final int tname_9=0x7f0e01cc;
    public static final int total_ban_length=0x7f0e01cd;
    public static final int total_connection_limits=0x7f0e01ce;
    public static final int total_connections_per_day=0x7f0e01cf;
    public static final int total_connections_per_hour=0x7f0e01d0;
    public static final int total_connections_per_minute=0x7f0e01d1;
    public static final int total_posts_per_period=0x7f0e01d2;
    public static final int transport=0x7f0e01d3;
    public static final int tunnel_cat_ports=0x7f0e01d4;
    public static final int tunnel_parameters=0x7f0e01d5;
    public static final int tunnel_summ_accept=0x7f0e01d6;
    public static final int tunnel_summ_allow_ssl=0x7f0e01d7;
    public static final int tunnel_summ_auto_start=0x7f0e01d8;
    public static final int tunnel_summ_client_ssl=0x7f0e01d9;
    public static final int tunnel_summ_delay_connect=0x7f0e01da;
    public static final int tunnel_summ_delay_open=0x7f0e01db;
    public static final int tunnel_summ_enable_dcc=0x7f0e01dc;
    public static final int tunnel_summ_multihome=0x7f0e01dd;
    public static final int tunnel_summ_outproxy_auth=0x7f0e01de;
    public static final int tunnel_summ_persistent_key=0x7f0e01df;
    public static final int tunnel_summ_proxy_auth=0x7f0e01e0;
    public static final int tunnel_summ_reduce_quantity=0x7f0e01e1;
    public static final int tunnel_summ_referer=0x7f0e01e2;
    public static final int tunnel_summ_reject_inproxies=0x7f0e01e3;
    public static final int tunnel_summ_shared_client=0x7f0e01e4;
    public static final int tunnel_summ_unique_local=0x7f0e01e5;
    public static final int tunnel_summ_use_ssl=0x7f0e01e6;
    public static final int tunnel_summ_user_agent=0x7f0e01e7;
    public static final int unique_local=0x7f0e01e8;
    public static final int unlimited=0x7f0e01e9;
    public static final int unset=0x7f0e01ea;
    public static final int upload=0x7f0e01eb;
    public static final int uptime=0x7f0e01ec;
    public static final int url_android_forum=0x7f0e01ed;
    public static final int url_donate=0x7f0e01ee;
    public static final int url_faq=0x7f0e01ef;
    public static final int url_faq_nonanon=0x7f0e01f0;
    public static final int url_irc_i2p=0x7f0e01f1;
    public static final int url_project=0x7f0e01f2;
    public static final int use_ssl=0x7f0e01f3;
    public static final int username=0x7f0e01f4;
    public static final int v7_preference_off=0x7f0e01f5;
    public static final int v7_preference_on=0x7f0e01f6;
    public static final int version=0x7f0e01f7;
    public static final int versions=0x7f0e01f8;
    public static final int view_news=0x7f0e01f9;
    public static final int vm_comm_system=0x7f0e01fa;
    public static final int website_domain_name=0x7f0e01fb;
    public static final int welcome_new_install=0x7f0e01fc;
    public static final int welcome_new_version=0x7f0e01fd;
    public static final int whitelist=0x7f0e01fe;
    public static final int would_you_like_to_start_i2p_android=0x7f0e01ff;
    public static final int yes=0x7f0e0200;
    public static final int you_must_have_i2p_android=0x7f0e0201;
  }
  public static final class style {
    public static final int APDefacto=0x7f0f0000;
    public static final int APDefacto_Dark=0x7f0f0001;
    public static final int APDefacto_Light=0x7f0f0002;
    public static final int AlertDialog_AppCompat=0x7f0f0003;
    public static final int AlertDialog_AppCompat_Light=0x7f0f0004;
    public static final int Animation_AppCompat_Dialog=0x7f0f0005;
    public static final int Animation_AppCompat_DropDownUp=0x7f0f0006;
    public static final int Animation_AppCompat_Tooltip=0x7f0f0007;
    public static final int Base=0x7f0f0008;
    public static final int Base_AlertDialog_AppCompat=0x7f0f0009;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f0f000a;
    public static final int Base_Animation_AppCompat_Dialog=0x7f0f000b;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f0f000c;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f0f000d;
    public static final int Base_ConsoleMenu=0x7f0f000e;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f0f000f;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f0f0010;
    public static final int Base_ListItem=0x7f0f0011;
    public static final int Base_ListItem_TextOnly=0x7f0f0012;
    public static final int Base_ListItemContent_Action=0x7f0f0013;
    public static final int Base_ListItemContent_Text=0x7f0f0014;
    public static final int Base_PagerIndicator=0x7f0f0015;
    public static final int Base_TextAppearance_AppCompat=0x7f0f0016;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f0f0017;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f0f0018;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f0f0019;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f0f001a;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f0f001b;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f0f001c;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f0f001d;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f0f001e;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f0f001f;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f0f0020;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f0f0021;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f0f0022;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0f0023;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0f0024;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f0f0025;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f0f0026;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f0f0027;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f0f0028;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0f0029;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f0f002a;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f0f002b;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f0f002c;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f0f002d;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f0f002e;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f0f002f;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f0f0030;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f0f0031;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0f0032;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0f0033;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0f0034;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0f0035;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0f0036;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0f0037;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0f0038;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f0f0039;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f0f003a;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f0f003b;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f0f003c;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f0f003d;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f0f003e;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0f003f;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0f0040;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f0f0041;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f0f0042;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0f0043;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0f0044;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0f0045;
    public static final int Base_Theme_AppCompat=0x7f0f0046;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f0f0047;
    public static final int Base_Theme_AppCompat_Dialog=0x7f0f0048;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f0f0049;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f0f004a;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f0f004b;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f0f004c;
    public static final int Base_Theme_AppCompat_Light=0x7f0f004d;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f0f004e;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f0f004f;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f0f0050;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f0f0051;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f0f0052;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f0f0053;
    public static final int Base_Theme_I2P=0x7f0f0054;
    public static final int Base_ThemeOverlay_AppCompat=0x7f0f0055;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f0f0056;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f0f0057;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0f0058;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f0f0059;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f0f005a;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f0f005b;
    public static final int Base_V21_Theme_AppCompat=0x7f0f005c;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f0f005d;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f0f005e;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f0f005f;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f0f0060;
    public static final int Base_V22_Theme_AppCompat=0x7f0f0061;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f0f0062;
    public static final int Base_V23_Theme_AppCompat=0x7f0f0063;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f0f0064;
    public static final int Base_V26_Theme_AppCompat=0x7f0f0065;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f0f0066;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f0f0067;
    public static final int Base_V28_Theme_AppCompat=0x7f0f0068;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f0f0069;
    public static final int Base_V7_Theme_AppCompat=0x7f0f006a;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f0f006b;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f0f006c;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f0f006d;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f0f006e;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f0f006f;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f0f0070;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f0f0071;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f0f0072;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f0f0073;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f0f0074;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f0f0075;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f0f0076;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f0f0077;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f0f0078;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f0f0079;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f0f007a;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f0f007b;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f0f007c;
    public static final int Base_Widget_AppCompat_Button=0x7f0f007d;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f0f007e;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f0f007f;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f0f0080;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f0f0081;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f0f0082;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f0f0083;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f0f0084;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f0f0085;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f0f0086;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f0f0087;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f0f0088;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f0f0089;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f0f008a;
    public static final int Base_Widget_AppCompat_EditText=0x7f0f008b;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f0f008c;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f0f008d;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f0f008e;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f0f008f;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f0f0090;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0f0091;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f0f0092;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f0f0093;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0f0094;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f0f0095;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f0f0096;
    public static final int Base_Widget_AppCompat_ListView=0x7f0f0097;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f0f0098;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f0f0099;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f0f009a;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f0f009b;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f0f009c;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f0f009d;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f0f009e;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f0f009f;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f0f00a0;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f0f00a1;
    public static final int Base_Widget_AppCompat_SearchView=0x7f0f00a2;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f0f00a3;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f0f00a4;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f0f00a5;
    public static final int Base_Widget_AppCompat_Spinner=0x7f0f00a6;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f0f00a7;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f0f00a8;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f0f00a9;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f0f00aa;
    public static final int ConsoleMenu=0x7f0f00ab;
    public static final int ConsoleMenu_Button=0x7f0f00ac;
    public static final int ConsoleMenu_Button_Mini=0x7f0f00ad;
    public static final int Divider=0x7f0f00ae;
    public static final int Divider_Horizontal=0x7f0f00af;
    public static final int Divider_Vertical=0x7f0f00b0;
    public static final int FullScreenGraph=0x7f0f00b1;
    public static final int FullScreenGraph_Minimalist=0x7f0f00b2;
    public static final int FullScreenGraph_Minimalist_Dark=0x7f0f00b3;
    public static final int FullScreenGraph_Minimalist_Light=0x7f0f00b4;
    public static final int ListItem=0x7f0f00b5;
    public static final int ListItem_OneLine=0x7f0f00b6;
    public static final int ListItem_TextOnly=0x7f0f00b7;
    public static final int ListItem_TwoLines=0x7f0f00b8;
    public static final int ListItemContent=0x7f0f00b9;
    public static final int ListItemContent_Action=0x7f0f00ba;
    public static final int ListItemContent_Text=0x7f0f00bb;
    public static final int ListItemContent_Text_Main=0x7f0f00bc;
    public static final int ListItemContent_Text_Main_TwoLines=0x7f0f00bd;
    public static final int ListItemContent_Text_Second=0x7f0f00be;
    public static final int ListItemContent_Text_Second_TwoLines=0x7f0f00bf;
    public static final int PagerIndicator=0x7f0f00c0;
    public static final int PagerIndicator_FixedFooter=0x7f0f00c1;
    public static final int PagerIndicator_FixedTextView=0x7f0f00c2;
    public static final int Platform_AppCompat=0x7f0f00c3;
    public static final int Platform_AppCompat_Light=0x7f0f00c4;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f0f00c5;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f0f00c6;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f0f00c7;
    public static final int Platform_V21_AppCompat=0x7f0f00c8;
    public static final int Platform_V21_AppCompat_Light=0x7f0f00c9;
    public static final int Platform_V25_AppCompat=0x7f0f00ca;
    public static final int Platform_V25_AppCompat_Light=0x7f0f00cb;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f0f00cc;
    public static final int Preference=0x7f0f00cd;
    public static final int Preference_Category=0x7f0f00ce;
    public static final int Preference_Category_Material=0x7f0f00cf;
    public static final int Preference_CheckBoxPreference=0x7f0f00d0;
    public static final int Preference_CheckBoxPreference_Material=0x7f0f00d1;
    public static final int Preference_DialogPreference=0x7f0f00d2;
    public static final int Preference_DialogPreference_EditTextPreference=0x7f0f00d3;
    public static final int Preference_DialogPreference_EditTextPreference_Material=0x7f0f00d4;
    public static final int Preference_DialogPreference_Material=0x7f0f00d5;
    public static final int Preference_DropDown=0x7f0f00d6;
    public static final int Preference_DropDown_Material=0x7f0f00d7;
    public static final int Preference_Information=0x7f0f00d8;
    public static final int Preference_Information_Material=0x7f0f00d9;
    public static final int Preference_Material=0x7f0f00da;
    public static final int Preference_PreferenceScreen=0x7f0f00db;
    public static final int Preference_PreferenceScreen_Material=0x7f0f00dc;
    public static final int Preference_SeekBarPreference=0x7f0f00dd;
    public static final int Preference_SeekBarPreference_Material=0x7f0f00de;
    public static final int Preference_SwitchPreference=0x7f0f00df;
    public static final int Preference_SwitchPreference_Material=0x7f0f00e0;
    public static final int Preference_SwitchPreferenceCompat=0x7f0f00e1;
    public static final int Preference_SwitchPreferenceCompat_Material=0x7f0f00e2;
    public static final int PreferenceFragment=0x7f0f00e3;
    public static final int PreferenceFragment_Material=0x7f0f00e4;
    public static final int PreferenceFragmentList=0x7f0f00e5;
    public static final int PreferenceFragmentList_Material=0x7f0f00e6;
    public static final int PreferenceThemeOverlay=0x7f0f00e7;
    public static final int PreferenceThemeOverlay_v14=0x7f0f00e8;
    public static final int PreferenceThemeOverlay_v14_Material=0x7f0f00e9;
    public static final int Preference_TextAppearanceMaterialBody2=0x7f0f00ea;
    public static final int Preference_TextAppearanceMaterialSubhead=0x7f0f00eb;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f0f00ec;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f0f00ed;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f0f00ee;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f0f00ef;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f0f00f0;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f0f00f1;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f0f00f2;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f0f00f3;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f0f00f4;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f0f00f5;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f0f00f6;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f0f00f7;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f0f00f8;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f0f00f9;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f0f00fa;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f0f00fb;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f0f00fc;
    public static final int TextAppearance_AppCompat=0x7f0f00fd;
    public static final int TextAppearance_AppCompat_Body1=0x7f0f00fe;
    public static final int TextAppearance_AppCompat_Body2=0x7f0f00ff;
    public static final int TextAppearance_AppCompat_Button=0x7f0f0100;
    public static final int TextAppearance_AppCompat_Caption=0x7f0f0101;
    public static final int TextAppearance_AppCompat_Display1=0x7f0f0102;
    public static final int TextAppearance_AppCompat_Display2=0x7f0f0103;
    public static final int TextAppearance_AppCompat_Display3=0x7f0f0104;
    public static final int TextAppearance_AppCompat_Display4=0x7f0f0105;
    public static final int TextAppearance_AppCompat_Headline=0x7f0f0106;
    public static final int TextAppearance_AppCompat_Inverse=0x7f0f0107;
    public static final int TextAppearance_AppCompat_Large=0x7f0f0108;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f0f0109;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f0f010a;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f0f010b;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0f010c;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0f010d;
    public static final int TextAppearance_AppCompat_Medium=0x7f0f010e;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f0f010f;
    public static final int TextAppearance_AppCompat_Menu=0x7f0f0110;
    public static final int TextAppearance_AppCompat_Primary=0x7f0f0111;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0f0112;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f0f0113;
    public static final int TextAppearance_AppCompat_Secondary=0x7f0f0114;
    public static final int TextAppearance_AppCompat_Small=0x7f0f0115;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f0f0116;
    public static final int TextAppearance_AppCompat_Subhead=0x7f0f0117;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f0f0118;
    public static final int TextAppearance_AppCompat_Title=0x7f0f0119;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f0f011a;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f0f011b;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0f011c;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0f011d;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0f011e;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0f011f;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0f0120;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0f0121;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f0f0122;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0f0123;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f0f0124;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f0f0125;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f0f0126;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f0f0127;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f0f0128;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f0f0129;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f0f012a;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0f012b;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0f012c;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f0f012d;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f0f012e;
    public static final int TextAppearance_Compat_Notification=0x7f0f012f;
    public static final int TextAppearance_Compat_Notification_Info=0x7f0f0130;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f0f0131;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f0f0132;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f0f0133;
    public static final int TextAppearance_Compat_Notification_Media=0x7f0f0134;
    public static final int TextAppearance_Compat_Notification_Time=0x7f0f0135;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f0f0136;
    public static final int TextAppearance_Compat_Notification_Title=0x7f0f0137;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f0f0138;
    public static final int TextAppearance_TabPageIndicator=0x7f0f0139;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0f013a;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0f013b;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0f013c;
    public static final int Theme_AppCompat=0x7f0f013d;
    public static final int Theme_AppCompat_CompactMenu=0x7f0f013e;
    public static final int Theme_AppCompat_DayNight=0x7f0f013f;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f0f0140;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f0f0141;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f0f0142;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f0f0143;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f0f0144;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f0f0145;
    public static final int Theme_AppCompat_Dialog=0x7f0f0146;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f0f0147;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f0f0148;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f0f0149;
    public static final int Theme_AppCompat_Light=0x7f0f014a;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f0f014b;
    public static final int Theme_AppCompat_Light_Dialog=0x7f0f014c;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f0f014d;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f0f014e;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f0f014f;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f0f0150;
    public static final int Theme_AppCompat_NoActionBar=0x7f0f0151;
    public static final int Theme_I2P=0x7f0f0152;
    public static final int Theme_PageIndicatorDefaults=0x7f0f0153;
    public static final int ThemeOverlay_AppCompat=0x7f0f0154;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f0f0155;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f0f0156;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0f0157;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f0f0158;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f0f0159;
    public static final int ThemeOverlay_AppCompat_Light=0x7f0f015a;
    public static final int Widget=0x7f0f015b;
    public static final int Widget_AppCompat_ActionBar=0x7f0f015c;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f0f015d;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f0f015e;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f0f015f;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f0f0160;
    public static final int Widget_AppCompat_ActionButton=0x7f0f0161;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f0f0162;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f0f0163;
    public static final int Widget_AppCompat_ActionMode=0x7f0f0164;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f0f0165;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f0f0166;
    public static final int Widget_AppCompat_Button=0x7f0f0167;
    public static final int Widget_AppCompat_Button_Borderless=0x7f0f0168;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f0f0169;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f0f016a;
    public static final int Widget_AppCompat_Button_Colored=0x7f0f016b;
    public static final int Widget_AppCompat_Button_Small=0x7f0f016c;
    public static final int Widget_AppCompat_ButtonBar=0x7f0f016d;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f0f016e;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f0f016f;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f0f0170;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f0f0171;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f0f0172;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f0f0173;
    public static final int Widget_AppCompat_EditText=0x7f0f0174;
    public static final int Widget_AppCompat_ImageButton=0x7f0f0175;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f0f0176;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f0f0177;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f0f0178;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f0f0179;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f0f017a;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f0f017b;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0f017c;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f0f017d;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f0f017e;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f0f017f;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f0f0180;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f0f0181;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f0f0182;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f0f0183;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f0f0184;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f0f0185;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f0f0186;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f0f0187;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f0f0188;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0f0189;
    public static final int Widget_AppCompat_Light_SearchView=0x7f0f018a;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f0f018b;
    public static final int Widget_AppCompat_ListMenuView=0x7f0f018c;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f0f018d;
    public static final int Widget_AppCompat_ListView=0x7f0f018e;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f0f018f;
    public static final int Widget_AppCompat_ListView_Menu=0x7f0f0190;
    public static final int Widget_AppCompat_PopupMenu=0x7f0f0191;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f0f0192;
    public static final int Widget_AppCompat_PopupWindow=0x7f0f0193;
    public static final int Widget_AppCompat_ProgressBar=0x7f0f0194;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f0f0195;
    public static final int Widget_AppCompat_RatingBar=0x7f0f0196;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f0f0197;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f0f0198;
    public static final int Widget_AppCompat_SearchView=0x7f0f0199;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f0f019a;
    public static final int Widget_AppCompat_SeekBar=0x7f0f019b;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f0f019c;
    public static final int Widget_AppCompat_Spinner=0x7f0f019d;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f0f019e;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f0f019f;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f0f01a0;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f0f01a1;
    public static final int Widget_AppCompat_Toolbar=0x7f0f01a2;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f0f01a3;
    public static final int Widget_Compat_NotificationActionContainer=0x7f0f01a4;
    public static final int Widget_Compat_NotificationActionText=0x7f0f01a5;
    public static final int Widget_IconPageIndicator=0x7f0f01a6;
    public static final int Widget_Support_CoordinatorLayout=0x7f0f01a7;
    public static final int Widget_TabPageIndicator=0x7f0f01a8;
    public static final int WizardFormLabel=0x7f0f01a9;
    public static final int WizardPageContainer=0x7f0f01aa;
    public static final int WizardPageTitle=0x7f0f01ab;
    public static final int WizardPageTitleBase=0x7f0f01ac;
    public static final int menu_labels_style=0x7f0f01ad;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background net.i2p.android.donate.debug:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit net.i2p.android.donate.debug:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked net.i2p.android.donate.debug:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd net.i2p.android.donate.debug:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions net.i2p.android.donate.debug:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft net.i2p.android.donate.debug:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight net.i2p.android.donate.debug:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart net.i2p.android.donate.debug:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation net.i2p.android.donate.debug:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout net.i2p.android.donate.debug:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions net.i2p.android.donate.debug:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider net.i2p.android.donate.debug:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation net.i2p.android.donate.debug:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height net.i2p.android.donate.debug:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll net.i2p.android.donate.debug:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator net.i2p.android.donate.debug:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout net.i2p.android.donate.debug:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon net.i2p.android.donate.debug:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle net.i2p.android.donate.debug:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding net.i2p.android.donate.debug:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo net.i2p.android.donate.debug:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode net.i2p.android.donate.debug:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme net.i2p.android.donate.debug:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding net.i2p.android.donate.debug:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle net.i2p.android.donate.debug:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle net.i2p.android.donate.debug:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle net.i2p.android.donate.debug:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title net.i2p.android.donate.debug:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle net.i2p.android.donate.debug:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f030035, 0x7f030037, 0x7f030038, 0x7f030062, 
      0x7f030063, 0x7f030064, 0x7f030065, 0x7f030066, 
      0x7f030067, 0x7f03006a, 0x7f030077, 0x7f030078, 
      0x7f03009a, 0x7f0300e8, 0x7f0300e9, 0x7f0300ea, 
      0x7f0300eb, 0x7f0300ec, 0x7f0300f2, 0x7f0300f7, 
      0x7f03013a, 0x7f030156, 0x7f03016c, 0x7f03017f, 
      0x7f030180, 0x7f0301c2, 0x7f0301c5, 0x7f0301e7, 
      0x7f0301f2
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background net.i2p.android.donate.debug:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit net.i2p.android.donate.debug:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout net.i2p.android.donate.debug:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height net.i2p.android.donate.debug:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle net.i2p.android.donate.debug:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle net.i2p.android.donate.debug:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f030035, 0x7f030037, 0x7f030051, 0x7f0300e8, 
      0x7f0301c5, 0x7f0301f2
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable net.i2p.android.donate.debug:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount net.i2p.android.donate.debug:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f03009e, 0x7f0300f3
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AddFloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AddFloatingActionButton_fab_plusIconColor net.i2p.android.donate.debug:fab_plusIconColor}</code></td><td></td></tr>
     * </table>
     * @see #AddFloatingActionButton_fab_plusIconColor
     */
    public static final int[] AddFloatingActionButton={
      0x7f0300ab
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_plusIconColor}
     * attribute's value can be found in the {@link #AddFloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_plusIconColor
     */
    public static final int AddFloatingActionButton_fab_plusIconColor=0;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen net.i2p.android.donate.debug:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout net.i2p.android.donate.debug:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout net.i2p.android.donate.debug:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout net.i2p.android.donate.debug:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout net.i2p.android.donate.debug:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle net.i2p.android.donate.debug:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout net.i2p.android.donate.debug:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f030045, 0x7f030046, 0x7f030131, 
      0x7f030132, 0x7f030153, 0x7f0301b1, 0x7f0301b2
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat net.i2p.android.donate.debug:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint net.i2p.android.donate.debug:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode net.i2p.android.donate.debug:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f0301ba, 0x7f0301e5, 0x7f0301e6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark net.i2p.android.donate.debug:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint net.i2p.android.donate.debug:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode net.i2p.android.donate.debug:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f0301e2, 0x7f0301e3, 0x7f0301e4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize net.i2p.android.donate.debug:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize net.i2p.android.donate.debug:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes net.i2p.android.donate.debug:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity net.i2p.android.donate.debug:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType net.i2p.android.donate.debug:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight net.i2p.android.donate.debug:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily net.i2p.android.donate.debug:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight net.i2p.android.donate.debug:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight net.i2p.android.donate.debug:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps net.i2p.android.donate.debug:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f030030, 0x7f030031, 0x7f030032, 
      0x7f030033, 0x7f030034, 0x7f0300b8, 0x7f0300ba, 
      0x7f0300fa, 0x7f030117, 0x7f0301d2
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=6;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=7;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=8;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=9;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=10;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider net.i2p.android.donate.debug:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground net.i2p.android.donate.debug:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme net.i2p.android.donate.debug:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize net.i2p.android.donate.debug:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle net.i2p.android.donate.debug:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle net.i2p.android.donate.debug:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle net.i2p.android.donate.debug:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle net.i2p.android.donate.debug:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle net.i2p.android.donate.debug:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme net.i2p.android.donate.debug:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme net.i2p.android.donate.debug:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle net.i2p.android.donate.debug:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle net.i2p.android.donate.debug:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance net.i2p.android.donate.debug:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor net.i2p.android.donate.debug:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground net.i2p.android.donate.debug:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle net.i2p.android.donate.debug:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable net.i2p.android.donate.debug:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable net.i2p.android.donate.debug:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable net.i2p.android.donate.debug:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable net.i2p.android.donate.debug:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable net.i2p.android.donate.debug:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle net.i2p.android.donate.debug:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable net.i2p.android.donate.debug:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable net.i2p.android.donate.debug:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground net.i2p.android.donate.debug:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle net.i2p.android.donate.debug:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable net.i2p.android.donate.debug:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle net.i2p.android.donate.debug:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle net.i2p.android.donate.debug:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle net.i2p.android.donate.debug:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle net.i2p.android.donate.debug:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons net.i2p.android.donate.debug:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle net.i2p.android.donate.debug:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme net.i2p.android.donate.debug:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle net.i2p.android.donate.debug:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle net.i2p.android.donate.debug:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle net.i2p.android.donate.debug:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle net.i2p.android.donate.debug:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle net.i2p.android.donate.debug:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle net.i2p.android.donate.debug:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle net.i2p.android.donate.debug:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle net.i2p.android.donate.debug:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall net.i2p.android.donate.debug:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle net.i2p.android.donate.debug:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle net.i2p.android.donate.debug:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent net.i2p.android.donate.debug:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating net.i2p.android.donate.debug:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal net.i2p.android.donate.debug:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated net.i2p.android.donate.debug:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight net.i2p.android.donate.debug:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal net.i2p.android.donate.debug:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError net.i2p.android.donate.debug:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary net.i2p.android.donate.debug:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark net.i2p.android.donate.debug:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal net.i2p.android.donate.debug:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground net.i2p.android.donate.debug:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius net.i2p.android.donate.debug:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding net.i2p.android.donate.debug:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme net.i2p.android.donate.debug:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal net.i2p.android.donate.debug:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical net.i2p.android.donate.debug:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle net.i2p.android.donate.debug:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight net.i2p.android.donate.debug:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground net.i2p.android.donate.debug:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor net.i2p.android.donate.debug:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle net.i2p.android.donate.debug:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator net.i2p.android.donate.debug:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle net.i2p.android.donate.debug:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator net.i2p.android.donate.debug:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog net.i2p.android.donate.debug:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle net.i2p.android.donate.debug:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle net.i2p.android.donate.debug:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight net.i2p.android.donate.debug:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge net.i2p.android.donate.debug:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall net.i2p.android.donate.debug:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft net.i2p.android.donate.debug:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight net.i2p.android.donate.debug:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground net.i2p.android.donate.debug:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme net.i2p.android.donate.debug:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth net.i2p.android.donate.debug:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle net.i2p.android.donate.debug:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle net.i2p.android.donate.debug:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle net.i2p.android.donate.debug:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle net.i2p.android.donate.debug:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator net.i2p.android.donate.debug:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall net.i2p.android.donate.debug:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle net.i2p.android.donate.debug:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle net.i2p.android.donate.debug:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground net.i2p.android.donate.debug:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless net.i2p.android.donate.debug:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle net.i2p.android.donate.debug:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle net.i2p.android.donate.debug:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle net.i2p.android.donate.debug:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu net.i2p.android.donate.debug:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem net.i2p.android.donate.debug:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary net.i2p.android.donate.debug:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall net.i2p.android.donate.debug:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader net.i2p.android.donate.debug:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle net.i2p.android.donate.debug:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle net.i2p.android.donate.debug:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu net.i2p.android.donate.debug:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem net.i2p.android.donate.debug:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl net.i2p.android.donate.debug:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle net.i2p.android.donate.debug:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle net.i2p.android.donate.debug:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor net.i2p.android.donate.debug:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground net.i2p.android.donate.debug:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass net.i2p.android.donate.debug:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar net.i2p.android.donate.debug:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay net.i2p.android.donate.debug:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay net.i2p.android.donate.debug:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor net.i2p.android.donate.debug:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor net.i2p.android.donate.debug:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor net.i2p.android.donate.debug:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor net.i2p.android.donate.debug:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor net.i2p.android.donate.debug:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor net.i2p.android.donate.debug:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle net.i2p.android.donate.debug:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f030000, 0x7f030001, 
      0x7f030002, 0x7f030003, 0x7f030004, 0x7f030005, 
      0x7f030006, 0x7f030007, 0x7f030008, 0x7f030009, 
      0x7f03000a, 0x7f03000b, 0x7f03000c, 0x7f03000e, 
      0x7f03000f, 0x7f030010, 0x7f030011, 0x7f030012, 
      0x7f030013, 0x7f030014, 0x7f030015, 0x7f030016, 
      0x7f030017, 0x7f030018, 0x7f030019, 0x7f03001a, 
      0x7f03001b, 0x7f03001c, 0x7f03001d, 0x7f03001e, 
      0x7f030021, 0x7f030023, 0x7f030024, 0x7f030025, 
      0x7f030026, 0x7f03002f, 0x7f03003e, 0x7f03003f, 
      0x7f030040, 0x7f030041, 0x7f030042, 0x7f030043, 
      0x7f030047, 0x7f030048, 0x7f03004d, 0x7f03004e, 
      0x7f030056, 0x7f030057, 0x7f030058, 0x7f030059, 
      0x7f03005a, 0x7f03005b, 0x7f03005c, 0x7f03005d, 
      0x7f03005e, 0x7f03005f, 0x7f030068, 0x7f03006e, 
      0x7f030073, 0x7f030074, 0x7f030079, 0x7f03007b, 
      0x7f030093, 0x7f030094, 0x7f030096, 0x7f030097, 
      0x7f030099, 0x7f0300ea, 0x7f0300f1, 0x7f03012f, 
      0x7f030130, 0x7f030133, 0x7f030134, 0x7f030135, 
      0x7f030136, 0x7f030137, 0x7f030138, 0x7f030139, 
      0x7f030165, 0x7f030166, 0x7f030167, 0x7f03016b, 
      0x7f03016d, 0x7f030183, 0x7f030199, 0x7f03019a, 
      0x7f03019b, 0x7f0301a1, 0x7f0301a4, 0x7f0301a6, 
      0x7f0301a7, 0x7f0301b7, 0x7f0301b8, 0x7f0301ce, 
      0x7f0301d3, 0x7f0301d4, 0x7f0301d5, 0x7f0301d6, 
      0x7f0301d7, 0x7f0301d8, 0x7f0301d9, 0x7f0301da, 
      0x7f0301db, 0x7f0301dc, 0x7f0301f3, 0x7f0301f4, 
      0x7f0301f5, 0x7f0301f6, 0x7f0301fe, 0x7f030207, 
      0x7f030208, 0x7f030209, 0x7f03020a, 0x7f03020b, 
      0x7f03020c, 0x7f03020d, 0x7f03020e, 0x7f03020f, 
      0x7f030210
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=59;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=60;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=62;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=63;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=64;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=65;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=66;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=67;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=68;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=69;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=70;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=71;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=72;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=73;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=74;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=75;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=76;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=77;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=78;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=79;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=80;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=81;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=82;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=83;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=84;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=85;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=86;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=87;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=88;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=89;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=90;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=91;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=92;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=93;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=94;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=95;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=96;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=97;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=98;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=100;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=102;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=103;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=104;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=105;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=106;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=107;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=108;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=109;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=110;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=111;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=112;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=113;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name net.i2p.android.donate.debug:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=114;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name net.i2p.android.donate.debug:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=115;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name net.i2p.android.donate.debug:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=116;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name net.i2p.android.donate.debug:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=117;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name net.i2p.android.donate.debug:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=118;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name net.i2p.android.donate.debug:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=119;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=120;
    /**
     * Attributes that can be used with a BackgroundStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground net.i2p.android.donate.debug:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
      0x0101030e, 0x7f0301a6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:selectableItemBackground
     */
    public static final int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking net.i2p.android.donate.debug:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f03002a
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState net.i2p.android.donate.debug:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff net.i2p.android.donate.debug:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn net.i2p.android.donate.debug:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x7f030076, 
      0x7f0301c8, 0x7f0301c9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:disableDependentsState
     */
    public static final int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:summaryOff
     */
    public static final int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:summaryOn
     */
    public static final int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be used with a CirclePageIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CirclePageIndicator_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_centered net.i2p.android.donate.debug:centered}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_fillColor net.i2p.android.donate.debug:fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_pageColor net.i2p.android.donate.debug:pageColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_radius net.i2p.android.donate.debug:radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_snap net.i2p.android.donate.debug:snap}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_strokeColor net.i2p.android.donate.debug:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CirclePageIndicator_strokeWidth net.i2p.android.donate.debug:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #CirclePageIndicator_android_orientation
     * @see #CirclePageIndicator_android_background
     * @see #CirclePageIndicator_centered
     * @see #CirclePageIndicator_fillColor
     * @see #CirclePageIndicator_pageColor
     * @see #CirclePageIndicator_radius
     * @see #CirclePageIndicator_snap
     * @see #CirclePageIndicator_strokeColor
     * @see #CirclePageIndicator_strokeWidth
     */
    public static final int[] CirclePageIndicator={
      0x010100c4, 0x010100d4, 0x7f03004b, 0x7f0300b7, 
      0x7f030164, 0x7f030184, 0x7f0301b4, 0x7f0301be, 
      0x7f0301bf
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int CirclePageIndicator_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int CirclePageIndicator_android_background=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#centered}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:centered
     */
    public static final int CirclePageIndicator_centered=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fillColor}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fillColor
     */
    public static final int CirclePageIndicator_fillColor=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#pageColor}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:pageColor
     */
    public static final int CirclePageIndicator_pageColor=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#radius}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:radius
     */
    public static final int CirclePageIndicator_radius=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#snap}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:snap
     */
    public static final int CirclePageIndicator_snap=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#strokeColor}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:strokeColor
     */
    public static final int CirclePageIndicator_strokeColor=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #CirclePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:strokeWidth
     */
    public static final int CirclePageIndicator_strokeWidth=8;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha net.i2p.android.donate.debug:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f03002b
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name net.i2p.android.donate.debug:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint net.i2p.android.donate.debug:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode net.i2p.android.donate.debug:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f030049, 0x7f03004a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:buttonTint
     */
    public static final int CompoundButton_buttonTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=2;
    /**
     * Attributes that can be used with a ConnectionLimitPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConnectionLimitPreference_clp_valueInTitle net.i2p.android.donate.debug:clp_valueInTitle}</code></td><td></td></tr>
     * </table>
     * @see #ConnectionLimitPreference_clp_valueInTitle
     */
    public static final int[] ConnectionLimitPreference={
      0x7f030052
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#clp_valueInTitle}
     * attribute's value can be found in the {@link #ConnectionLimitPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:clp_valueInTitle
     */
    public static final int ConnectionLimitPreference_clp_valueInTitle=0;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines net.i2p.android.donate.debug:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground net.i2p.android.donate.debug:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f0300f9, 0x7f0301bd
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor net.i2p.android.donate.debug:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity net.i2p.android.donate.debug:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior net.i2p.android.donate.debug:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges net.i2p.android.donate.debug:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge net.i2p.android.donate.debug:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline net.i2p.android.donate.debug:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f0300fd, 0x7f0300fe, 0x7f0300ff, 
      0x7f030100, 0x7f030101, 0x7f030102
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon net.i2p.android.donate.debug:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout net.i2p.android.donate.debug:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage net.i2p.android.donate.debug:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle net.i2p.android.donate.debug:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText net.i2p.android.donate.debug:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText net.i2p.android.donate.debug:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
      0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
      0x010101f6, 0x010101f7, 0x7f03006f, 0x7f030070, 
      0x7f030071, 0x7f030075, 0x7f030157, 0x7f03016e
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static final int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static final int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static final int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static final int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static final int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static final int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dialogIcon
     */
    public static final int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dialogLayout
     */
    public static final int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:dialogMessage
     */
    public static final int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:dialogTitle
     */
    public static final int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:negativeButtonText
     */
    public static final int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:positiveButtonText
     */
    public static final int DialogPreference_positiveButtonText=11;
    /**
     * Attributes that can be used with a DrawShadowFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawShadowFrameLayout_shadowDrawable net.i2p.android.donate.debug:shadowDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #DrawShadowFrameLayout_shadowVisible net.i2p.android.donate.debug:shadowVisible}</code></td><td></td></tr>
     * </table>
     * @see #DrawShadowFrameLayout_shadowDrawable
     * @see #DrawShadowFrameLayout_shadowVisible
     */
    public static final int[] DrawShadowFrameLayout={
      0x7f0301aa, 0x7f0301ab
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#shadowDrawable}
     * attribute's value can be found in the {@link #DrawShadowFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:shadowDrawable
     */
    public static final int DrawShadowFrameLayout_shadowDrawable=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#shadowVisible}
     * attribute's value can be found in the {@link #DrawShadowFrameLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:shadowVisible
     */
    public static final int DrawShadowFrameLayout_shadowVisible=1;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength net.i2p.android.donate.debug:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength net.i2p.android.donate.debug:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength net.i2p.android.donate.debug:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color net.i2p.android.donate.debug:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize net.i2p.android.donate.debug:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars net.i2p.android.donate.debug:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars net.i2p.android.donate.debug:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness net.i2p.android.donate.debug:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f03002d, 0x7f03002e, 0x7f03003b, 0x7f030055, 
      0x7f030091, 0x7f0300cb, 0x7f0301b6, 0x7f0301de
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_colorDisabled net.i2p.android.donate.debug:fab_colorDisabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_colorNormal net.i2p.android.donate.debug:fab_colorNormal}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_colorPressed net.i2p.android.donate.debug:fab_colorPressed}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_icon net.i2p.android.donate.debug:fab_icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_size net.i2p.android.donate.debug:fab_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_stroke_visible net.i2p.android.donate.debug:fab_stroke_visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_title net.i2p.android.donate.debug:fab_title}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionButton_fab_colorDisabled
     * @see #FloatingActionButton_fab_colorNormal
     * @see #FloatingActionButton_fab_colorPressed
     * @see #FloatingActionButton_fab_icon
     * @see #FloatingActionButton_fab_size
     * @see #FloatingActionButton_fab_stroke_visible
     * @see #FloatingActionButton_fab_title
     */
    public static final int[] FloatingActionButton={
      0x7f0300a4, 0x7f0300a5, 0x7f0300a6, 0x7f0300a8, 
      0x7f0300ac, 0x7f0300ad, 0x7f0300ae
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_colorDisabled}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_colorDisabled
     */
    public static final int FloatingActionButton_fab_colorDisabled=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_colorNormal}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_colorNormal
     */
    public static final int FloatingActionButton_fab_colorNormal=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_colorPressed}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_colorPressed
     */
    public static final int FloatingActionButton_fab_colorPressed=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_icon}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_icon
     */
    public static final int FloatingActionButton_fab_icon=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_size}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:fab_size
     */
    public static final int FloatingActionButton_fab_size=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_stroke_visible}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_stroke_visible
     */
    public static final int FloatingActionButton_fab_stroke_visible=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_title}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fab_title
     */
    public static final int FloatingActionButton_fab_title=6;
    /**
     * Attributes that can be used with a FloatingActionsMenu.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonColorNormal net.i2p.android.donate.debug:fab_addButtonColorNormal}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonColorPressed net.i2p.android.donate.debug:fab_addButtonColorPressed}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonPlusIconColor net.i2p.android.donate.debug:fab_addButtonPlusIconColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonSize net.i2p.android.donate.debug:fab_addButtonSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonStrokeVisible net.i2p.android.donate.debug:fab_addButtonStrokeVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_expandDirection net.i2p.android.donate.debug:fab_expandDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_labelStyle net.i2p.android.donate.debug:fab_labelStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_labelsPosition net.i2p.android.donate.debug:fab_labelsPosition}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionsMenu_fab_addButtonColorNormal
     * @see #FloatingActionsMenu_fab_addButtonColorPressed
     * @see #FloatingActionsMenu_fab_addButtonPlusIconColor
     * @see #FloatingActionsMenu_fab_addButtonSize
     * @see #FloatingActionsMenu_fab_addButtonStrokeVisible
     * @see #FloatingActionsMenu_fab_expandDirection
     * @see #FloatingActionsMenu_fab_labelStyle
     * @see #FloatingActionsMenu_fab_labelsPosition
     */
    public static final int[] FloatingActionsMenu={
      0x7f03009f, 0x7f0300a0, 0x7f0300a1, 0x7f0300a2, 
      0x7f0300a3, 0x7f0300a7, 0x7f0300a9, 0x7f0300aa
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_addButtonColorNormal}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_addButtonColorNormal
     */
    public static final int FloatingActionsMenu_fab_addButtonColorNormal=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_addButtonColorPressed}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_addButtonColorPressed
     */
    public static final int FloatingActionsMenu_fab_addButtonColorPressed=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_addButtonPlusIconColor}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_addButtonPlusIconColor
     */
    public static final int FloatingActionsMenu_fab_addButtonPlusIconColor=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_addButtonSize}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:fab_addButtonSize
     */
    public static final int FloatingActionsMenu_fab_addButtonSize=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_addButtonStrokeVisible}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_addButtonStrokeVisible
     */
    public static final int FloatingActionsMenu_fab_addButtonStrokeVisible=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_expandDirection}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>down</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>2</td><td></td></tr>
     * <tr><td>right</td><td>3</td><td></td></tr>
     * <tr><td>up</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:fab_expandDirection
     */
    public static final int FloatingActionsMenu_fab_expandDirection=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_labelStyle}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fab_labelStyle
     */
    public static final int FloatingActionsMenu_fab_labelStyle=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fab_labelsPosition}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:fab_labelsPosition
     */
    public static final int FloatingActionsMenu_fab_labelsPosition=7;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority net.i2p.android.donate.debug:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts net.i2p.android.donate.debug:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy net.i2p.android.donate.debug:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout net.i2p.android.donate.debug:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage net.i2p.android.donate.debug:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery net.i2p.android.donate.debug:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f0300bb, 0x7f0300bc, 0x7f0300bd, 0x7f0300be, 
      0x7f0300bf, 0x7f0300c0
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font net.i2p.android.donate.debug:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle net.i2p.android.donate.debug:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings net.i2p.android.donate.debug:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight net.i2p.android.donate.debug:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex net.i2p.android.donate.debug:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f0300b9, 0x7f0300c1, 0x7f0300c2, 
      0x7f0300c3, 0x7f0301fc
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a LinePageIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinePageIndicator_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinePageIndicator_centered net.i2p.android.donate.debug:centered}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinePageIndicator_gapWidth net.i2p.android.donate.debug:gapWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinePageIndicator_lineWidth net.i2p.android.donate.debug:lineWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinePageIndicator_selectedColor net.i2p.android.donate.debug:selectedColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinePageIndicator_strokeWidth net.i2p.android.donate.debug:strokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinePageIndicator_unselectedColor net.i2p.android.donate.debug:unselectedColor}</code></td><td></td></tr>
     * </table>
     * @see #LinePageIndicator_android_background
     * @see #LinePageIndicator_centered
     * @see #LinePageIndicator_gapWidth
     * @see #LinePageIndicator_lineWidth
     * @see #LinePageIndicator_selectedColor
     * @see #LinePageIndicator_strokeWidth
     * @see #LinePageIndicator_unselectedColor
     */
    public static final int[] LinePageIndicator={
      0x010100d4, 0x7f03004b, 0x7f0300cc, 0x7f03012e, 
      0x7f0301a9, 0x7f0301bf, 0x7f0301fd
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #LinePageIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int LinePageIndicator_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#centered}
     * attribute's value can be found in the {@link #LinePageIndicator} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:centered
     */
    public static final int LinePageIndicator_centered=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#gapWidth}
     * attribute's value can be found in the {@link #LinePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:gapWidth
     */
    public static final int LinePageIndicator_gapWidth=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineWidth}
     * attribute's value can be found in the {@link #LinePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineWidth
     */
    public static final int LinePageIndicator_lineWidth=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#selectedColor}
     * attribute's value can be found in the {@link #LinePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:selectedColor
     */
    public static final int LinePageIndicator_selectedColor=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #LinePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:strokeWidth
     */
    public static final int LinePageIndicator_strokeWidth=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#unselectedColor}
     * attribute's value can be found in the {@link #LinePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:unselectedColor
     */
    public static final int LinePageIndicator_unselectedColor=6;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider net.i2p.android.donate.debug:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding net.i2p.android.donate.debug:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild net.i2p.android.donate.debug:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers net.i2p.android.donate.debug:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f030078, 0x7f03007a, 0x7f03014e, 
      0x7f0301ae
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries net.i2p.android.donate.debug:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues net.i2p.android.donate.debug:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     */
    public static final int[] ListPreference={
      0x010100b2, 0x010101f8, 0x7f03009c, 0x7f03009d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:entries
     */
    public static final int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:entryValues
     */
    public static final int ListPreference_entryValues=3;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout net.i2p.android.donate.debug:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass net.i2p.android.donate.debug:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass net.i2p.android.donate.debug:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers net.i2p.android.donate.debug:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription net.i2p.android.donate.debug:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint net.i2p.android.donate.debug:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode net.i2p.android.donate.debug:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers net.i2p.android.donate.debug:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction net.i2p.android.donate.debug:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText net.i2p.android.donate.debug:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f03000d, 0x7f03001f, 0x7f030020, 
      0x7f03002c, 0x7f030061, 0x7f0300ee, 0x7f0300ef, 
      0x7f030158, 0x7f0301ad, 0x7f0301f7
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing net.i2p.android.donate.debug:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow net.i2p.android.donate.debug:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f03017d, 
      0x7f0301c0
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries net.i2p.android.donate.debug:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues net.i2p.android.donate.debug:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
      0x010100b2, 0x010101f8, 0x7f03009c, 0x7f03009d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:entries
     */
    public static final int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:entryValues
     */
    public static final int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a Plot.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Plot_backgroundColor net.i2p.android.donate.debug:backgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_borderColor net.i2p.android.donate.debug:borderColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_borderThickness net.i2p.android.donate.debug:borderThickness}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_marginBottom net.i2p.android.donate.debug:marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_marginLeft net.i2p.android.donate.debug:marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_marginRight net.i2p.android.donate.debug:marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_marginTop net.i2p.android.donate.debug:marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_markupEnabled net.i2p.android.donate.debug:markupEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_paddingBottom net.i2p.android.donate.debug:paddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_paddingLeft net.i2p.android.donate.debug:paddingLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_paddingRight net.i2p.android.donate.debug:paddingRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_paddingTop net.i2p.android.donate.debug:paddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_renderMode net.i2p.android.donate.debug:renderMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_title net.i2p.android.donate.debug:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Plot_titleTextColor net.i2p.android.donate.debug:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * <tr><td><code>{@link #Plot_titleTextSize net.i2p.android.donate.debug:titleTextSize}</code></td><td></td></tr>
     * </table>
     * @see #Plot_backgroundColor
     * @see #Plot_borderColor
     * @see #Plot_borderThickness
     * @see #Plot_marginBottom
     * @see #Plot_marginLeft
     * @see #Plot_marginRight
     * @see #Plot_marginTop
     * @see #Plot_markupEnabled
     * @see #Plot_paddingBottom
     * @see #Plot_paddingLeft
     * @see #Plot_paddingRight
     * @see #Plot_paddingTop
     * @see #Plot_renderMode
     * @see #Plot_title
     * @see #Plot_titleTextColor
     * @see #Plot_titleTextSize
     */
    public static final int[] Plot={
      0x7f030036, 0x7f03003c, 0x7f03003d, 0x7f03013c, 
      0x7f03013d, 0x7f03013e, 0x7f03013f, 0x7f030140, 
      0x7f03015c, 0x7f03015f, 0x7f030160, 0x7f030162, 
      0x7f03019c, 0x7f0301e7, 0x7f0301f0, 0x7f0301f1
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#backgroundColor}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:backgroundColor
     */
    public static final int Plot_backgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#borderColor}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:borderColor
     */
    public static final int Plot_borderColor=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#borderThickness}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:borderThickness
     */
    public static final int Plot_borderThickness=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#marginBottom}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:marginBottom
     */
    public static final int Plot_marginBottom=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#marginLeft}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:marginLeft
     */
    public static final int Plot_marginLeft=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#marginRight}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:marginRight
     */
    public static final int Plot_marginRight=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#marginTop}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:marginTop
     */
    public static final int Plot_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#markupEnabled}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:markupEnabled
     */
    public static final int Plot_markupEnabled=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#paddingBottom}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingBottom
     */
    public static final int Plot_paddingBottom=8;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#paddingLeft}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingLeft
     */
    public static final int Plot_paddingLeft=9;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#paddingRight}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingRight
     */
    public static final int Plot_paddingRight=10;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#paddingTop}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingTop
     */
    public static final int Plot_paddingTop=11;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#renderMode}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>use_background_thread</td><td>0</td><td></td></tr>
     * <tr><td>use_main_thread</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:renderMode
     */
    public static final int Plot_renderMode=12;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#title}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:title
     */
    public static final int Plot_title=13;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:titleTextColor
     */
    public static final int Plot_titleTextColor=14;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#titleTextSize}
     * attribute's value can be found in the {@link #Plot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titleTextSize
     */
    public static final int Plot_titleTextSize=15;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor net.i2p.android.donate.debug:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f03015b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor net.i2p.android.donate.debug:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f0301bc
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove net.i2p.android.donate.debug:allowDividerAbove}</code></td><td>Whether the preference allows displaying divider on top</td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow net.i2p.android.donate.debug:allowDividerBelow}</code></td><td>Whether the preference allows displaying divider below it</td></tr>
     * <tr><td><code>{@link #Preference_defaultValue net.i2p.android.donate.debug:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency net.i2p.android.donate.debug:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enabled net.i2p.android.donate.debug:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_fragment net.i2p.android.donate.debug:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_icon net.i2p.android.donate.debug:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved net.i2p.android.donate.debug:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_isPreferenceVisible net.i2p.android.donate.debug:isPreferenceVisible}</code></td><td>Whether the Preference is visible.</td></tr>
     * <tr><td><code>{@link #Preference_key net.i2p.android.donate.debug:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_layout net.i2p.android.donate.debug:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order net.i2p.android.donate.debug:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent net.i2p.android.donate.debug:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_selectable net.i2p.android.donate.debug:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView net.i2p.android.donate.debug:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle net.i2p.android.donate.debug:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary net.i2p.android.donate.debug:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title net.i2p.android.donate.debug:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout net.i2p.android.donate.debug:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enabled
     * @see #Preference_fragment
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_isPreferenceVisible
     * @see #Preference_key
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
      0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
      0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
      0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
      0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
      0x7f030027, 0x7f030029, 0x7f03006c, 0x7f03006d, 
      0x7f03009b, 0x7f0300ca, 0x7f0300ec, 0x7f0300ed, 
      0x7f0300f6, 0x7f0300f8, 0x7f0300fb, 0x7f030159, 
      0x7f030168, 0x7f0301a5, 0x7f0301ac, 0x7f0301b3, 
      0x7f0301c7, 0x7f0301e7, 0x7f030206
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static final int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static final int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static final int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static final int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static final int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static final int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static final int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static final int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static final int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static final int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:allowDividerAbove
     */
    public static final int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:allowDividerBelow
     */
    public static final int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name net.i2p.android.donate.debug:defaultValue
     */
    public static final int Preference_defaultValue=18;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:dependency
     */
    public static final int Preference_dependency=19;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:enabled
     */
    public static final int Preference_enabled=20;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fragment
     */
    public static final int Preference_fragment=21;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:icon
     */
    public static final int Preference_icon=22;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:iconSpaceReserved
     */
    public static final int Preference_iconSpaceReserved=23;
    /**
     * <p>
     * @attr description
     * Whether the Preference is visible. By default, this is set to true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:isPreferenceVisible
     */
    public static final int Preference_isPreferenceVisible=24;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:key
     */
    public static final int Preference_key=25;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:layout
     */
    public static final int Preference_layout=26;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:order
     */
    public static final int Preference_order=27;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:persistent
     */
    public static final int Preference_persistent=28;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:selectable
     */
    public static final int Preference_selectable=29;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:shouldDisableView
     */
    public static final int Preference_shouldDisableView=30;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:singleLineTitle
     */
    public static final int Preference_singleLineTitle=31;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:summary
     */
    public static final int Preference_summary=32;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:title
     */
    public static final int Preference_title=33;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:widgetLayout
     */
    public static final int Preference_widgetLayout=34;
    /**
     * Attributes that can be used with a PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem net.i2p.android.donate.debug:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f030028
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:allowDividerAfterLastItem
     */
    public static final int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceFragmentCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem net.i2p.android.donate.debug:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f030028
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:allowDividerAfterLastItem
     */
    public static final int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_initialExpandedChildrenCount net.i2p.android.donate.debug:initialExpandedChildrenCount}</code></td><td>The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden.</td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml net.i2p.android.donate.debug:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_initialExpandedChildrenCount
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
      0x010101e7, 0x7f0300f4, 0x7f03015a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static final int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:initialExpandedChildrenCount
     */
    public static final int PreferenceGroup_initialExpandedChildrenCount=1;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:orderingFromXml
     */
    public static final int PreferenceGroup_orderingFromXml=2;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight net.i2p.android.donate.debug:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth net.i2p.android.donate.debug:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
      0x0101011f, 0x01010120, 0x7f03014c, 0x7f03014d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:maxHeight
     */
    public static final int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:maxWidth
     */
    public static final int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle net.i2p.android.donate.debug:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle net.i2p.android.donate.debug:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle net.i2p.android.donate.debug:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle net.i2p.android.donate.debug:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceActivityStyle net.i2p.android.donate.debug:preferenceActivityStyle}</code></td><td>Default style for the PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle net.i2p.android.donate.debug:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle net.i2p.android.donate.debug:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle net.i2p.android.donate.debug:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentPaddingSide net.i2p.android.donate.debug:preferenceFragmentPaddingSide}</code></td><td>Preference fragment padding side</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle net.i2p.android.donate.debug:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceHeaderPanelStyle net.i2p.android.donate.debug:preferenceHeaderPanelStyle}</code></td><td>Preference headers panel style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle net.i2p.android.donate.debug:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceLayoutChild net.i2p.android.donate.debug:preferenceLayoutChild}</code></td><td>The preference layout that has the child/tabbed effect.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceListStyle net.i2p.android.donate.debug:preferenceListStyle}</code></td><td>Preference list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferencePanelStyle net.i2p.android.donate.debug:preferencePanelStyle}</code></td><td>Preference panel style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle net.i2p.android.donate.debug:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle net.i2p.android.donate.debug:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme net.i2p.android.donate.debug:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_ringtonePreferenceStyle net.i2p.android.donate.debug:ringtonePreferenceStyle}</code></td><td>Default style for RingtonePreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle net.i2p.android.donate.debug:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle net.i2p.android.donate.debug:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle net.i2p.android.donate.debug:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_yesNoPreferenceStyle net.i2p.android.donate.debug:yesNoPreferenceStyle}</code></td><td>Default style for YesNoPreference.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceActivityStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentPaddingSide
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceHeaderPanelStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceLayoutChild
     * @see #PreferenceTheme_preferenceListStyle
     * @see #PreferenceTheme_preferencePanelStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_ringtonePreferenceStyle
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     * @see #PreferenceTheme_yesNoPreferenceStyle
     */
    public static final int[] PreferenceTheme={
      0x7f03004c, 0x7f030072, 0x7f030095, 0x7f030098, 
      0x7f03016f, 0x7f030170, 0x7f030171, 0x7f030172, 
      0x7f030173, 0x7f030174, 0x7f030175, 0x7f030176, 
      0x7f030177, 0x7f030178, 0x7f030179, 0x7f03017a, 
      0x7f03017b, 0x7f03017c, 0x7f03019e, 0x7f0301a3, 
      0x7f0301cc, 0x7f0301cd, 0x7f030211
    };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:checkBoxPreferenceStyle
     */
    public static final int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dialogPreferenceStyle
     */
    public static final int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:dropdownPreferenceStyle
     */
    public static final int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:editTextPreferenceStyle
     */
    public static final int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for the PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceActivityStyle
     */
    public static final int PreferenceTheme_preferenceActivityStyle=4;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceCategoryStyle
     */
    public static final int PreferenceTheme_preferenceCategoryStyle=5;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceFragmentCompatStyle
     */
    public static final int PreferenceTheme_preferenceFragmentCompatStyle=6;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceFragmentListStyle
     */
    public static final int PreferenceTheme_preferenceFragmentListStyle=7;
    /**
     * <p>
     * @attr description
     * Preference fragment padding side
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:preferenceFragmentPaddingSide
     */
    public static final int PreferenceTheme_preferenceFragmentPaddingSide=8;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceFragmentStyle
     */
    public static final int PreferenceTheme_preferenceFragmentStyle=9;
    /**
     * <p>
     * @attr description
     * Preference headers panel style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceHeaderPanelStyle
     */
    public static final int PreferenceTheme_preferenceHeaderPanelStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceInformationStyle
     */
    public static final int PreferenceTheme_preferenceInformationStyle=11;
    /**
     * <p>
     * @attr description
     * The preference layout that has the child/tabbed effect.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceLayoutChild
     */
    public static final int PreferenceTheme_preferenceLayoutChild=12;
    /**
     * <p>
     * @attr description
     * Preference list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceListStyle
     */
    public static final int PreferenceTheme_preferenceListStyle=13;
    /**
     * <p>
     * @attr description
     * Preference panel style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferencePanelStyle
     */
    public static final int PreferenceTheme_preferencePanelStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceScreenStyle
     */
    public static final int PreferenceTheme_preferenceScreenStyle=15;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceStyle
     */
    public static final int PreferenceTheme_preferenceStyle=16;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:preferenceTheme
     */
    public static final int PreferenceTheme_preferenceTheme=17;
    /**
     * <p>
     * @attr description
     * Default style for RingtonePreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:ringtonePreferenceStyle
     */
    public static final int PreferenceTheme_ringtonePreferenceStyle=18;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:seekBarPreferenceStyle
     */
    public static final int PreferenceTheme_seekBarPreferenceStyle=19;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:switchPreferenceCompatStyle
     */
    public static final int PreferenceTheme_switchPreferenceCompatStyle=20;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:switchPreferenceStyle
     */
    public static final int PreferenceTheme_switchPreferenceStyle=21;
    /**
     * <p>
     * @attr description
     * Default style for YesNoPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:yesNoPreferenceStyle
     */
    public static final int PreferenceTheme_yesNoPreferenceStyle=22;
    /**
     * Attributes that can be used with a ProgressWheel.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_barColor net.i2p.android.donate.debug:matProg_barColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_barSpinCycleTime net.i2p.android.donate.debug:matProg_barSpinCycleTime}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_barWidth net.i2p.android.donate.debug:matProg_barWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_circleRadius net.i2p.android.donate.debug:matProg_circleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_fillRadius net.i2p.android.donate.debug:matProg_fillRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_linearProgress net.i2p.android.donate.debug:matProg_linearProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_progressIndeterminate net.i2p.android.donate.debug:matProg_progressIndeterminate}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_rimColor net.i2p.android.donate.debug:matProg_rimColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_rimWidth net.i2p.android.donate.debug:matProg_rimWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_matProg_spinSpeed net.i2p.android.donate.debug:matProg_spinSpeed}</code></td><td></td></tr>
     * </table>
     * @see #ProgressWheel_matProg_barColor
     * @see #ProgressWheel_matProg_barSpinCycleTime
     * @see #ProgressWheel_matProg_barWidth
     * @see #ProgressWheel_matProg_circleRadius
     * @see #ProgressWheel_matProg_fillRadius
     * @see #ProgressWheel_matProg_linearProgress
     * @see #ProgressWheel_matProg_progressIndeterminate
     * @see #ProgressWheel_matProg_rimColor
     * @see #ProgressWheel_matProg_rimWidth
     * @see #ProgressWheel_matProg_spinSpeed
     */
    public static final int[] ProgressWheel={
      0x7f030141, 0x7f030142, 0x7f030143, 0x7f030144, 
      0x7f030145, 0x7f030146, 0x7f030147, 0x7f030148, 
      0x7f030149, 0x7f03014a
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_barColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:matProg_barColor
     */
    public static final int ProgressWheel_matProg_barColor=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_barSpinCycleTime}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:matProg_barSpinCycleTime
     */
    public static final int ProgressWheel_matProg_barSpinCycleTime=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_barWidth}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:matProg_barWidth
     */
    public static final int ProgressWheel_matProg_barWidth=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_circleRadius}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:matProg_circleRadius
     */
    public static final int ProgressWheel_matProg_circleRadius=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_fillRadius}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:matProg_fillRadius
     */
    public static final int ProgressWheel_matProg_fillRadius=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_linearProgress}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:matProg_linearProgress
     */
    public static final int ProgressWheel_matProg_linearProgress=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_progressIndeterminate}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:matProg_progressIndeterminate
     */
    public static final int ProgressWheel_matProg_progressIndeterminate=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_rimColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:matProg_rimColor
     */
    public static final int ProgressWheel_matProg_rimColor=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_rimWidth}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:matProg_rimWidth
     */
    public static final int ProgressWheel_matProg_rimWidth=8;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#matProg_spinSpeed}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name net.i2p.android.donate.debug:matProg_spinSpeed
     */
    public static final int ProgressWheel_matProg_spinSpeed=9;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons net.i2p.android.donate.debug:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle net.i2p.android.donate.debug:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f03015d, 0x7f030163
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled net.i2p.android.donate.debug:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable net.i2p.android.donate.debug:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable net.i2p.android.donate.debug:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable net.i2p.android.donate.debug:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable net.i2p.android.donate.debug:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager net.i2p.android.donate.debug:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout net.i2p.android.donate.debug:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount net.i2p.android.donate.debug:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd net.i2p.android.donate.debug:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100f1, 0x7f0300b2, 0x7f0300b3, 
      0x7f0300b4, 0x7f0300b5, 0x7f0300b6, 0x7f0300fc, 
      0x7f03019d, 0x7f0301b5, 0x7f0301bb
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=6;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:layoutManager
     */
    public static final int RecyclerView_layoutManager=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=8;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:spanCount
     */
    public static final int RecyclerView_spanCount=9;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=10;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon net.i2p.android.donate.debug:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon net.i2p.android.donate.debug:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint net.i2p.android.donate.debug:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon net.i2p.android.donate.debug:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault net.i2p.android.donate.debug:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout net.i2p.android.donate.debug:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground net.i2p.android.donate.debug:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint net.i2p.android.donate.debug:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon net.i2p.android.donate.debug:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon net.i2p.android.donate.debug:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground net.i2p.android.donate.debug:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout net.i2p.android.donate.debug:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon net.i2p.android.donate.debug:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f030050, 0x7f030060, 0x7f03006b, 0x7f0300cd, 
      0x7f0300f0, 0x7f0300fb, 0x7f030181, 0x7f030182, 
      0x7f03019f, 0x7f0301a0, 0x7f0301c1, 0x7f0301c6, 
      0x7f0301ff
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable net.i2p.android.donate.debug:adjustable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min net.i2p.android.donate.debug:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_msbp_defaultValue net.i2p.android.donate.debug:msbp_defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_msbp_maxValue net.i2p.android.donate.debug:msbp_maxValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_msbp_measurementUnit net.i2p.android.donate.debug:msbp_measurementUnit}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement net.i2p.android.donate.debug:seekBarIncrement}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue net.i2p.android.donate.debug:showSeekBarValue}</code></td><td></td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_msbp_defaultValue
     * @see #SeekBarPreference_msbp_maxValue
     * @see #SeekBarPreference_msbp_measurementUnit
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     */
    public static final int[] SeekBarPreference={
      0x010100f2, 0x01010136, 0x7f030022, 0x7f03014f, 
      0x7f030150, 0x7f030151, 0x7f030152, 0x7f0301a2, 
      0x7f0301af
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static final int SeekBarPreference_android_max=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#adjustable}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:adjustable
     */
    public static final int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:min
     */
    public static final int SeekBarPreference_min=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#msbp_defaultValue}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:msbp_defaultValue
     */
    public static final int SeekBarPreference_msbp_defaultValue=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#msbp_maxValue}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:msbp_maxValue
     */
    public static final int SeekBarPreference_msbp_maxValue=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#msbp_measurementUnit}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:msbp_measurementUnit
     */
    public static final int SeekBarPreference_msbp_measurementUnit=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#seekBarIncrement}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:seekBarIncrement
     */
    public static final int SeekBarPreference_seekBarIncrement=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#showSeekBarValue}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:showSeekBarValue
     */
    public static final int SeekBarPreference_showSeekBarValue=8;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme net.i2p.android.donate.debug:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f03016c
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText net.i2p.android.donate.debug:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack net.i2p.android.donate.debug:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth net.i2p.android.donate.debug:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding net.i2p.android.donate.debug:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance net.i2p.android.donate.debug:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding net.i2p.android.donate.debug:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint net.i2p.android.donate.debug:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode net.i2p.android.donate.debug:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track net.i2p.android.donate.debug:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint net.i2p.android.donate.debug:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode net.i2p.android.donate.debug:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f0301b0, 
      0x7f0301b9, 0x7f0301ca, 0x7f0301cb, 0x7f0301cf, 
      0x7f0301df, 0x7f0301e0, 0x7f0301e1, 0x7f0301f9, 
      0x7f0301fa, 0x7f0301fb
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState net.i2p.android.donate.debug:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff net.i2p.android.donate.debug:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn net.i2p.android.donate.debug:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff net.i2p.android.donate.debug:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn net.i2p.android.donate.debug:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f030076, 0x7f0301c8, 0x7f0301c9, 
      0x7f0301d0, 0x7f0301d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:disableDependentsState
     */
    public static final int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:summaryOff
     */
    public static final int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:summaryOn
     */
    public static final int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:switchTextOff
     */
    public static final int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:switchTextOn
     */
    public static final int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState net.i2p.android.donate.debug:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff net.i2p.android.donate.debug:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn net.i2p.android.donate.debug:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff net.i2p.android.donate.debug:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn net.i2p.android.donate.debug:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f030076, 0x7f0301c8, 0x7f0301c9, 
      0x7f0301d0, 0x7f0301d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:summaryOff
     */
    public static final int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:summaryOn
     */
    public static final int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:switchTextOff
     */
    public static final int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:switchTextOn
     */
    public static final int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily net.i2p.android.donate.debug:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps net.i2p.android.donate.debug:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_textAllCaps
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x7f0300ba, 
      0x7f0301d2
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:fontFamily
     */
    public static final int TextAppearance_fontFamily=11;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=12;
    /**
     * Attributes that can be used with a TitlePageIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TitlePageIndicator_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_clipPadding net.i2p.android.donate.debug:clipPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_footerColor net.i2p.android.donate.debug:footerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_footerIndicatorHeight net.i2p.android.donate.debug:footerIndicatorHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_footerIndicatorStyle net.i2p.android.donate.debug:footerIndicatorStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_footerIndicatorUnderlinePadding net.i2p.android.donate.debug:footerIndicatorUnderlinePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_footerLineHeight net.i2p.android.donate.debug:footerLineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_footerPadding net.i2p.android.donate.debug:footerPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_linePosition net.i2p.android.donate.debug:linePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_selectedBold net.i2p.android.donate.debug:selectedBold}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_selectedColor net.i2p.android.donate.debug:selectedColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_titlePadding net.i2p.android.donate.debug:titlePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #TitlePageIndicator_topPadding net.i2p.android.donate.debug:topPadding}</code></td><td></td></tr>
     * </table>
     * @see #TitlePageIndicator_android_textSize
     * @see #TitlePageIndicator_android_textColor
     * @see #TitlePageIndicator_android_background
     * @see #TitlePageIndicator_clipPadding
     * @see #TitlePageIndicator_footerColor
     * @see #TitlePageIndicator_footerIndicatorHeight
     * @see #TitlePageIndicator_footerIndicatorStyle
     * @see #TitlePageIndicator_footerIndicatorUnderlinePadding
     * @see #TitlePageIndicator_footerLineHeight
     * @see #TitlePageIndicator_footerPadding
     * @see #TitlePageIndicator_linePosition
     * @see #TitlePageIndicator_selectedBold
     * @see #TitlePageIndicator_selectedColor
     * @see #TitlePageIndicator_titlePadding
     * @see #TitlePageIndicator_topPadding
     */
    public static final int[] TitlePageIndicator={
      0x01010095, 0x01010098, 0x010100d4, 0x7f03004f, 
      0x7f0300c4, 0x7f0300c5, 0x7f0300c6, 0x7f0300c7, 
      0x7f0300c8, 0x7f0300c9, 0x7f03012d, 0x7f0301a8, 
      0x7f0301a9, 0x7f0301ee, 0x7f0301f8
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TitlePageIndicator_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TitlePageIndicator_android_textColor=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int TitlePageIndicator_android_background=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#clipPadding}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:clipPadding
     */
    public static final int TitlePageIndicator_clipPadding=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#footerColor}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:footerColor
     */
    public static final int TitlePageIndicator_footerColor=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#footerIndicatorHeight}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:footerIndicatorHeight
     */
    public static final int TitlePageIndicator_footerIndicatorHeight=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#footerIndicatorStyle}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>triangle</td><td>1</td><td></td></tr>
     * <tr><td>underline</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:footerIndicatorStyle
     */
    public static final int TitlePageIndicator_footerIndicatorStyle=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#footerIndicatorUnderlinePadding}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:footerIndicatorUnderlinePadding
     */
    public static final int TitlePageIndicator_footerIndicatorUnderlinePadding=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#footerLineHeight}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:footerLineHeight
     */
    public static final int TitlePageIndicator_footerLineHeight=8;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#footerPadding}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:footerPadding
     */
    public static final int TitlePageIndicator_footerPadding=9;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#linePosition}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>top</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:linePosition
     */
    public static final int TitlePageIndicator_linePosition=10;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#selectedBold}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:selectedBold
     */
    public static final int TitlePageIndicator_selectedBold=11;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#selectedColor}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:selectedColor
     */
    public static final int TitlePageIndicator_selectedColor=12;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#titlePadding}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titlePadding
     */
    public static final int TitlePageIndicator_titlePadding=13;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#topPadding}
     * attribute's value can be found in the {@link #TitlePageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:topPadding
     */
    public static final int TitlePageIndicator_topPadding=14;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity net.i2p.android.donate.debug:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription net.i2p.android.donate.debug:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon net.i2p.android.donate.debug:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd net.i2p.android.donate.debug:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions net.i2p.android.donate.debug:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft net.i2p.android.donate.debug:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight net.i2p.android.donate.debug:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart net.i2p.android.donate.debug:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation net.i2p.android.donate.debug:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo net.i2p.android.donate.debug:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription net.i2p.android.donate.debug:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight net.i2p.android.donate.debug:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription net.i2p.android.donate.debug:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon net.i2p.android.donate.debug:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme net.i2p.android.donate.debug:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle net.i2p.android.donate.debug:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance net.i2p.android.donate.debug:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor net.i2p.android.donate.debug:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title net.i2p.android.donate.debug:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin net.i2p.android.donate.debug:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom net.i2p.android.donate.debug:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd net.i2p.android.donate.debug:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart net.i2p.android.donate.debug:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop net.i2p.android.donate.debug:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins net.i2p.android.donate.debug:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance net.i2p.android.donate.debug:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor net.i2p.android.donate.debug:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f030044, 0x7f030053, 
      0x7f030054, 0x7f030062, 0x7f030063, 0x7f030064, 
      0x7f030065, 0x7f030066, 0x7f030067, 0x7f03013a, 
      0x7f03013b, 0x7f03014b, 0x7f030154, 0x7f030155, 
      0x7f03016c, 0x7f0301c2, 0x7f0301c3, 0x7f0301c4, 
      0x7f0301e7, 0x7f0301e8, 0x7f0301e9, 0x7f0301ea, 
      0x7f0301eb, 0x7f0301ec, 0x7f0301ed, 0x7f0301ef, 
      0x7f0301f0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=14;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:navigationIcon
     */
    public static final int Toolbar_navigationIcon=15;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:popupTheme
     */
    public static final int Toolbar_popupTheme=16;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:subtitle
     */
    public static final int Toolbar_subtitle=17;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=18;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=19;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:title
     */
    public static final int Toolbar_title=20;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titleMargin
     */
    public static final int Toolbar_titleMargin=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=25;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=26;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=27;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:titleTextColor
     */
    public static final int Toolbar_titleTextColor=28;
    /**
     * Attributes that can be used with a UnderlinePageIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #UnderlinePageIndicator_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #UnderlinePageIndicator_fadeDelay net.i2p.android.donate.debug:fadeDelay}</code></td><td></td></tr>
     * <tr><td><code>{@link #UnderlinePageIndicator_fadeLength net.i2p.android.donate.debug:fadeLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #UnderlinePageIndicator_fades net.i2p.android.donate.debug:fades}</code></td><td></td></tr>
     * <tr><td><code>{@link #UnderlinePageIndicator_selectedColor net.i2p.android.donate.debug:selectedColor}</code></td><td></td></tr>
     * </table>
     * @see #UnderlinePageIndicator_android_background
     * @see #UnderlinePageIndicator_fadeDelay
     * @see #UnderlinePageIndicator_fadeLength
     * @see #UnderlinePageIndicator_fades
     * @see #UnderlinePageIndicator_selectedColor
     */
    public static final int[] UnderlinePageIndicator={
      0x010100d4, 0x7f0300af, 0x7f0300b0, 0x7f0300b1, 
      0x7f0301a9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #UnderlinePageIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int UnderlinePageIndicator_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fadeDelay}
     * attribute's value can be found in the {@link #UnderlinePageIndicator} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:fadeDelay
     */
    public static final int UnderlinePageIndicator_fadeDelay=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fadeLength}
     * attribute's value can be found in the {@link #UnderlinePageIndicator} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name net.i2p.android.donate.debug:fadeLength
     */
    public static final int UnderlinePageIndicator_fadeLength=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#fades}
     * attribute's value can be found in the {@link #UnderlinePageIndicator} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:fades
     */
    public static final int UnderlinePageIndicator_fades=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#selectedColor}
     * attribute's value can be found in the {@link #UnderlinePageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:selectedColor
     */
    public static final int UnderlinePageIndicator_selectedColor=4;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd net.i2p.android.donate.debug:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart net.i2p.android.donate.debug:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme net.i2p.android.donate.debug:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f03015e, 0x7f030161, 
      0x7f0301dd
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint net.i2p.android.donate.debug:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode net.i2p.android.donate.debug:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f030039, 0x7f03003a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewPagerIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewPagerIndicator_vpiCirclePageIndicatorStyle net.i2p.android.donate.debug:vpiCirclePageIndicatorStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewPagerIndicator_vpiIconPageIndicatorStyle net.i2p.android.donate.debug:vpiIconPageIndicatorStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewPagerIndicator_vpiLinePageIndicatorStyle net.i2p.android.donate.debug:vpiLinePageIndicatorStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewPagerIndicator_vpiTabPageIndicatorStyle net.i2p.android.donate.debug:vpiTabPageIndicatorStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewPagerIndicator_vpiTitlePageIndicatorStyle net.i2p.android.donate.debug:vpiTitlePageIndicatorStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewPagerIndicator_vpiUnderlinePageIndicatorStyle net.i2p.android.donate.debug:vpiUnderlinePageIndicatorStyle}</code></td><td></td></tr>
     * </table>
     * @see #ViewPagerIndicator_vpiCirclePageIndicatorStyle
     * @see #ViewPagerIndicator_vpiIconPageIndicatorStyle
     * @see #ViewPagerIndicator_vpiLinePageIndicatorStyle
     * @see #ViewPagerIndicator_vpiTabPageIndicatorStyle
     * @see #ViewPagerIndicator_vpiTitlePageIndicatorStyle
     * @see #ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
     */
    public static final int[] ViewPagerIndicator={
      0x7f030200, 0x7f030201, 0x7f030202, 0x7f030203, 
      0x7f030204, 0x7f030205
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#vpiCirclePageIndicatorStyle}
     * attribute's value can be found in the {@link #ViewPagerIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:vpiCirclePageIndicatorStyle
     */
    public static final int ViewPagerIndicator_vpiCirclePageIndicatorStyle=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#vpiIconPageIndicatorStyle}
     * attribute's value can be found in the {@link #ViewPagerIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:vpiIconPageIndicatorStyle
     */
    public static final int ViewPagerIndicator_vpiIconPageIndicatorStyle=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#vpiLinePageIndicatorStyle}
     * attribute's value can be found in the {@link #ViewPagerIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:vpiLinePageIndicatorStyle
     */
    public static final int ViewPagerIndicator_vpiLinePageIndicatorStyle=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#vpiTabPageIndicatorStyle}
     * attribute's value can be found in the {@link #ViewPagerIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:vpiTabPageIndicatorStyle
     */
    public static final int ViewPagerIndicator_vpiTabPageIndicatorStyle=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#vpiTitlePageIndicatorStyle}
     * attribute's value can be found in the {@link #ViewPagerIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:vpiTitlePageIndicatorStyle
     */
    public static final int ViewPagerIndicator_vpiTitlePageIndicatorStyle=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#vpiUnderlinePageIndicatorStyle}
     * attribute's value can be found in the {@link #ViewPagerIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:vpiUnderlinePageIndicatorStyle
     */
    public static final int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle=5;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
    /**
     * Attributes that can be used with a pie_PieChart.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #pie_PieChart_pieBorderColor net.i2p.android.donate.debug:pieBorderColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #pie_PieChart_pieBorderThickness net.i2p.android.donate.debug:pieBorderThickness}</code></td><td></td></tr>
     * </table>
     * @see #pie_PieChart_pieBorderColor
     * @see #pie_PieChart_pieBorderThickness
     */
    public static final int[] pie_PieChart={
      0x7f030169, 0x7f03016a
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#pieBorderColor}
     * attribute's value can be found in the {@link #pie_PieChart} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:pieBorderColor
     */
    public static final int pie_PieChart_pieBorderColor=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#pieBorderThickness}
     * attribute's value can be found in the {@link #pie_PieChart} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:pieBorderThickness
     */
    public static final int pie_PieChart_pieBorderThickness=1;
    /**
     * Attributes that can be used with a xy_XYPlot.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainLineColor net.i2p.android.donate.debug:domainLineColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainLineExtension net.i2p.android.donate.debug:domainLineExtension}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainLineThickness net.i2p.android.donate.debug:domainLineThickness}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainOriginLineColor net.i2p.android.donate.debug:domainOriginLineColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainOriginLineThickness net.i2p.android.donate.debug:domainOriginLineThickness}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainStep net.i2p.android.donate.debug:domainStep}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainStepMode net.i2p.android.donate.debug:domainStepMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitle net.i2p.android.donate.debug:domainTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleAnchor net.i2p.android.donate.debug:domainTitleAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleHeight net.i2p.android.donate.debug:domainTitleHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleHeightMode net.i2p.android.donate.debug:domainTitleHeightMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleHorizontalPosition net.i2p.android.donate.debug:domainTitleHorizontalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleHorizontalPositioning net.i2p.android.donate.debug:domainTitleHorizontalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleTextColor net.i2p.android.donate.debug:domainTitleTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleTextSize net.i2p.android.donate.debug:domainTitleTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleVerticalPosition net.i2p.android.donate.debug:domainTitleVerticalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleVerticalPositioning net.i2p.android.donate.debug:domainTitleVerticalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleVisible net.i2p.android.donate.debug:domainTitleVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleWidth net.i2p.android.donate.debug:domainTitleWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_domainTitleWidthMode net.i2p.android.donate.debug:domainTitleWidthMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_drawGridOnTop net.i2p.android.donate.debug:drawGridOnTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphAnchor net.i2p.android.donate.debug:graphAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphBackgroundColor net.i2p.android.donate.debug:graphBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphHeight net.i2p.android.donate.debug:graphHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphHeightMode net.i2p.android.donate.debug:graphHeightMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphHorizontalPosition net.i2p.android.donate.debug:graphHorizontalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphHorizontalPositioning net.i2p.android.donate.debug:graphHorizontalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphMarginBottom net.i2p.android.donate.debug:graphMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphMarginLeft net.i2p.android.donate.debug:graphMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphMarginRight net.i2p.android.donate.debug:graphMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphMarginTop net.i2p.android.donate.debug:graphMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphPaddingBottom net.i2p.android.donate.debug:graphPaddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphPaddingLeft net.i2p.android.donate.debug:graphPaddingLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphPaddingRight net.i2p.android.donate.debug:graphPaddingRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphPaddingTop net.i2p.android.donate.debug:graphPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphRotation net.i2p.android.donate.debug:graphRotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphVerticalPosition net.i2p.android.donate.debug:graphVerticalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphVerticalPositioning net.i2p.android.donate.debug:graphVerticalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphVisible net.i2p.android.donate.debug:graphVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphWidth net.i2p.android.donate.debug:graphWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_graphWidthMode net.i2p.android.donate.debug:graphWidthMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_gridBackgroundColor net.i2p.android.donate.debug:gridBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_gridClippingEnabled net.i2p.android.donate.debug:gridClippingEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_gridInsetBottom net.i2p.android.donate.debug:gridInsetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_gridInsetLeft net.i2p.android.donate.debug:gridInsetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_gridInsetRight net.i2p.android.donate.debug:gridInsetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_gridInsetTop net.i2p.android.donate.debug:gridInsetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendAnchor net.i2p.android.donate.debug:legendAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendHeight net.i2p.android.donate.debug:legendHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendHeightMode net.i2p.android.donate.debug:legendHeightMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendHorizontalPosition net.i2p.android.donate.debug:legendHorizontalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendHorizontalPositioning net.i2p.android.donate.debug:legendHorizontalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendIconHeight net.i2p.android.donate.debug:legendIconHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendIconHeightMode net.i2p.android.donate.debug:legendIconHeightMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendIconWidth net.i2p.android.donate.debug:legendIconWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendIconWidthMode net.i2p.android.donate.debug:legendIconWidthMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendTextColor net.i2p.android.donate.debug:legendTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendTextSize net.i2p.android.donate.debug:legendTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendVerticalPosition net.i2p.android.donate.debug:legendVerticalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendVerticalPositioning net.i2p.android.donate.debug:legendVerticalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendVisible net.i2p.android.donate.debug:legendVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendWidth net.i2p.android.donate.debug:legendWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_legendWidthMode net.i2p.android.donate.debug:legendWidthMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineExtensionBottom net.i2p.android.donate.debug:lineExtensionBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineExtensionLeft net.i2p.android.donate.debug:lineExtensionLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineExtensionRight net.i2p.android.donate.debug:lineExtensionRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineExtensionTop net.i2p.android.donate.debug:lineExtensionTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelAlignBottom net.i2p.android.donate.debug:lineLabelAlignBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelAlignLeft net.i2p.android.donate.debug:lineLabelAlignLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelAlignRight net.i2p.android.donate.debug:lineLabelAlignRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelAlignTop net.i2p.android.donate.debug:lineLabelAlignTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelInsetBottom net.i2p.android.donate.debug:lineLabelInsetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelInsetLeft net.i2p.android.donate.debug:lineLabelInsetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelInsetRight net.i2p.android.donate.debug:lineLabelInsetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelInsetTop net.i2p.android.donate.debug:lineLabelInsetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelRotationBottom net.i2p.android.donate.debug:lineLabelRotationBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelRotationLeft net.i2p.android.donate.debug:lineLabelRotationLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelRotationRight net.i2p.android.donate.debug:lineLabelRotationRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelRotationTop net.i2p.android.donate.debug:lineLabelRotationTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextColorBottom net.i2p.android.donate.debug:lineLabelTextColorBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextColorLeft net.i2p.android.donate.debug:lineLabelTextColorLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextColorRight net.i2p.android.donate.debug:lineLabelTextColorRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextColorTop net.i2p.android.donate.debug:lineLabelTextColorTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextSizeBottom net.i2p.android.donate.debug:lineLabelTextSizeBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextSizeLeft net.i2p.android.donate.debug:lineLabelTextSizeLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextSizeRight net.i2p.android.donate.debug:lineLabelTextSizeRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabelTextSizeTop net.i2p.android.donate.debug:lineLabelTextSizeTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_lineLabels net.i2p.android.donate.debug:lineLabels}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_previewMode net.i2p.android.donate.debug:previewMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeLineColor net.i2p.android.donate.debug:rangeLineColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeLineExtension net.i2p.android.donate.debug:rangeLineExtension}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeLineThickness net.i2p.android.donate.debug:rangeLineThickness}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeOriginLineColor net.i2p.android.donate.debug:rangeOriginLineColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeOriginLineThickness net.i2p.android.donate.debug:rangeOriginLineThickness}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeStep net.i2p.android.donate.debug:rangeStep}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeStepMode net.i2p.android.donate.debug:rangeStepMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitle net.i2p.android.donate.debug:rangeTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleAnchor net.i2p.android.donate.debug:rangeTitleAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleHeight net.i2p.android.donate.debug:rangeTitleHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleHeightMode net.i2p.android.donate.debug:rangeTitleHeightMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleHorizontalPosition net.i2p.android.donate.debug:rangeTitleHorizontalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleHorizontalPositioning net.i2p.android.donate.debug:rangeTitleHorizontalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleTextColor net.i2p.android.donate.debug:rangeTitleTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleTextSize net.i2p.android.donate.debug:rangeTitleTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleVerticalPosition net.i2p.android.donate.debug:rangeTitleVerticalPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleVerticalPositioning net.i2p.android.donate.debug:rangeTitleVerticalPositioning}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleVisible net.i2p.android.donate.debug:rangeTitleVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleWidth net.i2p.android.donate.debug:rangeTitleWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #xy_XYPlot_rangeTitleWidthMode net.i2p.android.donate.debug:rangeTitleWidthMode}</code></td><td></td></tr>
     * </table>
     * @see #xy_XYPlot_domainLineColor
     * @see #xy_XYPlot_domainLineExtension
     * @see #xy_XYPlot_domainLineThickness
     * @see #xy_XYPlot_domainOriginLineColor
     * @see #xy_XYPlot_domainOriginLineThickness
     * @see #xy_XYPlot_domainStep
     * @see #xy_XYPlot_domainStepMode
     * @see #xy_XYPlot_domainTitle
     * @see #xy_XYPlot_domainTitleAnchor
     * @see #xy_XYPlot_domainTitleHeight
     * @see #xy_XYPlot_domainTitleHeightMode
     * @see #xy_XYPlot_domainTitleHorizontalPosition
     * @see #xy_XYPlot_domainTitleHorizontalPositioning
     * @see #xy_XYPlot_domainTitleTextColor
     * @see #xy_XYPlot_domainTitleTextSize
     * @see #xy_XYPlot_domainTitleVerticalPosition
     * @see #xy_XYPlot_domainTitleVerticalPositioning
     * @see #xy_XYPlot_domainTitleVisible
     * @see #xy_XYPlot_domainTitleWidth
     * @see #xy_XYPlot_domainTitleWidthMode
     * @see #xy_XYPlot_drawGridOnTop
     * @see #xy_XYPlot_graphAnchor
     * @see #xy_XYPlot_graphBackgroundColor
     * @see #xy_XYPlot_graphHeight
     * @see #xy_XYPlot_graphHeightMode
     * @see #xy_XYPlot_graphHorizontalPosition
     * @see #xy_XYPlot_graphHorizontalPositioning
     * @see #xy_XYPlot_graphMarginBottom
     * @see #xy_XYPlot_graphMarginLeft
     * @see #xy_XYPlot_graphMarginRight
     * @see #xy_XYPlot_graphMarginTop
     * @see #xy_XYPlot_graphPaddingBottom
     * @see #xy_XYPlot_graphPaddingLeft
     * @see #xy_XYPlot_graphPaddingRight
     * @see #xy_XYPlot_graphPaddingTop
     * @see #xy_XYPlot_graphRotation
     * @see #xy_XYPlot_graphVerticalPosition
     * @see #xy_XYPlot_graphVerticalPositioning
     * @see #xy_XYPlot_graphVisible
     * @see #xy_XYPlot_graphWidth
     * @see #xy_XYPlot_graphWidthMode
     * @see #xy_XYPlot_gridBackgroundColor
     * @see #xy_XYPlot_gridClippingEnabled
     * @see #xy_XYPlot_gridInsetBottom
     * @see #xy_XYPlot_gridInsetLeft
     * @see #xy_XYPlot_gridInsetRight
     * @see #xy_XYPlot_gridInsetTop
     * @see #xy_XYPlot_legendAnchor
     * @see #xy_XYPlot_legendHeight
     * @see #xy_XYPlot_legendHeightMode
     * @see #xy_XYPlot_legendHorizontalPosition
     * @see #xy_XYPlot_legendHorizontalPositioning
     * @see #xy_XYPlot_legendIconHeight
     * @see #xy_XYPlot_legendIconHeightMode
     * @see #xy_XYPlot_legendIconWidth
     * @see #xy_XYPlot_legendIconWidthMode
     * @see #xy_XYPlot_legendTextColor
     * @see #xy_XYPlot_legendTextSize
     * @see #xy_XYPlot_legendVerticalPosition
     * @see #xy_XYPlot_legendVerticalPositioning
     * @see #xy_XYPlot_legendVisible
     * @see #xy_XYPlot_legendWidth
     * @see #xy_XYPlot_legendWidthMode
     * @see #xy_XYPlot_lineExtensionBottom
     * @see #xy_XYPlot_lineExtensionLeft
     * @see #xy_XYPlot_lineExtensionRight
     * @see #xy_XYPlot_lineExtensionTop
     * @see #xy_XYPlot_lineLabelAlignBottom
     * @see #xy_XYPlot_lineLabelAlignLeft
     * @see #xy_XYPlot_lineLabelAlignRight
     * @see #xy_XYPlot_lineLabelAlignTop
     * @see #xy_XYPlot_lineLabelInsetBottom
     * @see #xy_XYPlot_lineLabelInsetLeft
     * @see #xy_XYPlot_lineLabelInsetRight
     * @see #xy_XYPlot_lineLabelInsetTop
     * @see #xy_XYPlot_lineLabelRotationBottom
     * @see #xy_XYPlot_lineLabelRotationLeft
     * @see #xy_XYPlot_lineLabelRotationRight
     * @see #xy_XYPlot_lineLabelRotationTop
     * @see #xy_XYPlot_lineLabelTextColorBottom
     * @see #xy_XYPlot_lineLabelTextColorLeft
     * @see #xy_XYPlot_lineLabelTextColorRight
     * @see #xy_XYPlot_lineLabelTextColorTop
     * @see #xy_XYPlot_lineLabelTextSizeBottom
     * @see #xy_XYPlot_lineLabelTextSizeLeft
     * @see #xy_XYPlot_lineLabelTextSizeRight
     * @see #xy_XYPlot_lineLabelTextSizeTop
     * @see #xy_XYPlot_lineLabels
     * @see #xy_XYPlot_previewMode
     * @see #xy_XYPlot_rangeLineColor
     * @see #xy_XYPlot_rangeLineExtension
     * @see #xy_XYPlot_rangeLineThickness
     * @see #xy_XYPlot_rangeOriginLineColor
     * @see #xy_XYPlot_rangeOriginLineThickness
     * @see #xy_XYPlot_rangeStep
     * @see #xy_XYPlot_rangeStepMode
     * @see #xy_XYPlot_rangeTitle
     * @see #xy_XYPlot_rangeTitleAnchor
     * @see #xy_XYPlot_rangeTitleHeight
     * @see #xy_XYPlot_rangeTitleHeightMode
     * @see #xy_XYPlot_rangeTitleHorizontalPosition
     * @see #xy_XYPlot_rangeTitleHorizontalPositioning
     * @see #xy_XYPlot_rangeTitleTextColor
     * @see #xy_XYPlot_rangeTitleTextSize
     * @see #xy_XYPlot_rangeTitleVerticalPosition
     * @see #xy_XYPlot_rangeTitleVerticalPositioning
     * @see #xy_XYPlot_rangeTitleVisible
     * @see #xy_XYPlot_rangeTitleWidth
     * @see #xy_XYPlot_rangeTitleWidthMode
     */
    public static final int[] xy_XYPlot={
      0x7f03007c, 0x7f03007d, 0x7f03007e, 0x7f03007f, 
      0x7f030080, 0x7f030081, 0x7f030082, 0x7f030083, 
      0x7f030084, 0x7f030085, 0x7f030086, 0x7f030087, 
      0x7f030088, 0x7f030089, 0x7f03008a, 0x7f03008b, 
      0x7f03008c, 0x7f03008d, 0x7f03008e, 0x7f03008f, 
      0x7f030090, 0x7f0300ce, 0x7f0300cf, 0x7f0300d0, 
      0x7f0300d1, 0x7f0300d2, 0x7f0300d3, 0x7f0300d4, 
      0x7f0300d5, 0x7f0300d6, 0x7f0300d7, 0x7f0300d8, 
      0x7f0300d9, 0x7f0300da, 0x7f0300db, 0x7f0300dc, 
      0x7f0300dd, 0x7f0300de, 0x7f0300df, 0x7f0300e0, 
      0x7f0300e1, 0x7f0300e2, 0x7f0300e3, 0x7f0300e4, 
      0x7f0300e5, 0x7f0300e6, 0x7f0300e7, 0x7f030103, 
      0x7f030104, 0x7f030105, 0x7f030106, 0x7f030107, 
      0x7f030108, 0x7f030109, 0x7f03010a, 0x7f03010b, 
      0x7f03010c, 0x7f03010d, 0x7f03010e, 0x7f03010f, 
      0x7f030110, 0x7f030111, 0x7f030112, 0x7f030113, 
      0x7f030114, 0x7f030115, 0x7f030116, 0x7f030118, 
      0x7f030119, 0x7f03011a, 0x7f03011b, 0x7f03011c, 
      0x7f03011d, 0x7f03011e, 0x7f03011f, 0x7f030120, 
      0x7f030121, 0x7f030122, 0x7f030123, 0x7f030124, 
      0x7f030125, 0x7f030126, 0x7f030127, 0x7f030128, 
      0x7f030129, 0x7f03012a, 0x7f03012b, 0x7f03012c, 
      0x7f03017e, 0x7f030185, 0x7f030186, 0x7f030187, 
      0x7f030188, 0x7f030189, 0x7f03018a, 0x7f03018b, 
      0x7f03018c, 0x7f03018d, 0x7f03018e, 0x7f03018f, 
      0x7f030190, 0x7f030191, 0x7f030192, 0x7f030193, 
      0x7f030194, 0x7f030195, 0x7f030196, 0x7f030197, 
      0x7f030198
    };
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainLineColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:domainLineColor
     */
    public static final int xy_XYPlot_domainLineColor=0;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainLineExtension}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainLineExtension
     */
    public static final int xy_XYPlot_domainLineExtension=1;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainLineThickness}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainLineThickness
     */
    public static final int xy_XYPlot_domainLineThickness=2;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainOriginLineColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:domainOriginLineColor
     */
    public static final int xy_XYPlot_domainOriginLineColor=3;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainOriginLineThickness}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainOriginLineThickness
     */
    public static final int xy_XYPlot_domainOriginLineThickness=4;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainStep}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainStep
     */
    public static final int xy_XYPlot_domainStep=5;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainStepMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>increment_by_pixels</td><td>2</td><td></td></tr>
     * <tr><td>increment_by_val</td><td>1</td><td></td></tr>
     * <tr><td>subdivide</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:domainStepMode
     */
    public static final int xy_XYPlot_domainStepMode=6;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitle}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:domainTitle
     */
    public static final int xy_XYPlot_domainTitle=7;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleAnchor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:domainTitleAnchor
     */
    public static final int xy_XYPlot_domainTitleAnchor=8;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleHeight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainTitleHeight
     */
    public static final int xy_XYPlot_domainTitleHeight=9;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleHeightMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:domainTitleHeightMode
     */
    public static final int xy_XYPlot_domainTitleHeightMode=10;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleHorizontalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainTitleHorizontalPosition
     */
    public static final int xy_XYPlot_domainTitleHorizontalPosition=11;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleHorizontalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:domainTitleHorizontalPositioning
     */
    public static final int xy_XYPlot_domainTitleHorizontalPositioning=12;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleTextColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:domainTitleTextColor
     */
    public static final int xy_XYPlot_domainTitleTextColor=13;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleTextSize}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainTitleTextSize
     */
    public static final int xy_XYPlot_domainTitleTextSize=14;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleVerticalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainTitleVerticalPosition
     */
    public static final int xy_XYPlot_domainTitleVerticalPosition=15;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleVerticalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:domainTitleVerticalPositioning
     */
    public static final int xy_XYPlot_domainTitleVerticalPositioning=16;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleVisible}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:domainTitleVisible
     */
    public static final int xy_XYPlot_domainTitleVisible=17;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleWidth}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:domainTitleWidth
     */
    public static final int xy_XYPlot_domainTitleWidth=18;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#domainTitleWidthMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:domainTitleWidthMode
     */
    public static final int xy_XYPlot_domainTitleWidthMode=19;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#drawGridOnTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:drawGridOnTop
     */
    public static final int xy_XYPlot_drawGridOnTop=20;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphAnchor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:graphAnchor
     */
    public static final int xy_XYPlot_graphAnchor=21;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphBackgroundColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:graphBackgroundColor
     */
    public static final int xy_XYPlot_graphBackgroundColor=22;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphHeight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphHeight
     */
    public static final int xy_XYPlot_graphHeight=23;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphHeightMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:graphHeightMode
     */
    public static final int xy_XYPlot_graphHeightMode=24;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphHorizontalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphHorizontalPosition
     */
    public static final int xy_XYPlot_graphHorizontalPosition=25;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphHorizontalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:graphHorizontalPositioning
     */
    public static final int xy_XYPlot_graphHorizontalPositioning=26;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphMarginBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphMarginBottom
     */
    public static final int xy_XYPlot_graphMarginBottom=27;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphMarginLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphMarginLeft
     */
    public static final int xy_XYPlot_graphMarginLeft=28;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphMarginRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphMarginRight
     */
    public static final int xy_XYPlot_graphMarginRight=29;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphMarginTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphMarginTop
     */
    public static final int xy_XYPlot_graphMarginTop=30;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphPaddingBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphPaddingBottom
     */
    public static final int xy_XYPlot_graphPaddingBottom=31;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphPaddingLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphPaddingLeft
     */
    public static final int xy_XYPlot_graphPaddingLeft=32;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphPaddingRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphPaddingRight
     */
    public static final int xy_XYPlot_graphPaddingRight=33;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphPaddingTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphPaddingTop
     */
    public static final int xy_XYPlot_graphPaddingTop=34;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphRotation}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>negative_ninety_degrees</td><td>1</td><td></td></tr>
     * <tr><td>ninety_degrees</td><td>0</td><td></td></tr>
     * <tr><td>none</td><td>3</td><td></td></tr>
     * <tr><td>one_hundred_eighty_degrees</td><td>2</td><td>Graph widget is rendered upside-down</td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:graphRotation
     */
    public static final int xy_XYPlot_graphRotation=35;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphVerticalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphVerticalPosition
     */
    public static final int xy_XYPlot_graphVerticalPosition=36;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphVerticalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:graphVerticalPositioning
     */
    public static final int xy_XYPlot_graphVerticalPositioning=37;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphVisible}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:graphVisible
     */
    public static final int xy_XYPlot_graphVisible=38;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphWidth}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:graphWidth
     */
    public static final int xy_XYPlot_graphWidth=39;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#graphWidthMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:graphWidthMode
     */
    public static final int xy_XYPlot_graphWidthMode=40;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#gridBackgroundColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:gridBackgroundColor
     */
    public static final int xy_XYPlot_gridBackgroundColor=41;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#gridClippingEnabled}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:gridClippingEnabled
     */
    public static final int xy_XYPlot_gridClippingEnabled=42;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#gridInsetBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:gridInsetBottom
     */
    public static final int xy_XYPlot_gridInsetBottom=43;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#gridInsetLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:gridInsetLeft
     */
    public static final int xy_XYPlot_gridInsetLeft=44;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#gridInsetRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:gridInsetRight
     */
    public static final int xy_XYPlot_gridInsetRight=45;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#gridInsetTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:gridInsetTop
     */
    public static final int xy_XYPlot_gridInsetTop=46;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendAnchor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:legendAnchor
     */
    public static final int xy_XYPlot_legendAnchor=47;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendHeight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:legendHeight
     */
    public static final int xy_XYPlot_legendHeight=48;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendHeightMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:legendHeightMode
     */
    public static final int xy_XYPlot_legendHeightMode=49;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendHorizontalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:legendHorizontalPosition
     */
    public static final int xy_XYPlot_legendHorizontalPosition=50;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendHorizontalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:legendHorizontalPositioning
     */
    public static final int xy_XYPlot_legendHorizontalPositioning=51;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendIconHeight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:legendIconHeight
     */
    public static final int xy_XYPlot_legendIconHeight=52;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendIconHeightMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:legendIconHeightMode
     */
    public static final int xy_XYPlot_legendIconHeightMode=53;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendIconWidth}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:legendIconWidth
     */
    public static final int xy_XYPlot_legendIconWidth=54;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendIconWidthMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:legendIconWidthMode
     */
    public static final int xy_XYPlot_legendIconWidthMode=55;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendTextColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:legendTextColor
     */
    public static final int xy_XYPlot_legendTextColor=56;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendTextSize}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:legendTextSize
     */
    public static final int xy_XYPlot_legendTextSize=57;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendVerticalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:legendVerticalPosition
     */
    public static final int xy_XYPlot_legendVerticalPosition=58;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendVerticalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:legendVerticalPositioning
     */
    public static final int xy_XYPlot_legendVerticalPositioning=59;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendVisible}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:legendVisible
     */
    public static final int xy_XYPlot_legendVisible=60;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendWidth}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:legendWidth
     */
    public static final int xy_XYPlot_legendWidth=61;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#legendWidthMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:legendWidthMode
     */
    public static final int xy_XYPlot_legendWidthMode=62;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineExtensionBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineExtensionBottom
     */
    public static final int xy_XYPlot_lineExtensionBottom=63;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineExtensionLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineExtensionLeft
     */
    public static final int xy_XYPlot_lineExtensionLeft=64;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineExtensionRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineExtensionRight
     */
    public static final int xy_XYPlot_lineExtensionRight=65;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineExtensionTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineExtensionTop
     */
    public static final int xy_XYPlot_lineExtensionTop=66;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelAlignBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:lineLabelAlignBottom
     */
    public static final int xy_XYPlot_lineLabelAlignBottom=67;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelAlignLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:lineLabelAlignLeft
     */
    public static final int xy_XYPlot_lineLabelAlignLeft=68;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelAlignRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:lineLabelAlignRight
     */
    public static final int xy_XYPlot_lineLabelAlignRight=69;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelAlignTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:lineLabelAlignTop
     */
    public static final int xy_XYPlot_lineLabelAlignTop=70;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelInsetBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelInsetBottom
     */
    public static final int xy_XYPlot_lineLabelInsetBottom=71;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelInsetLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelInsetLeft
     */
    public static final int xy_XYPlot_lineLabelInsetLeft=72;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelInsetRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelInsetRight
     */
    public static final int xy_XYPlot_lineLabelInsetRight=73;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelInsetTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelInsetTop
     */
    public static final int xy_XYPlot_lineLabelInsetTop=74;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelRotationBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name net.i2p.android.donate.debug:lineLabelRotationBottom
     */
    public static final int xy_XYPlot_lineLabelRotationBottom=75;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelRotationLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name net.i2p.android.donate.debug:lineLabelRotationLeft
     */
    public static final int xy_XYPlot_lineLabelRotationLeft=76;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelRotationRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name net.i2p.android.donate.debug:lineLabelRotationRight
     */
    public static final int xy_XYPlot_lineLabelRotationRight=77;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelRotationTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name net.i2p.android.donate.debug:lineLabelRotationTop
     */
    public static final int xy_XYPlot_lineLabelRotationTop=78;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextColorBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextColorBottom
     */
    public static final int xy_XYPlot_lineLabelTextColorBottom=79;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextColorLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextColorLeft
     */
    public static final int xy_XYPlot_lineLabelTextColorLeft=80;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextColorRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextColorRight
     */
    public static final int xy_XYPlot_lineLabelTextColorRight=81;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextColorTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextColorTop
     */
    public static final int xy_XYPlot_lineLabelTextColorTop=82;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextSizeBottom}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextSizeBottom
     */
    public static final int xy_XYPlot_lineLabelTextSizeBottom=83;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextSizeLeft}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextSizeLeft
     */
    public static final int xy_XYPlot_lineLabelTextSizeLeft=84;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextSizeRight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextSizeRight
     */
    public static final int xy_XYPlot_lineLabelTextSizeRight=85;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabelTextSizeTop}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:lineLabelTextSizeTop
     */
    public static final int xy_XYPlot_lineLabelTextSizeTop=86;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#lineLabels}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>8</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:lineLabels
     */
    public static final int xy_XYPlot_lineLabels=87;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#previewMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bar</td><td>2</td><td></td></tr>
     * <tr><td>candlestick</td><td>1</td><td></td></tr>
     * <tr><td>line_and_point</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:previewMode
     */
    public static final int xy_XYPlot_previewMode=88;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeLineColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:rangeLineColor
     */
    public static final int xy_XYPlot_rangeLineColor=89;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeLineExtension}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeLineExtension
     */
    public static final int xy_XYPlot_rangeLineExtension=90;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeLineThickness}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeLineThickness
     */
    public static final int xy_XYPlot_rangeLineThickness=91;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeOriginLineColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:rangeOriginLineColor
     */
    public static final int xy_XYPlot_rangeOriginLineColor=92;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeOriginLineThickness}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeOriginLineThickness
     */
    public static final int xy_XYPlot_rangeOriginLineThickness=93;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeStep}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeStep
     */
    public static final int xy_XYPlot_rangeStep=94;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeStepMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>increment_by_pixels</td><td>2</td><td></td></tr>
     * <tr><td>increment_by_val</td><td>1</td><td></td></tr>
     * <tr><td>subdivide</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:rangeStepMode
     */
    public static final int xy_XYPlot_rangeStepMode=95;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitle}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name net.i2p.android.donate.debug:rangeTitle
     */
    public static final int xy_XYPlot_rangeTitle=96;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleAnchor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom_middle</td><td>7</td><td></td></tr>
     * <tr><td>center</td><td>8</td><td></td></tr>
     * <tr><td>left_bottom</td><td>3</td><td></td></tr>
     * <tr><td>left_middle</td><td>2</td><td></td></tr>
     * <tr><td>left_top</td><td>1</td><td></td></tr>
     * <tr><td>right_bottom</td><td>6</td><td></td></tr>
     * <tr><td>right_middle</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>4</td><td></td></tr>
     * <tr><td>top_middle</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleAnchor
     */
    public static final int xy_XYPlot_rangeTitleAnchor=97;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleHeight}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleHeight
     */
    public static final int xy_XYPlot_rangeTitleHeight=98;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleHeightMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleHeightMode
     */
    public static final int xy_XYPlot_rangeTitleHeightMode=99;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleHorizontalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleHorizontalPosition
     */
    public static final int xy_XYPlot_rangeTitleHorizontalPosition=100;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleHorizontalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_left</td><td>0</td><td></td></tr>
     * <tr><td>absolute_from_right</td><td>1</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_left</td><td>3</td><td></td></tr>
     * <tr><td>relative_from_right</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleHorizontalPositioning
     */
    public static final int xy_XYPlot_rangeTitleHorizontalPositioning=101;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleTextColor}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleTextColor
     */
    public static final int xy_XYPlot_rangeTitleTextColor=102;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleTextSize}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleTextSize
     */
    public static final int xy_XYPlot_rangeTitleTextSize=103;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleVerticalPosition}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleVerticalPosition
     */
    public static final int xy_XYPlot_rangeTitleVerticalPosition=104;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleVerticalPositioning}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute_from_bottom</td><td>1</td><td></td></tr>
     * <tr><td>absolute_from_center</td><td>2</td><td></td></tr>
     * <tr><td>absolute_from_top</td><td>0</td><td></td></tr>
     * <tr><td>relative_from_bottom</td><td>4</td><td></td></tr>
     * <tr><td>relative_from_center</td><td>5</td><td></td></tr>
     * <tr><td>relative_from_top</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleVerticalPositioning
     */
    public static final int xy_XYPlot_rangeTitleVerticalPositioning=105;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleVisible}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleVisible
     */
    public static final int xy_XYPlot_rangeTitleVisible=106;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleWidth}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleWidth
     */
    public static final int xy_XYPlot_rangeTitleWidth=107;
    /**
     * <p>This symbol is the offset where the {@link net.i2p.android.donate.debug.R.attr#rangeTitleWidthMode}
     * attribute's value can be found in the {@link #xy_XYPlot} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>absolute</td><td>0</td><td></td></tr>
     * <tr><td>fill</td><td>2</td><td></td></tr>
     * <tr><td>relative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name net.i2p.android.donate.debug:rangeTitleWidthMode
     */
    public static final int xy_XYPlot_rangeTitleWidthMode=108;
  }
  public static final class xml {
    public static final int searchable_addressbook=0x7f110000;
    public static final int settings=0x7f110001;
    public static final int settings_advanced=0x7f110002;
    public static final int settings_appearance=0x7f110003;
    public static final int settings_expl_tunnels=0x7f110004;
    public static final int settings_graphs=0x7f110005;
    public static final int settings_headers=0x7f110006;
    public static final int settings_headers_legacy=0x7f110007;
    public static final int settings_logging=0x7f110008;
    public static final int settings_net=0x7f110009;
    public static final int settings_transports=0x7f11000a;
    public static final int tunnel_adv=0x7f11000b;
    public static final int tunnel_adv_client_http=0x7f11000c;
    public static final int tunnel_adv_client_proxy=0x7f11000d;
    public static final int tunnel_adv_idle=0x7f11000e;
    public static final int tunnel_adv_idle_client=0x7f11000f;
    public static final int tunnel_adv_other=0x7f110010;
    public static final int tunnel_adv_server=0x7f110011;
    public static final int tunnel_adv_server_http=0x7f110012;
    public static final int tunnel_gen=0x7f110013;
    public static final int tunnel_gen_client=0x7f110014;
    public static final int tunnel_gen_client_irc=0x7f110015;
    public static final int tunnel_gen_client_port=0x7f110016;
    public static final int tunnel_gen_client_proxy=0x7f110017;
    public static final int tunnel_gen_server_http=0x7f110018;
    public static final int tunnel_gen_server_port=0x7f110019;
  }
}